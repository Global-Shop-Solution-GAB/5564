Program.Sub.ScreenSU.Start
Gui.frmAPAutomationIndex..Create(DashForm)
Gui.frmAPAutomationIndex..Caption("AP Invoice Review")
Gui.frmAPAutomationIndex..Size(1390,864)
Gui.frmAPAutomationIndex..MinX(0)
Gui.frmAPAutomationIndex..MinY(0)
Gui.frmAPAutomationIndex..Position(0,0)
Gui.frmAPAutomationIndex..AlwaysOnTop(False)
Gui.frmAPAutomationIndex..FontName("Tahoma")
Gui.frmAPAutomationIndex..FontSize(8.25)
Gui.frmAPAutomationIndex..ControlBox(True)
Gui.frmAPAutomationIndex..MaxButton(True)
Gui.frmAPAutomationIndex..MinButton(True)
Gui.frmAPAutomationIndex..MousePointer(0)
Gui.frmAPAutomationIndex..Moveable(True)
Gui.frmAPAutomationIndex..Sizeable(True)
Gui.frmAPAutomationIndex..ShowInTaskBar(True)
Gui.frmAPAutomationIndex..TitleBar(True)
Gui.frmAPAutomationIndex..BarSaveButton(True,False)
Gui.frmAPAutomationIndex..BarPrintButton(False)
Gui.frmAPAutomationIndex..BarUndoButtons(False,True,True,True)
Gui.frmAPAutomationIndex..BarRefreshButton(True)
Gui.frmAPAutomationIndex..BarHelpButton(False,"","","",1.0.0,"1/01/0001 12:00:00 am","",0,0,False)
Gui.frmAPAutomationIndex..Windowstate(2)
Gui.frmAPAutomationIndex..Event(HelpButtonClick,frmAPAutomationIndex_HelpButtonClick)
Gui.frmAPAutomationIndex..Event(RefreshClick,frmAPAutomationIndex_RefreshClick)
Gui.frmAPAutomationIndex..Event(SaveButtonClick,frmProcessAPConformationOpenGUI)
Gui.frmAPAutomationIndex..Event(UnLoad,frmUnload)
Gui.frmAPAutomationIndex..Event(UserButtonClicked,frmAPAutomationIndex_UserButtonClicked)
Gui.frmAPAutomationIndex.lblRowID.Create(Label,"",True,71,16,0,349,105,True,0,"Tahoma",8,,0,0)
Gui.frmAPAutomationIndex.lblRowID.Visible(False)
Gui.frmAPAutomationIndex.SplitContainerLeft.Create(SplitContainer)
Gui.frmAPAutomationIndex.SplitContainerLeft.Enabled(True)
Gui.frmAPAutomationIndex.SplitContainerLeft.Visible(True)
Gui.frmAPAutomationIndex.SplitContainerLeft.Zorder(0)
Gui.frmAPAutomationIndex.SplitContainerLeft.Size(1024,690)
Gui.frmAPAutomationIndex.SplitContainerLeft.Position(0,0)
Gui.frmAPAutomationIndex.SplitContainerLeft.Orientation(0)
Gui.frmAPAutomationIndex.SplitContainerLeft.SplitterPosition(200)
Gui.frmAPAutomationIndex.SplitContainerLeft.Collapsed(False)
Gui.frmAPAutomationIndex.SplitContainerLeft.Dock(5)
Gui.frmAPAutomationIndex.SplitContainerRight.Create(SplitContainer)
Gui.frmAPAutomationIndex.SplitContainerRight.Enabled(True)
Gui.frmAPAutomationIndex.SplitContainerRight.Visible(True)
Gui.frmAPAutomationIndex.SplitContainerRight.Zorder(0)
Gui.frmAPAutomationIndex.SplitContainerRight.Size(869,690)
Gui.frmAPAutomationIndex.SplitContainerRight.Position(0,0)
Gui.frmAPAutomationIndex.SplitContainerRight.Orientation(0)
Gui.frmAPAutomationIndex.SplitContainerRight.SplitterPosition(500)
Gui.frmAPAutomationIndex.SplitContainerRight.Collapsed(False)
Gui.frmAPAutomationIndex.SplitContainerRight.Parent("SplitContainerLeft",1)
Gui.frmAPAutomationIndex.SplitContainerRight.Dock(5)
Gui.frmAPAutomationIndex.SplitContainerBottom.Create(SplitContainer)
Gui.frmAPAutomationIndex.SplitContainerBottom.Enabled(True)
Gui.frmAPAutomationIndex.SplitContainerBottom.Visible(True)
Gui.frmAPAutomationIndex.SplitContainerBottom.Zorder(0)
Gui.frmAPAutomationIndex.SplitContainerBottom.Size(718,690)
Gui.frmAPAutomationIndex.SplitContainerBottom.Position(0,0)
Gui.frmAPAutomationIndex.SplitContainerBottom.Orientation(1)
Gui.frmAPAutomationIndex.SplitContainerBottom.SplitterPosition(475)
Gui.frmAPAutomationIndex.SplitContainerBottom.Collapsed(False)
Gui.frmAPAutomationIndex.SplitContainerBottom.Parent("SplitContainerRight",0)
Gui.frmAPAutomationIndex.SplitContainerBottom.Dock(5)
Gui.frmAPAutomationIndex.SplitContainerTop.Create(SplitContainer)
Gui.frmAPAutomationIndex.SplitContainerTop.Enabled(True)
Gui.frmAPAutomationIndex.SplitContainerTop.Visible(True)
Gui.frmAPAutomationIndex.SplitContainerTop.Zorder(0)
Gui.frmAPAutomationIndex.SplitContainerTop.Size(718,518)
Gui.frmAPAutomationIndex.SplitContainerTop.Position(0,0)
Gui.frmAPAutomationIndex.SplitContainerTop.Orientation(1)
Gui.frmAPAutomationIndex.SplitContainerTop.SplitterPosition(235)
Gui.frmAPAutomationIndex.SplitContainerTop.Collapsed(False)
Gui.frmAPAutomationIndex.SplitContainerTop.Parent("SplitContainerBottom",0)
Gui.frmAPAutomationIndex.SplitContainerTop.Dock(5)
Gui.frmAPAutomationIndex.htmlContainer1.Create(GSWebBrowser)
Gui.frmAPAutomationIndex.htmlContainer1.Visible(True)
Gui.frmAPAutomationIndex.htmlContainer1.Zorder(0)
Gui.frmAPAutomationIndex.htmlContainer1.Size(154,783)
Gui.frmAPAutomationIndex.htmlContainer1.Position(0,0)
Gui.frmAPAutomationIndex.htmlContainer1.Parent("SplitContainerRight",1)
Gui.frmAPAutomationIndex.htmlContainer1.Dock(5)
Gui.frmAPAutomationIndex.gsgcRecLineItems.Create(GsGridControl)
Gui.frmAPAutomationIndex.gsgcRecLineItems.Enabled(True)
Gui.frmAPAutomationIndex.gsgcRecLineItems.Visible(True)
Gui.frmAPAutomationIndex.gsgcRecLineItems.Zorder(0)
Gui.frmAPAutomationIndex.gsgcRecLineItems.Size(250,335)
Gui.frmAPAutomationIndex.gsgcRecLineItems.Position(0,602)
Gui.frmAPAutomationIndex.gsgcRecLineItems.Parent("SplitContainerTop",1)
Gui.frmAPAutomationIndex.gsgcRecLineItems.Dock(5)
Gui.frmAPAutomationIndex.gsgcRecLineItems.Event(RowCellClick,gsgcRecLineItems_RowCellClick)
Gui.frmAPAutomationIndex.gsgcRecLineItems.Event(CellValueChanged,gsgcRecLineItems_CellValueChanged)
Gui.frmAPAutomationIndex.gsgcRecLineItems.Event(MouseDown,gsgcRecLineItems_MouseDown)
Gui.frmAPAutomationIndex.gsgcRecLineItems.Event(MouseUp,gsgcRecLineItems_MouseUp)
Gui.frmAPAutomationIndex.gsgcRecLineItems.Event(LostFocus,gsgcRecLineItems_LostFocus)
Gui.frmAPAutomationIndex.gsgcRecLineItems.Event(KeyPress,gsgcRecLineItems_KeyPress)
Gui.frmAPAutomationIndex.gsgcRecLineItems.Event(KeyPressEnter,gsgcRecLineItems_KeyPressEnter)
Gui.frmAPAutomationIndex.flow1.Create(FlowFrame)
Gui.frmAPAutomationIndex.flow1.Enabled(True)
Gui.frmAPAutomationIndex.flow1.Visible(True)
Gui.frmAPAutomationIndex.flow1.Zorder(0)
Gui.frmAPAutomationIndex.flow1.Size(50,50)
Gui.frmAPAutomationIndex.flow1.Position(126,142)
Gui.frmAPAutomationIndex.flow1.Parent("SplitContainerTop",1)
Gui.frmAPAutomationIndex.flow1.Dock(2)
Gui.frmAPAutomationIndex.cmdSave.Create(Button)
Gui.frmAPAutomationIndex.cmdSave.Enabled(True)
Gui.frmAPAutomationIndex.cmdSave.Visible(True)
Gui.frmAPAutomationIndex.cmdSave.Zorder(0)
Gui.frmAPAutomationIndex.cmdSave.Size(112,34)
Gui.frmAPAutomationIndex.cmdSave.Position(628,138)
Gui.frmAPAutomationIndex.cmdSave.Caption("Save")
Gui.frmAPAutomationIndex.cmdSave.FontName("Tahoma")
Gui.frmAPAutomationIndex.cmdSave.FontSize(8)
Gui.frmAPAutomationIndex.cmdSave.BackColor(12648384)
Gui.frmAPAutomationIndex.cmdSave.Event(Click,cmdSave_click)
Gui.frmAPAutomationIndex.cmdSave.Parent("flow1")
Gui.frmAPAutomationIndex.cmdSaveApprove.Create(Button)
Gui.frmAPAutomationIndex.cmdSaveApprove.Enabled(True)
Gui.frmAPAutomationIndex.cmdSaveApprove.Visible(True)
Gui.frmAPAutomationIndex.cmdSaveApprove.Zorder(0)
Gui.frmAPAutomationIndex.cmdSaveApprove.Size(112,34)
Gui.frmAPAutomationIndex.cmdSaveApprove.Position(624,23)
Gui.frmAPAutomationIndex.cmdSaveApprove.Caption("Save and Approve")
Gui.frmAPAutomationIndex.cmdSaveApprove.FontName("Tahoma")
Gui.frmAPAutomationIndex.cmdSaveApprove.FontSize(8)
Gui.frmAPAutomationIndex.cmdSaveApprove.BackColor(12648384)
Gui.frmAPAutomationIndex.cmdSaveApprove.Event(Click,cmdSaveApprove_Click)
Gui.frmAPAutomationIndex.cmdSaveApprove.Parent("flow1")
Gui.frmAPAutomationIndex.cmdReject.Create(Button)
Gui.frmAPAutomationIndex.cmdReject.Enabled(True)
Gui.frmAPAutomationIndex.cmdReject.Visible(True)
Gui.frmAPAutomationIndex.cmdReject.Zorder(0)
Gui.frmAPAutomationIndex.cmdReject.Size(112,34)
Gui.frmAPAutomationIndex.cmdReject.Position(627,65)
Gui.frmAPAutomationIndex.cmdReject.Caption("Reject")
Gui.frmAPAutomationIndex.cmdReject.FontName("Tahoma")
Gui.frmAPAutomationIndex.cmdReject.FontSize(8)
Gui.frmAPAutomationIndex.cmdReject.BackColor(12632319)
Gui.frmAPAutomationIndex.cmdReject.Event(Click,cmdReject_Click)
Gui.frmAPAutomationIndex.cmdReject.Parent("flow1")
Gui.frmAPAutomationIndex.cmdReject.Dock(SplitContainer1,0)
Gui.frmAPAutomationIndex.cmdSkipNext.Create(Button)
Gui.frmAPAutomationIndex.cmdSkipNext.Enabled(True)
Gui.frmAPAutomationIndex.cmdSkipNext.Visible(True)
Gui.frmAPAutomationIndex.cmdSkipNext.Zorder(0)
Gui.frmAPAutomationIndex.cmdSkipNext.Size(112,34)
Gui.frmAPAutomationIndex.cmdSkipNext.Position(627,65)
Gui.frmAPAutomationIndex.cmdSkipNext.Caption("Skip Next")
Gui.frmAPAutomationIndex.cmdSkipNext.FontName("Tahoma")
Gui.frmAPAutomationIndex.cmdSkipNext.FontSize(8)
Gui.frmAPAutomationIndex.cmdSkipNext.BackColor(16761024)
Gui.frmAPAutomationIndex.cmdSkipNext.Event(Click,cmdSkipNext_Click)
Gui.frmAPAutomationIndex.cmdSkipNext.Parent("flow1")
Gui.frmAPAutomationIndex.cmdSkipNext.Dock(SplitContainer1,0)
Gui.frmAPAutomationIndex.cmdQueue.Create(Button)
Gui.frmAPAutomationIndex.cmdQueue.Enabled(True)
Gui.frmAPAutomationIndex.cmdQueue.Visible(False)
Gui.frmAPAutomationIndex.cmdQueue.Zorder(0)
Gui.frmAPAutomationIndex.cmdQueue.Size(112,34)
Gui.frmAPAutomationIndex.cmdQueue.Position(624,99)
Gui.frmAPAutomationIndex.cmdQueue.Caption("Queue")
Gui.frmAPAutomationIndex.cmdQueue.FontName("Tahoma")
Gui.frmAPAutomationIndex.cmdQueue.FontSize(8)
Gui.frmAPAutomationIndex.cmdQueue.DisableOnClick(20)
Gui.frmAPAutomationIndex.cmdQueue.BackColor(8454143)
Gui.frmAPAutomationIndex.cmdQueue.Parent("flow1")
Gui.frmAPAutomationIndex.cmdQueue.Event(Click,cmdQueue_Click)
Gui.frmAPAutomationIndex.tabDetails.Create(Tab)
Gui.frmAPAutomationIndex.tabDetails.Enabled(True)
Gui.frmAPAutomationIndex.tabDetails.Visible(True)
Gui.frmAPAutomationIndex.tabDetails.Zorder(0)
Gui.frmAPAutomationIndex.tabDetails.Size(429,300)
Gui.frmAPAutomationIndex.tabDetails.Position(0,0)
Gui.frmAPAutomationIndex.tabDetails.FontName("Tahoma")
Gui.frmAPAutomationIndex.tabDetails.FontSize(8.25)
Gui.frmAPAutomationIndex.tabDetails.Parent("SplitContainerBottom",1)
Gui.frmAPAutomationIndex.tabDetails.Dock(5)
Gui.frmAPAutomationIndex.tabDetails.Tabs(3)
Gui.frmAPAutomationIndex.tabDetails.SetTab(0)
Gui.frmAPAutomationIndex.tabDetails.Caption("Open Purchase Orders")
Gui.frmAPAutomationIndex.tabDetails.SetTab(1)
Gui.frmAPAutomationIndex.tabDetails.Caption("Open Invoices/Accruals")
'Gui.frmAPAutomationIndex.tabDetails.SetTab(2)
'Gui.frmAPAutomationIndex.tabDetails.Caption("Previous Invoices")
Gui.frmAPAutomationIndex.gsgcPOLines.Create(GsGridControl)
Gui.frmAPAutomationIndex.gsgcPOLines.Enabled(True)
Gui.frmAPAutomationIndex.gsgcPOLines.Visible(True)
Gui.frmAPAutomationIndex.gsgcPOLines.Zorder(0)
Gui.frmAPAutomationIndex.gsgcPOLines.Size(811,179)
Gui.frmAPAutomationIndex.gsgcPOLines.Position(0,0)
Gui.frmAPAutomationIndex.gsgcPOLines.Parent("tabDetails",0)
Gui.frmAPAutomationIndex.gsgcPOLines.Dock(5)
Gui.frmAPAutomationIndex.gsgcPOLines.Event(RowCellClick,gsgcPOLines_RowCellClick)
Gui.frmAPAutomationIndex.gsgcAPInvoices.Create(GsGridControl)
Gui.frmAPAutomationIndex.gsgcAPInvoices.Enabled(True)
Gui.frmAPAutomationIndex.gsgcAPInvoices.Visible(True)
Gui.frmAPAutomationIndex.gsgcAPInvoices.Zorder(0)
Gui.frmAPAutomationIndex.gsgcAPInvoices.Size(811,179)
Gui.frmAPAutomationIndex.gsgcAPInvoices.Position(0,0)
Gui.frmAPAutomationIndex.gsgcAPInvoices.Parent("tabDetails",1)
Gui.frmAPAutomationIndex.gsgcAPInvoices.Dock(5)
Gui.frmAPAutomationIndex.tabs.Create(Tab)
Gui.frmAPAutomationIndex.tabs.Enabled(True)
Gui.frmAPAutomationIndex.tabs.Visible(True)
Gui.frmAPAutomationIndex.tabs.Zorder(0)
Gui.frmAPAutomationIndex.tabs.Size(340,791)
Gui.frmAPAutomationIndex.tabs.Position(0,0)
Gui.frmAPAutomationIndex.tabs.FontName("Tahoma")
Gui.frmAPAutomationIndex.tabs.FontSize(9)
Gui.frmAPAutomationIndex.tabs.Parent("SplitContainerLeft",0)
Gui.frmAPAutomationIndex.tabs.Dock(5)
Gui.frmAPAutomationIndex.tabs.Tabs(5)
Gui.frmAPAutomationIndex.tabs.SetTab(0)
Gui.frmAPAutomationIndex.tabs.Caption("Queue")
Gui.frmAPAutomationIndex.tabs.SetTab(1)
Gui.frmAPAutomationIndex.tabs.Caption("Saved")
Gui.frmAPAutomationIndex.tabs.SetTab(2)
Gui.frmAPAutomationIndex.tabs.Caption("Approved")
Gui.frmAPAutomationIndex.tabs.SetTab(3)
Gui.frmAPAutomationIndex.tabs.Caption("Processed")
Gui.frmAPAutomationIndex.tabs.SetTab(4)
Gui.frmAPAutomationIndex.tabs.Caption("Rejected")
Gui.frmAPAutomationIndex.tabs.Event(Click,tabs_Click)
Gui.frmAPAutomationIndex.gsgcSaved.Create(GsGridControl)
Gui.frmAPAutomationIndex.gsgcSaved.Enabled(True)
Gui.frmAPAutomationIndex.gsgcSaved.Visible(True)
Gui.frmAPAutomationIndex.gsgcSaved.Zorder(0)
Gui.frmAPAutomationIndex.gsgcSaved.Size(259,742)
Gui.frmAPAutomationIndex.gsgcSaved.Position(0,0)
Gui.frmAPAutomationIndex.gsgcSaved.Anchor(15)
Gui.frmAPAutomationIndex.gsgcSaved.Parent("tabs",1)
Gui.frmAPAutomationIndex.gsgcSaved.FlowBreak(True)
Gui.frmAPAutomationIndex.gsgcSaved.Dock(5)
Gui.frmAPAutomationIndex.gsgcSaved.Event(RowCellClick,gsgcSaved_RowCellClick)
Gui.frmAPAutomationIndex.gsgcApproved.Create(GsGridControl)
Gui.frmAPAutomationIndex.gsgcApproved.Enabled(True)
Gui.frmAPAutomationIndex.gsgcApproved.Visible(True)
Gui.frmAPAutomationIndex.gsgcApproved.Zorder(0)
Gui.frmAPAutomationIndex.gsgcApproved.Size(259,742)
Gui.frmAPAutomationIndex.gsgcApproved.Position(0,0)
Gui.frmAPAutomationIndex.gsgcApproved.Anchor(15)
Gui.frmAPAutomationIndex.gsgcApproved.Parent("tabs",2)
Gui.frmAPAutomationIndex.gsgcApproved.FlowBreak(True)
Gui.frmAPAutomationIndex.gsgcApproved.Dock(5)
Gui.frmAPAutomationIndex.gsgcApproved.Event(RowCellClick,gsgcApproved_RowCellClick)
Gui.frmAPAutomationIndex.gsgcQueue.Create(GsGridControl)
Gui.frmAPAutomationIndex.gsgcQueue.Enabled(True)
Gui.frmAPAutomationIndex.gsgcQueue.Visible(True)
Gui.frmAPAutomationIndex.gsgcQueue.Zorder(0)
Gui.frmAPAutomationIndex.gsgcQueue.Size(255,742)
Gui.frmAPAutomationIndex.gsgcQueue.Position(0,0)
Gui.frmAPAutomationIndex.gsgcQueue.Parent("tabs",0)
Gui.frmAPAutomationIndex.gsgcQueue.Anchor(15)
Gui.frmAPAutomationIndex.gsgcQueue.Dock(5)
Gui.frmAPAutomationIndex.gsgcQueue.Event(RowCellClick,gsgcQueue_RowCellClick)
Gui.frmAPAutomationIndex.gsgcReject.Create(GsGridControl)
Gui.frmAPAutomationIndex.gsgcReject.Enabled(True)
Gui.frmAPAutomationIndex.gsgcReject.Visible(True)
Gui.frmAPAutomationIndex.gsgcReject.Zorder(0)
Gui.frmAPAutomationIndex.gsgcReject.Size(286,749)
Gui.frmAPAutomationIndex.gsgcReject.Position(0,0)
Gui.frmAPAutomationIndex.gsgcReject.Parent("tabs",4)
Gui.frmAPAutomationIndex.gsgcReject.Anchor(15)
Gui.frmAPAutomationIndex.gsgcReject.Dock(5)
Gui.frmAPAutomationIndex.gsgcReject.FlowBreak(True)
Gui.frmAPAutomationIndex.gsgcReject.Event(RowCellClick,gsgcReject_RowCellClick)
Gui.frmAPAutomationIndex.gsgcProcessed.Create(GsGridControl)
Gui.frmAPAutomationIndex.gsgcProcessed.Enabled(True)
Gui.frmAPAutomationIndex.gsgcProcessed.Visible(True)
Gui.frmAPAutomationIndex.gsgcProcessed.Zorder(0)
Gui.frmAPAutomationIndex.gsgcProcessed.Size(286,763)
Gui.frmAPAutomationIndex.gsgcProcessed.Position(0,0)
Gui.frmAPAutomationIndex.gsgcProcessed.Parent("tabs",3)
Gui.frmAPAutomationIndex.gsgcProcessed.Anchor(15)
Gui.frmAPAutomationIndex.gsgcProcessed.Dock(5)
Gui.frmAPAutomationIndex.gsgcProcessed.Event(RowCellClick,gsgcProcessed_RowCellClick)
Gui.frmAPAutomationIndex.lblPOReference.Create(Label,"PO Reference",True,71,16,0,10,105,True,0,"Tahoma",8,,0,0)
Gui.frmAPAutomationIndex.lblPOReference.BorderStyle(0)
Gui.frmAPAutomationIndex.lblPOReference.Parent("SplitContainerTop",0)
Gui.frmAPAutomationIndex.lblGST.Create(Label,"GST",True,24,16,0,10,150,True,0,"Tahoma",8,,0,0)
Gui.frmAPAutomationIndex.lblGST.BorderStyle(0)
Gui.frmAPAutomationIndex.lblGST.Parent("SplitContainerTop",0)
Gui.frmAPAutomationIndex.lblTotal.Create(Label,"Total",True,35,16,0,10,173,True,0,"Tahoma",8,,0,0)
Gui.frmAPAutomationIndex.lblTotal.BorderStyle(0)
Gui.frmAPAutomationIndex.lblTotal.Parent("SplitContainerTop",0)
Gui.frmAPAutomationIndex.lblGSTCheck.Create(Label,"",True,200,16,0,250,173,True,0,"Tahoma",8,,0,0)
Gui.frmAPAutomationIndex.lblGSTCheck.BorderStyle(0)
Gui.frmAPAutomationIndex.lblGSTCheck.Parent("SplitContainerTop",0)
Gui.frmAPAutomationIndex.lblEPart.Create(Label,"Part",True,35,13,0,12,122,True,0,"Tahoma",8.25,,0,0)
Gui.frmAPAutomationIndex.lblEPart.BorderStyle(0)
Gui.frmAPAutomationIndex.lblEPart.Position(10,215)
Gui.frmAPAutomationIndex.lblEPart.Parent("SplitContainerTop",0)
Gui.frmAPAutomationIndex.txtEPart.Create(TextBox,"",True,94,20,0,11,133,True,0,"Tahoma",8.25,,1)
Gui.frmAPAutomationIndex.txtEPart.Parent("SplitContainerTop",0)
Gui.frmAPAutomationIndex.txtEPart.Position(10,225)
Gui.frmAPAutomationIndex.txtELoc.Create(TextBox,"",True,28,20,0,113,133,True,0,"Tahoma",8.25,,1)
Gui.frmAPAutomationIndex.txtELoc.Parent("SplitContainerTop",0)
Gui.frmAPAutomationIndex.txtELoc.Position(106,225)
Gui.frmAPAutomationIndex.txtEVarianceAmt.Create(TextBox,"",True,100,20,0,195,176,True,0,"Tahoma",8.25,,1)
Gui.frmAPAutomationIndex.txtEVarianceAmt.Position(480,135)
Gui.frmAPAutomationIndex.txtEVarianceAmt.Parent("SplitContainerTop",0)
Gui.frmAPAutomationIndex.txtEVarianceAmt.Enabled(false)
Gui.frmAPAutomationIndex.lblEVarianceAmt.Create(Label,"Variance Amt",True,82,13,0,198,160,True,0,"Tahoma",8.25,,0,0)
Gui.frmAPAutomationIndex.lblEVarianceAmt.BorderStyle(0)
Gui.frmAPAutomationIndex.lblEVarianceAmt.Position(480,125)
Gui.frmAPAutomationIndex.lblEVarianceAmt.Parent("SplitContainerTop",0)
Gui.frmAPAutomationIndex.txtEVarianceAcct.Create(TextBox,"",True,100,20,0,195,176,True,0,"Tahoma",8.25,,1)
Gui.frmAPAutomationIndex.txtEVarianceAcct.NumericOnly(1)
Gui.frmAPAutomationIndex.txtEVarianceAcct.Position(600,135)
Gui.frmAPAutomationIndex.txtEVarianceAcct.Parent("SplitContainerTop",0)
Gui.frmAPAutomationIndex.lblEVarianceAcct.Create(Label,"Variance Acct",True,82,13,0,198,160,True,0,"Tahoma",8.25,,0,0)
Gui.frmAPAutomationIndex.lblEVarianceAcct.BorderStyle(0)
Gui.frmAPAutomationIndex.lblEVarianceAcct.Position(600,125)
Gui.frmAPAutomationIndex.lblEVarianceAcct.Parent("SplitContainerTop",0)
Gui.frmAPAutomationIndex.cmdEVarBrowse.Create(Button)
Gui.frmAPAutomationIndex.cmdEVarBrowse.Enabled(True)
Gui.frmAPAutomationIndex.cmdEVarBrowse.Visible(True)
Gui.frmAPAutomationIndex.cmdEVarBrowse.Zorder(0)
Gui.frmAPAutomationIndex.cmdEVarBrowse.Size(34,20)
Gui.frmAPAutomationIndex.cmdEVarBrowse.Position(720,135)
Gui.frmAPAutomationIndex.cmdEVarBrowse.Caption("^")
Gui.frmAPAutomationIndex.cmdEVarBrowse.FontName("Tahoma")
Gui.frmAPAutomationIndex.cmdEVarBrowse.FontSize(8.25)
Gui.frmAPAutomationIndex.cmdEVarBrowse.Event(Click,cmdEVarBrowse_Click)
Gui.frmAPAutomationIndex.cmdEVarBrowse.Parent("SplitContainerTop",0)
Gui.frmAPAutomationIndex.cmdEVarAdd.Create(Button)
Gui.frmAPAutomationIndex.cmdEVarAdd.Enabled(True)
Gui.frmAPAutomationIndex.cmdEVarAdd.Visible(True)
Gui.frmAPAutomationIndex.cmdEVarAdd.Zorder(0)
Gui.frmAPAutomationIndex.cmdEVarAdd.Size(220,20)
Gui.frmAPAutomationIndex.cmdEVarAdd.Position(480,165)
Gui.frmAPAutomationIndex.cmdEVarAdd.Caption("Add Variance")
Gui.frmAPAutomationIndex.cmdEVarAdd.FontName("Tahoma")
Gui.frmAPAutomationIndex.cmdEVarAdd.FontSize(8.25)
Gui.frmAPAutomationIndex.cmdEVarAdd.Event(Click,cmdEVarAdd_Click)
Gui.frmAPAutomationIndex.cmdEVarAdd.Parent("SplitContainerTop",0)
Gui.frmAPAutomationIndex.cmdLearn.Create(Button)
Gui.frmAPAutomationIndex.cmdLearn.Enabled(False)
Gui.frmAPAutomationIndex.cmdLearn.Visible(True)
Gui.frmAPAutomationIndex.cmdLearn.Zorder(0)
Gui.frmAPAutomationIndex.cmdLearn.Size(45,20)
Gui.frmAPAutomationIndex.cmdLearn.Position(190,7)
Gui.frmAPAutomationIndex.cmdLearn.Caption("Learn")
Gui.frmAPAutomationIndex.cmdLearn.FontName("Tahoma")
Gui.frmAPAutomationIndex.cmdLearn.FontSize(8.25)
Gui.frmAPAutomationIndex.cmdLearn.Event(Click,cmdLearn_Click)
Gui.frmAPAutomationIndex.cmdLearn.Parent("SplitContainerTop",0)
Gui.frmAPAutomationIndex.cmdPOShowNegative.Create(Button)
Gui.frmAPAutomationIndex.cmdPOShowNegative.Enabled(False)
Gui.frmAPAutomationIndex.cmdPOShowNegative.Visible(True)
Gui.frmAPAutomationIndex.cmdPOShowNegative.Zorder(0)
Gui.frmAPAutomationIndex.cmdPOShowNegative.Size(200,20)
Gui.frmAPAutomationIndex.cmdPOShowNegative.Position(480,269)
Gui.frmAPAutomationIndex.cmdPOShowNegative.Caption("Show All Receipts for PO")
Gui.frmAPAutomationIndex.cmdPOShowNegative.FontName("Tahoma")
Gui.frmAPAutomationIndex.cmdPOShowNegative.FontSize(8.25)
Gui.frmAPAutomationIndex.cmdPOShowNegative.Event(Click,cmdPOShowNegative_Click)
Gui.frmAPAutomationIndex.cmdPOShowNegative.Parent("SplitContainerTop",0)
Gui.frmAPAutomationIndex.cmdPOShowAll.Create(Button)
Gui.frmAPAutomationIndex.cmdPOShowAll.Enabled(True)
Gui.frmAPAutomationIndex.cmdPOShowAll.Visible(True)
Gui.frmAPAutomationIndex.cmdPOShowAll.Zorder(0)
Gui.frmAPAutomationIndex.cmdPOShowAll.Size(200,20)
Gui.frmAPAutomationIndex.cmdPOShowAll.Position(480,246)
Gui.frmAPAutomationIndex.cmdPOShowAll.Caption("Show All Receipts for Vendor")
Gui.frmAPAutomationIndex.cmdPOShowAll.FontName("Tahoma")
Gui.frmAPAutomationIndex.cmdPOShowAll.FontSize(8.25)
Gui.frmAPAutomationIndex.cmdPOShowAll.Event(Click,cmdPOShowAll_Click)
Gui.frmAPAutomationIndex.cmdPOShowAll.Parent("SplitContainerTop",0)
Gui.frmAPAutomationIndex.lblSubtotal.Create(Label,"Subtotal",True,47,16,0,10,128,True,0,"Tahoma",8,,0,0)
Gui.frmAPAutomationIndex.lblSubtotal.BorderStyle(0)
Gui.frmAPAutomationIndex.lblSubtotal.Parent("SplitContainerTop",0)
Gui.frmAPAutomationIndex.lblAPInvDtl.Create(Label,"AP Invoice Details",True,182,28,0,37,6,True,0,"Tahoma",14,,0,0)
Gui.frmAPAutomationIndex.lblAPInvDtl.BorderStyle(0)
Gui.frmAPAutomationIndex.lblAPInvDtl.FlowBreak(True)
Gui.frmAPAutomationIndex.lblAPInvDtl.Parent("SplitContainerTop",0)
Gui.frmAPAutomationIndex.txtDocIDCopy.Create(Textbox,"DOCID",True,90,16,0,763,0,True,0,"Tahoma",8,,0,0)
Gui.frmAPAutomationIndex.txtDocIDCopy.BorderStyle(0)
Gui.frmAPAutomationIndex.txtDocIDCopy.Position(610,15)
Gui.frmAPAutomationIndex.txtDocIDCopy.Visible(True)
Gui.frmAPAutomationIndex.txtDocIDCopy.Parent("SplitContainerTop",0)
Gui.frmAPAutomationIndex.txtDocIDCopy.Enabled(False)
Gui.frmAPAutomationIndex.lblCurrency.Create(Label,"",True,160,16,0,250,152,True,0,"Tahoma",8,,0,0)
Gui.frmAPAutomationIndex.lblCurrency.BorderStyle(0)
Gui.frmAPAutomationIndex.lblCurrency.Parent("SplitContainerTop",0)
Gui.frmAPAutomationIndex.lblNotes.Create(Label,"Notes:",True,70,16,0,430,20,True,0,"Tahoma",8,,0,0)
Gui.frmAPAutomationIndex.lblNotes.BorderStyle(0)
Gui.frmAPAutomationIndex.lblNotes.Parent("SplitContainerTop",0)
Gui.frmAPAutomationIndex.txtNotes.Create(TextboxM)
Gui.frmAPAutomationIndex.txtNotes.Enabled(True)
Gui.frmAPAutomationIndex.txtNotes.Visible(True)
Gui.frmAPAutomationIndex.txtNotes.Zorder(0)
Gui.frmAPAutomationIndex.txtNotes.Size(270,80)
Gui.frmAPAutomationIndex.txtNotes.Position(430,34)
Gui.frmAPAutomationIndex.txtNotes.FontName("Tahoma")
Gui.frmAPAutomationIndex.txtNotes.FontSize(8.25)
Gui.frmAPAutomationIndex.txtNotes.Enabled(False)
Gui.frmAPAutomationIndex.txtNotes.Event(LostFocus,txtNotes_LostFocus)
Gui.frmAPAutomationIndex.txtNotes.Parent("SplitContainerTop",0)
Gui.frmAPAutomationIndex.optInvoice.Create(Option)
Gui.frmAPAutomationIndex.optInvoice.Enabled(True)
Gui.frmAPAutomationIndex.optInvoice.Visible(False)
Gui.frmAPAutomationIndex.optInvoice.Zorder(0)
Gui.frmAPAutomationIndex.optInvoice.Size(104,24)
Gui.frmAPAutomationIndex.optInvoice.Position(870,32)
Gui.frmAPAutomationIndex.optInvoice.Caption("Invoice")
Gui.frmAPAutomationIndex.optInvoice.FontName("Tahoma")
Gui.frmAPAutomationIndex.optInvoice.FontSize(8.25)
Gui.frmAPAutomationIndex.optInvoice.Event(Click,InvoiceTypeInvoice)
Gui.frmAPAutomationIndex.optInvoice.Parent("SplitContainerTop",0)
Gui.frmAPAutomationIndex.optAccrual.Create(Option)
Gui.frmAPAutomationIndex.optAccrual.Enabled(True)
Gui.frmAPAutomationIndex.optAccrual.Visible(False)
Gui.frmAPAutomationIndex.optAccrual.Zorder(0)
Gui.frmAPAutomationIndex.optAccrual.Size(104,24)
Gui.frmAPAutomationIndex.optAccrual.Position(870,52)
Gui.frmAPAutomationIndex.optAccrual.Caption("Accrual")
Gui.frmAPAutomationIndex.optAccrual.FontName("Tahoma")
Gui.frmAPAutomationIndex.optAccrual.FontSize(8.25)
Gui.frmAPAutomationIndex.optAccrual.Event(Click,InvoiceTypeAccrual)
Gui.frmAPAutomationIndex.optAccrual.Parent("SplitContainerTop",0)
Gui.frmAPAutomationIndex.optCreditNote.Create(Option)
Gui.frmAPAutomationIndex.optCreditNote.Enabled(True)
Gui.frmAPAutomationIndex.optCreditNote.Visible(False)
Gui.frmAPAutomationIndex.optCreditNote.Zorder(0)
Gui.frmAPAutomationIndex.optCreditNote.Size(104,24)
Gui.frmAPAutomationIndex.optCreditNote.Position(670,72)
Gui.frmAPAutomationIndex.optCreditNote.Caption("Credit")
Gui.frmAPAutomationIndex.optCreditNote.FontName("Tahoma")
Gui.frmAPAutomationIndex.optCreditNote.FontSize(8.25)
Gui.frmAPAutomationIndex.optCreditNote.Event(Click,InvoiceTypeCreditNote)
Gui.frmAPAutomationIndex.optCreditNote.Parent("SplitContainerTop",0)
Gui.frmAPAutomationIndex.txtSupplierName.Create(TextBox,"",True,150,22,0,95,34,True,0,"Tahoma",8,,1)
Gui.frmAPAutomationIndex.txtSupplierName.FlowBreak(True)
Gui.frmAPAutomationIndex.txtSupplierName.Parent("SplitContainerTop",0)
Gui.frmAPAutomationIndex.txtSupplierName.Enabled(False)
Gui.frmAPAutomationIndex.txtInvNum.Create(TextBox,"",True,150,22,0,95,56,True,0,"Tahoma",8,,1)
Gui.frmAPAutomationIndex.txtInvNum.FlowBreak(True)
Gui.frmAPAutomationIndex.txtInvNum.Parent("SplitContainerTop",0)
Gui.frmAPAutomationIndex.txtInvNum.Event(LostFocus,txtInvoiceNumber_LostFocus)
Gui.frmAPAutomationIndex.txtInvdate.Create(TextBox,"",True,150,22,0,95,78,True,0,"Tahoma",8,,1)
Gui.frmAPAutomationIndex.txtInvdate.FlowBreak(True)
Gui.frmAPAutomationIndex.txtInvdate.Parent("SplitContainerTop",0)
Gui.frmAPAutomationIndex.txtInvdate.Event(LostFocus,txtInvoiceDate_LostFocus)
Gui.frmAPAutomationIndex.txtPORef.Create(TextBox,"",True,150,22,0,95,100,True,0,"Tahoma",8,,1)
Gui.frmAPAutomationIndex.txtPORef.FlowBreak(True)
Gui.frmAPAutomationIndex.txtPORef.Parent("SplitContainerTop",0)
Gui.frmAPAutomationIndex.txtPORef.Event(LostFocus,txtPORef_LostFocus)
Gui.frmAPAutomationIndex.chkMultiPO.Create(CheckBox)
Gui.frmAPAutomationIndex.chkMultiPO.Size(1560,360)
Gui.frmAPAutomationIndex.chkMultiPO.Position(250,120)
Gui.frmAPAutomationIndex.chkMultiPO.Caption("Multiple PO")
Gui.frmAPAutomationIndex.chkMultiPO.Parent("SplitContainerTop",0)
Gui.frmAPAutomationIndex.chkMultiPO.Event(Click,chkMultiPO_Click)
Gui.frmAPAutomationIndex.lblXRefConnect.Create(Label,"",True,78,16,0,250,35,True,0,"Tahoma",8,,0,0)
Gui.frmAPAutomationIndex.lblXRefConnect.BorderStyle(0)
Gui.frmAPAutomationIndex.lblXRefConnect.ForeColor(255)
Gui.frmAPAutomationIndex.lblXRefConnect.Parent("SplitContainerTop",0)
Gui.frmAPAutomationIndex.lblCreateVendor.Create(Label,"Create Vendor",True,80,16,0,250,47,True,0,"Tahoma",8,,0,0)
Gui.frmAPAutomationIndex.lblCreateVendor.BorderStyle(0)
Gui.frmAPAutomationIndex.lblCreateVendor.ForeColor(255)
Gui.frmAPAutomationIndex.lblCreateVendor.FlowBreak(True)
Gui.frmAPAutomationIndex.lblCreateVendor.Parent("SplitContainerTop",0)
Gui.frmAPAutomationIndex.lblCreatePO.Create(Label,"Create PO",True,80,16,0,250,60,True,0,"Tahoma",8,,0,0)
Gui.frmAPAutomationIndex.lblCreatePO.BorderStyle(0)
Gui.frmAPAutomationIndex.lblCreatePO.ForeColor(255)
Gui.frmAPAutomationIndex.lblCreatePO.Parent("SplitContainerTop",0)
Gui.frmAPAutomationIndex.lblReceivePO.Create(Label,"Receive PO",True,80,16,0,250,73,True,0,"Tahoma",8,,0,0)
Gui.frmAPAutomationIndex.lblReceivePO.BorderStyle(0)
Gui.frmAPAutomationIndex.lblReceivePO.ForeColor(255)
Gui.frmAPAutomationIndex.lblReceivePO.Parent("SplitContainerTop",0)
Gui.frmAPAutomationIndex.lblInvoiceExists.Create(Label,"Invoice Exist",True,200,16,0,250,86,True,0,"Tahoma",8,,0,0)
Gui.frmAPAutomationIndex.lblInvoiceExists.BorderStyle(0)
Gui.frmAPAutomationIndex.lblInvoiceExists.ForeColor(255)
Gui.frmAPAutomationIndex.lblInvoiceExists.Parent("SplitContainerTop",0)
Gui.frmAPAutomationIndex.lblInvoiceExistsSA.Create(Label,"",True,200,16,0,250,99,True,0,"Tahoma",8,,0,0)
Gui.frmAPAutomationIndex.lblInvoiceExistsSA.BorderStyle(0)
Gui.frmAPAutomationIndex.lblInvoiceExistsSA.ForeColor(255)
Gui.frmAPAutomationIndex.lblInvoiceExistsSA.Parent("SplitContainerTop",0)
Gui.frmAPAutomationIndex.lblPOVendor.Create(Label,"PO Vendor",True,160,16,0,250,112,True,0,"Tahoma",8,,0,0)
Gui.frmAPAutomationIndex.lblPOVendor.BorderStyle(0)
Gui.frmAPAutomationIndex.lblPOVendor.ForeColor(255)
Gui.frmAPAutomationIndex.lblPOVendor.Parent("SplitContainerTop",0)
Gui.frmAPAutomationIndex.cmdSupplierXRefSearch.Create(Button)
Gui.frmAPAutomationIndex.cmdSupplierXRefSearch.Enabled(False)
Gui.frmAPAutomationIndex.cmdSupplierXRefSearch.Visible(true)
Gui.frmAPAutomationIndex.cmdSupplierXRefSearch.Zorder(0)
Gui.frmAPAutomationIndex.cmdSupplierXRefSearch.Size(75,15)
Gui.frmAPAutomationIndex.cmdSupplierXRefSearch.Position(335,34)
Gui.frmAPAutomationIndex.cmdSupplierXRefSearch.Caption("Link XRef")
Gui.frmAPAutomationIndex.cmdSupplierXRefSearch.FontName("Tahoma")
Gui.frmAPAutomationIndex.cmdSupplierXRefSearch.FontSize(8.25)
Gui.frmAPAutomationIndex.cmdSupplierXRefSearch.Event(Click,cmdSupplierXRefSearch_Click)
Gui.frmAPAutomationIndex.cmdSupplierXRefSearch.Parent("SplitContainerTop",0)
Gui.frmAPAutomationIndex.txtSubTotal.Create(TextBox,"",True,150,22,0,95,122,True,0,"Tahoma",8,,1)
Gui.frmAPAutomationIndex.txtSubTotal.FlowBreak(True)
Gui.frmAPAutomationIndex.txtSubTotal.Parent("SplitContainerTop",0)
Gui.frmAPAutomationIndex.txtSubTotal.Event(LostFocus,txtSubtotal_LostFocus)
Gui.frmAPAutomationIndex.txtGST.Create(TextBox,"",True,150,22,0,95,144,True,0,"Tahoma",8,,1)
Gui.frmAPAutomationIndex.txtGST.FlowBreak(True) 
Gui.frmAPAutomationIndex.txtGST.Parent("SplitContainerTop",0)
Gui.frmAPAutomationIndex.txtGST.Event(LostFocus,txtGST_LostFocus)
Gui.frmAPAutomationIndex.txtGTotal.Create(TextBox,"",True,150,22,0,95,166,True,0,"Tahoma",8,,1)'total text box
Gui.frmAPAutomationIndex.txtGTotal.FlowBreak(True)
Gui.frmAPAutomationIndex.txtGTotal.Parent("SplitContainerTop",0)
Gui.frmAPAutomationIndex.txtGTotal.Visible(True)
Gui.frmAPAutomationIndex.txtGTotal.Enabled(False)
Gui.frmAPAutomationIndex.lblGSTCheck.Create(Label,"Set GST",True,78,16,0,891,99,True,0,"Tahoma",8,,0,0)
Gui.frmAPAutomationIndex.lblGSTCheck.BorderStyle(0)
Gui.frmAPAutomationIndex.lblGSTCheck.ForeColor(255)
Gui.frmAPAutomationIndex.lblGSTCheck.Parent("SplitContainerTop",0)
Gui.frmAPAutomationIndex.txtGrantTotalCheck.Create(Label,"",True,78,16,0,250,172,True,0,"Tahoma",8,,0,0)
Gui.frmAPAutomationIndex.txtGrantTotalCheck.BorderStyle(0)
Gui.frmAPAutomationIndex.txtGrantTotalCheck.ForeColor(255)
Gui.frmAPAutomationIndex.txtGrantTotalCheck.Parent("SplitContainerTop",0)
Gui.frmAPAutomationIndex.lblSupplierName.Create(Label,"Supplier Name",True,84,16,0,10,36,True,0,"Tahoma",8,,0,0)
Gui.frmAPAutomationIndex.lblSupplierName.BorderStyle(0)
Gui.frmAPAutomationIndex.lblSupplierName.Parent("SplitContainerTop",0)
Gui.frmAPAutomationIndex.lblInvoiceNum.Create(Label,"Invoice Number",True,89,16,0,10,59,True,0,"Tahoma",8,,0,0)
Gui.frmAPAutomationIndex.lblInvoiceNum.BorderStyle(0)
Gui.frmAPAutomationIndex.lblInvoiceNum.Parent("SplitContainerTop",0)
Gui.frmAPAutomationIndex.lblInvoiceDate.Create(Label,"Invoice Date",True,70,16,0,10,82,True,0,"Tahoma",8,,0,0)
Gui.frmAPAutomationIndex.lblInvoiceDate.BorderStyle(0)
Gui.frmAPAutomationIndex.lblInvoiceDate.Parent("SplitContainerTop",0)
Gui.frmAPAutomationIndex.lblGrandtotal.Create(Label,"GrandTotal",True,63,16,0,10,174,True,0,"Tahoma",8,,0,0)
Gui.frmAPAutomationIndex.lblGrandtotal.BorderStyle(0)
Gui.frmAPAutomationIndex.lblGrandtotal.Parent("SplitContainerTop",0)
Gui.frmAPAutomationIndex.lblGrandtotal.visible(false)
Gui.frmAPAutomationIndex.txtDocID.Create(TextBox,"",False,24,22,0,542,3,True,0,"Tahoma",8,,1)
Gui.frmAPAutomationIndex.txtVendCode.Create(TextBox,"",True,75,22,0,625,3,False,0,"Tahoma",8,,1)
Gui.frmAPAutomationIndex.txtVendCode.Parent("SplitContainerTop",0)
Gui.frmAPAutomationIndex.txtVendCode.Position(335,4)
Gui.frmAPAutomationIndex.lblEGLAcct.Create(Label,"GL Account",True,70,13,0,368,118,True,0,"Tahoma",8.25,,0,0)
Gui.frmAPAutomationIndex.lblEGLAcct.BorderStyle(0)
Gui.frmAPAutomationIndex.lblEGLAcct.Position(350,215)
Gui.frmAPAutomationIndex.lblEGLAcct.Parent("SplitContainerTop",0)
Gui.frmAPAutomationIndex.txtEGLAccount.Create(TextBox,"",True,102,20,0,366,133,True,0,"Tahoma",8.25,,1)
Gui.frmAPAutomationIndex.txtEGLAccount.Position(350,225)
Gui.frmAPAutomationIndex.txtEGLAccount.Parent("SplitContainerTop",0)
GUI.frmAPAutomationIndex.txtEGLAccount.Event(LostFocus,txtEGLAccount_LostFocus)
GUI.frmAPAutomationIndex.txtEGLAccount.Event(GotFocus,txtEGLAccount_GotFocus)
Gui.frmAPAutomationIndex.cmdEGLAccount.Create(Button)
Gui.frmAPAutomationIndex.cmdEGLAccount.Enabled(True)
Gui.frmAPAutomationIndex.cmdEGLAccount.Visible(True)
Gui.frmAPAutomationIndex.cmdEGLAccount.Zorder(0)
Gui.frmAPAutomationIndex.cmdEGLAccount.Size(35,20)
Gui.frmAPAutomationIndex.cmdEGLAccount.Position(454,225)
Gui.frmAPAutomationIndex.cmdEGLAccount.Caption("^")
Gui.frmAPAutomationIndex.cmdEGLAccount.FontName("Tahoma")
Gui.frmAPAutomationIndex.cmdEGLAccount.FontSize(8.25)
Gui.frmAPAutomationIndex.cmdEGLAccount.Event(Click,cmdEGLAccount_Click)
Gui.frmAPAutomationIndex.cmdEGLAccount.Parent("SplitContainerTop",0)
Gui.frmAPAutomationIndex.lblEQty.Create(Label,"Qty",True,25,13,0,509,117,True,0,"Tahoma",8.25,,0,0)
Gui.frmAPAutomationIndex.lblEQty.BorderStyle(0)
Gui.frmAPAutomationIndex.lblEQty.Position(490,215)
Gui.frmAPAutomationIndex.lblEQty.Parent("SplitContainerTop",0)
Gui.frmAPAutomationIndex.txtEQty.Create(TextBox,"",True,50,20,0,508,133,True,0,"Tahoma",8.25,,1)
Gui.frmAPAutomationIndex.txtEQty.NumericOnly(1)
Gui.frmAPAutomationIndex.txtEQty.Position(490,225)
Gui.frmAPAutomationIndex.txtEQty.Parent("SplitContainerTop",0)
Gui.frmAPAutomationIndex.lblEWO.Create(Label,"Work Order",True,60,13,0,586,118,True,0,"Tahoma",8.25,,0,0)
Gui.frmAPAutomationIndex.lblEWO.BorderStyle(0)
Gui.frmAPAutomationIndex.lblEWO.Position(542,215)
Gui.frmAPAutomationIndex.lblEWO.Parent("SplitContainerTop",0)
Gui.frmAPAutomationIndex.txtEWO.Create(TextBox,"",True,67,20,0,585,132,True,0,"Tahoma",8.25,,1)
Gui.frmAPAutomationIndex.txtEWO.Position(542,225)
Gui.frmAPAutomationIndex.txtEWO.Parent("SplitContainerTop",0)
Gui.frmAPAutomationIndex.lblESuffix.Create(Label,"Suffix",True,35,13,0,658,118,True,0,"Tahoma",8.25,,0,0)
Gui.frmAPAutomationIndex.lblESuffix.BorderStyle(0)
Gui.frmAPAutomationIndex.lblESuffix.Parent("SplitContainerTop",0)
Gui.frmAPAutomationIndex.lblESuffix.Position(610,215)
Gui.frmAPAutomationIndex.txtESuffix.Create(TextBox,"",True,36,20,0,657,132,True,0,"Tahoma",8.25,,1)
Gui.frmAPAutomationIndex.txtESuffix.Position(610,225)
Gui.frmAPAutomationIndex.txtESuffix.Parent("SplitContainerTop",0)
Gui.frmAPAutomationIndex.lblESeq.Create(Label,"Seq",True,25,13,0,700,117,True,0,"Tahoma",8.25,,0,0)
Gui.frmAPAutomationIndex.lblESeq.BorderStyle(0)
Gui.frmAPAutomationIndex.lblESeq.Parent("SplitContainerTop",0)
Gui.frmAPAutomationIndex.lblESeq.Position(647,215)
Gui.frmAPAutomationIndex.txtESeq.Create(TextBox,"",True,65,20,0,698,132,True,0,"Tahoma",8.25,,1)
Gui.frmAPAutomationIndex.txtESeq.Parent("SplitContainerTop",0)
Gui.frmAPAutomationIndex.txtESeq.Position(647,225)
Gui.frmAPAutomationIndex.cmdEWO.Create(Button)
Gui.frmAPAutomationIndex.cmdEWO.Enabled(True)
Gui.frmAPAutomationIndex.cmdEWO.Visible(True)
Gui.frmAPAutomationIndex.cmdEWO.Zorder(0)
Gui.frmAPAutomationIndex.cmdEWO.Size(35,20)
Gui.frmAPAutomationIndex.cmdEWO.Position(715,225)
Gui.frmAPAutomationIndex.cmdEWO.Caption("^")
Gui.frmAPAutomationIndex.cmdEWO.FontName("Tahoma")
Gui.frmAPAutomationIndex.cmdEWO.FontSize(8.25)
Gui.frmAPAutomationIndex.cmdEWO.Event(Click,cmdEWO_Click)
Gui.frmAPAutomationIndex.cmdEWO.Parent("SplitContainerTop",0)
Gui.frmAPAutomationIndex.lblETaxCode.Create(Label,"Tax Code",True,55,13,0,13,160,True,0,"Tahoma",8.25,,0,0)
Gui.frmAPAutomationIndex.lblETaxCode.BorderStyle(0)
Gui.frmAPAutomationIndex.lblETaxCode.Parent("SplitContainerTop",0)
Gui.frmAPAutomationIndex.lblETaxCode.Position(10,255)
Gui.frmAPAutomationIndex.txtETaxCode.Create(TextBox,"",True,59,20,0,11,175,True,0,"Tahoma",8.25,,1)
Gui.frmAPAutomationIndex.txtETaxCode.Position(10,265)
Gui.frmAPAutomationIndex.txtETaxCode.Parent("SplitContainerTop",0)
Gui.frmAPAutomationIndex.cmdETaxCode.Create(Button)
Gui.frmAPAutomationIndex.cmdETaxCode.Enabled(True)
Gui.frmAPAutomationIndex.cmdETaxCode.Visible(True)
Gui.frmAPAutomationIndex.cmdETaxCode.Zorder(0)
Gui.frmAPAutomationIndex.cmdETaxCode.Size(34,20)
Gui.frmAPAutomationIndex.cmdETaxCode.Position(72,265)
Gui.frmAPAutomationIndex.cmdETaxCode.Caption("^")
Gui.frmAPAutomationIndex.cmdETaxCode.FontName("Tahoma")
Gui.frmAPAutomationIndex.cmdETaxCode.FontSize(8.25)
Gui.frmAPAutomationIndex.cmdETaxCode.Event(Click,cmdETaxCode_Click)
Gui.frmAPAutomationIndex.cmdETaxCode.Parent("SplitContainerTop",0)
Gui.frmAPAutomationIndex.txtEVat.Create(TextBox,"",True,31,20,0,112,175,True,0,"Tahoma",8.25,,1)
Gui.frmAPAutomationIndex.txtEVat.Parent("SplitContainerTop",0)
Gui.frmAPAutomationIndex.txtEVat.Position(110,265)
Gui.frmAPAutomationIndex.lblEVat.Create(Label,"VAT",True,25,13,0,113,161,True,0,"Tahoma",8.25,,0,0)
Gui.frmAPAutomationIndex.lblEVat.BorderStyle(0)
Gui.frmAPAutomationIndex.lblEVat.Parent("SplitContainerTop",0)
Gui.frmAPAutomationIndex.lblEVat.Position(110,255)
Gui.frmAPAutomationIndex.cmdEVAT.Create(Button)
Gui.frmAPAutomationIndex.cmdEVAT.Enabled(True)
Gui.frmAPAutomationIndex.cmdEVAT.Visible(True)
Gui.frmAPAutomationIndex.cmdEVAT.Zorder(0)
Gui.frmAPAutomationIndex.cmdEVAT.Size(34,20)
Gui.frmAPAutomationIndex.cmdEVAT.Position(145,265)
Gui.frmAPAutomationIndex.cmdEVAT.Caption("^")
Gui.frmAPAutomationIndex.cmdEVAT.FontName("Tahoma")
Gui.frmAPAutomationIndex.cmdEVAT.FontSize(8.25)
Gui.frmAPAutomationIndex.cmdEVAT.Event(Click,cmdEVAT_Click)
Gui.frmAPAutomationIndex.cmdEVAT.Parent("SplitContainerTop",0)
Gui.frmAPAutomationIndex.txtETaxAmt.Create(TextBox,"",True,100,20,0,195,176,True,0,"Tahoma",8.25,,1)
Gui.frmAPAutomationIndex.txtETaxAmt.NumericOnly(1)
Gui.frmAPAutomationIndex.txtETaxAmt.Position(180,265)
Gui.frmAPAutomationIndex.txtETaxAmt.Parent("SplitContainerTop",0)
Gui.frmAPAutomationIndex.lblETaxAmt.Create(Label,"Amount (No Tax)",True,100,13,0,198,160,True,0,"Tahoma",8.25,,0,0)
Gui.frmAPAutomationIndex.lblETaxAmt.BorderStyle(0)
Gui.frmAPAutomationIndex.lblETaxAmt.Position(180,255)
Gui.frmAPAutomationIndex.lblETaxAmt.Parent("SplitContainerTop",0)
Gui.frmAPAutomationIndex.cmdEAddLine.Create(Button)
Gui.frmAPAutomationIndex.cmdEAddLine.Enabled(True)
Gui.frmAPAutomationIndex.cmdEAddLine.Visible(True)
Gui.frmAPAutomationIndex.cmdEAddLine.Zorder(0)
Gui.frmAPAutomationIndex.cmdEAddLine.Size(75,23)
Gui.frmAPAutomationIndex.cmdEAddLine.Position(280,265)
Gui.frmAPAutomationIndex.cmdEAddLine.Caption("Add Line")
Gui.frmAPAutomationIndex.cmdEAddLine.FontName("Tahoma")
Gui.frmAPAutomationIndex.cmdEAddLine.FontSize(8.25)
Gui.frmAPAutomationIndex.cmdEAddLine.Event(Click,cmdEAddLine_Click)
Gui.frmAPAutomationIndex.cmdEAddLine.Parent("SplitContainerTop",0)
Gui.frmAPAutomationIndex.chkETaxable.Create(CheckBox)
Gui.frmAPAutomationIndex.chkETaxable.Enabled(True)
Gui.frmAPAutomationIndex.chkETaxable.Visible(True)
Gui.frmAPAutomationIndex.chkETaxable.Zorder(0)
Gui.frmAPAutomationIndex.chkETaxable.Size(75,20)
Gui.frmAPAutomationIndex.chkETaxable.Position(360,265)
Gui.frmAPAutomationIndex.chkETaxable.Caption("Taxable")
Gui.frmAPAutomationIndex.chkETaxable.FontName("Tahoma")
Gui.frmAPAutomationIndex.chkETaxable.FontSize(8.25)
Gui.frmAPAutomationIndex.chkETaxable.Parent("SplitContainerTop",0)
Gui.frmAPAutomationIndex.cmdEPart.Create(Button)
Gui.frmAPAutomationIndex.cmdEPart.Enabled(True)
Gui.frmAPAutomationIndex.cmdEPart.Visible(True)
Gui.frmAPAutomationIndex.cmdEPart.Zorder(0)
Gui.frmAPAutomationIndex.cmdEPart.Size(34,20)
Gui.frmAPAutomationIndex.cmdEPart.Position(135,225)
Gui.frmAPAutomationIndex.cmdEPart.Caption("^")
Gui.frmAPAutomationIndex.cmdEPart.FontName("Tahoma")
Gui.frmAPAutomationIndex.cmdEPart.FontSize(8.25)
Gui.frmAPAutomationIndex.cmdEPart.Event(Click,cmdEPart_Click)
Gui.frmAPAutomationIndex.cmdEPart.Parent("SplitContainerTop",0)
Gui.frmAPAutomationIndex.lblEDesc.Create(Label,"Description",True,70,13,0,188,130,True,0,"Tahoma",8.25,,0,0)
Gui.frmAPAutomationIndex.lblEDesc.BorderStyle(0)
Gui.frmAPAutomationIndex.lblEDesc.Parent("SplitContainerTop",0)
Gui.frmAPAutomationIndex.txtEDesc.Create(TextBox,"",True,178,20,0,200,133,False,0,"Tahoma",8.25,,1)
Gui.frmAPAutomationIndex.txtEDesc.Position(170,225)
Gui.frmAPAutomationIndex.txtEDesc.Parent("SplitContainerTop",0)
Gui.RejectConformation..Create(BaseForm)
Gui.RejectConformation..Caption("Reject Conformation")
Gui.RejectConformation..Size(313,253)
Gui.RejectConformation..MinX(0)
Gui.RejectConformation..MinY(0)
Gui.RejectConformation..Position(0,0)
Gui.RejectConformation..AlwaysOnTop(False)
Gui.RejectConformation..FontName("Tahoma")
Gui.RejectConformation..FontSize(8.25)
Gui.RejectConformation..ControlBox(True)
Gui.RejectConformation..MaxButton(True)
Gui.RejectConformation..MinButton(True)
Gui.RejectConformation..MousePointer(0)
Gui.RejectConformation..Moveable(True)
Gui.RejectConformation..Sizeable(True)
Gui.RejectConformation..ShowInTaskBar(True)
Gui.RejectConformation..TitleBar(True)
Gui.RejectConformation..Event(UnLoad,cmdRejectCancel_click)
Gui.RejectConformation.lbl1.Create(Label,"Reject Reason",True,99,19,0,22,104,True,0,"Tahoma",8,,0,0)
Gui.RejectConformation.lbl1.BorderStyle(0)
Gui.RejectConformation.txtRejectRejectReason.Create(TextBox,"",True,150,28,0,133,100,True,0,"Tahoma",8,,1)
Gui.RejectConformation.cmdRejectConfirm.Create(Button)
Gui.RejectConformation.cmdRejectConfirm.Enabled(True)
Gui.RejectConformation.cmdRejectConfirm.Visible(True)
Gui.RejectConformation.cmdRejectConfirm.Zorder(0)
Gui.RejectConformation.cmdRejectConfirm.Size(112,34)
Gui.RejectConformation.cmdRejectConfirm.Position(25,139)
Gui.RejectConformation.cmdRejectConfirm.Caption("Reject Document")
Gui.RejectConformation.cmdRejectConfirm.FontName("Tahoma")
Gui.RejectConformation.cmdRejectConfirm.FontSize(8)
Gui.RejectConformation.cmdRejectConfirm.BackColor(12632319)
Gui.RejectConformation.cmdRejectConfirm.Event(Click,cmdRejectConfirm_click)
Gui.RejectConformation.cmdRejectCancel.Create(Button)
Gui.RejectConformation.cmdRejectCancel.Enabled(True)
Gui.RejectConformation.cmdRejectCancel.Visible(True)
Gui.RejectConformation.cmdRejectCancel.Zorder(0)
Gui.RejectConformation.cmdRejectCancel.Size(112,34)
Gui.RejectConformation.cmdRejectCancel.Position(170,139)
Gui.RejectConformation.cmdRejectCancel.Caption("Cancel")
Gui.RejectConformation.cmdRejectCancel.FontName("Tahoma")
Gui.RejectConformation.cmdRejectCancel.FontSize(8)
Gui.RejectConformation.cmdRejectCancel.BackColor(16761024)
Gui.RejectConformation.cmdRejectCancel.Event(Click,cmdRejectCancel_click)
Gui.RejectConformation.lbl2.Create(Label,"Supplier Name",True,104,19,0,19,16,True,0,"Tahoma",8,,0,0)
Gui.RejectConformation.lbl2.BorderStyle(0)
Gui.RejectConformation.lbl3.Create(Label,"Invoice Number",True,113,19,0,13,44,True,0,"Tahoma",8,,0,0)
Gui.RejectConformation.lbl3.BorderStyle(0)
Gui.RejectConformation.lbl4.Create(Label,"Grand Total",True,84,19,0,34,74,True,0,"Tahoma",8,,0,0)
Gui.RejectConformation.lbl4.BorderStyle(0)
Gui.RejectConformation.txtrejectGrandTotal.Create(TextBox,"",True,150,28,0,133,70,True,0,"Tahoma",8,,1)
Gui.RejectConformation.txtRejectInvoiceNumber.Create(TextBox,"",True,150,28,0,133,40,True,0,"Tahoma",8,,1)
Gui.RejectConformation.txtRejectSupplierName.Create(TextBox,"",True,150,28,0,133,10,True,0,"Tahoma",8,,1)
Gui.ProcessAPConformation..Create(BaseForm)
Gui.ProcessAPConformation..Caption("Process confirmation")
Gui.ProcessAPConformation..Size(300,150)
Gui.ProcessAPConformation..MinX(0)
Gui.ProcessAPConformation..MinY(0)
Gui.ProcessAPConformation..Position(0,0)
Gui.ProcessAPConformation..AlwaysOnTop(False)
Gui.ProcessAPConformation..FontName("Tahoma")
Gui.ProcessAPConformation..FontSize(8.25)
Gui.ProcessAPConformation..ControlBox(True)
Gui.ProcessAPConformation..MaxButton(True)
Gui.ProcessAPConformation..MinButton(True)
Gui.ProcessAPConformation..MousePointer(0)
Gui.ProcessAPConformation..Moveable(True)
Gui.ProcessAPConformation..Sizeable(True)
Gui.ProcessAPConformation..ShowInTaskBar(True)
Gui.ProcessAPConformation..TitleBar(True)
Gui.ProcessAPConformation..Event(UnLoad,frmProcessAPConformationCloseGUI)
Gui.ProcessAPConformation.cmdUpdate.Create(Button)
Gui.ProcessAPConformation.cmdUpdate.Enabled(True)
Gui.ProcessAPConformation.cmdUpdate.Visible(True)
Gui.ProcessAPConformation.cmdUpdate.Zorder(0)
Gui.ProcessAPConformation.cmdUpdate.Size(112,34)
Gui.ProcessAPConformation.cmdUpdate.Position(23,70)
Gui.ProcessAPConformation.cmdUpdate.Caption("Process")
Gui.ProcessAPConformation.cmdUpdate.FontName("Tahoma")
Gui.ProcessAPConformation.cmdUpdate.FontSize(8)
Gui.ProcessAPConformation.cmdUpdate.BackColor(12648384)
Gui.ProcessAPConformation.cmdUpdate.Event(Click,frmAPAutomationIndex_SaveButtonClick)
Gui.ProcessAPConformation.cmdReject.Create(Button)
Gui.ProcessAPConformation.cmdReject.Enabled(True)
Gui.ProcessAPConformation.cmdReject.Visible(True)
Gui.ProcessAPConformation.cmdReject.Zorder(0)
Gui.ProcessAPConformation.cmdReject.Size(112,34)
Gui.ProcessAPConformation.cmdReject.Position(160,70)
Gui.ProcessAPConformation.cmdReject.Caption("Cancel")
Gui.ProcessAPConformation.cmdReject.FontName("Tahoma")
Gui.ProcessAPConformation.cmdReject.FontSize(8)
Gui.ProcessAPConformation.cmdReject.BackColor(16761024)
Gui.ProcessAPConformation.cmdReject.Event(Click,frmProcessAPConformationCloseGUI)
Gui.ProcessAPConformation.lblConfirmation.Create(Label,"Are you sure you want to process into Global Shop?",True,260,19,0,18,20,True,0,"Tahoma",8,,0,0)
Gui.ProcessAPConformation.lblConfirmation.BorderStyle(0)
gui.ProcessAPConformation.datepicker.Create(DatePicker)
gui.ProcessAPConformation.datepicker.Enabled(True)
gui.ProcessAPConformation.datepicker.Visible(True)
gui.ProcessAPConformation.datepicker.Zorder(0)
gui.ProcessAPConformation.datepicker.Size(112,34)
gui.ProcessAPConformation.datepicker.Position(160,40)
gui.ProcessAPConformation.datepicker.CheckBox(False)
gui.ProcessAPConformation.datepicker.FontName("Tahoma")
gui.ProcessAPConformation.datepicker.FontSize(8)
gui.ProcessAPConformation.lblDateDesc.Create(Label,"Please select your post date:",True,145,19,0,18,45,True,0,"Tahoma",8,,0,0)
gui.ProcessAPConformation.lblDateDesc.BorderStyle(0)
Gui.RejectConformationClicked..Create(BaseForm)
Gui.RejectConformationClicked..Caption("AP Automation 5564")
Gui.RejectConformationClicked..Size(235,108)
Gui.RejectConformationClicked..MinX(0)
Gui.RejectConformationClicked..MinY(0)
Gui.RejectConformationClicked..Position(0,0)
Gui.RejectConformationClicked..AlwaysOnTop(False)
Gui.RejectConformationClicked..FontName("Tahoma")
Gui.RejectConformationClicked..FontSize(8.25)
Gui.RejectConformationClicked..ControlBox(True)
Gui.RejectConformationClicked..MaxButton(True)
Gui.RejectConformationClicked..MinButton(True)
Gui.RejectConformationClicked..MousePointer(0)
Gui.RejectConformationClicked..Moveable(True)
Gui.RejectConformationClicked..Sizeable(True)
Gui.RejectConformationClicked..ShowInTaskBar(True)
Gui.RejectConformationClicked..TitleBar(True)
Gui.RejectConformationClicked.lblOrderReject.Create(Label,"Order Rejected Successfully",True,195,19,0,22,25,True,0,"Tahoma",8,,0,0)
Gui.RejectConformationClicked.lblOrderReject.BorderStyle(0)
Gui.Form..Create(BaseForm)
Gui.Form..Caption("AP Automation Learning")
Gui.Form..Size(1000,800)
Gui.Form..MinX(0)
Gui.Form..MinY(0)
Gui.Form..Position(0,0)
Gui.Form..AlwaysOnTop(False)
Gui.Form..FontName("Tahoma")
Gui.Form..FontSize(8.25)
Gui.Form..ControlBox(True)
Gui.Form..MaxButton(True)
Gui.Form..MinButton(True)
Gui.Form..MousePointer(0)
Gui.Form..Moveable(True)
Gui.Form..Sizeable(True)
Gui.Form..ShowInTaskBar(True)
Gui.Form..TitleBar(True)
Gui.Form..Event(UnLoad,Form_UnLoad)
Gui.Form..Windowstate(2)
'web browser where learn button triggers
Gui.Form.gsWebBrowser.create(GsWebBrowser)
Gui.Form.gsWebBrowser.Enabled(True)
Gui.Form.gsWebBrowser.Visible(True)
Gui.Form.gsWebBrowser.Zorder(0)
Gui.Form.gsWebBrowser.Size(992,628)
Gui.Form.gsWebBrowser.Position(0,0)
Gui.Form.gsWebBrowser.Dock(5)
'Gui.frmAPAutomationIndex.lookupGL.Create(Lookup)
'Gui.frmAPAutomationIndex.lookupGL.Enabled(True)
'Gui.frmAPAutomationIndex.lookupGL.PopulateMode(4)
'Gui.frmAPAutomationIndex.lookupGL.Title("Account Lookup")
'Gui.frmAPAutomationIndex.lookupGL.StringBasis("")
'Gui.frmAPAutomationIndex.lookupGL.FileBasis("")
'Gui.frmAPAutomationIndex.lookupGL.ColumnDelim("")
'Gui.frmAPAutomationIndex.lookupGL.RowDelim("")
'Gui.frmAPAutomationIndex.lookupGL.PreferredStyle(0)
'Gui.frmAPAutomationIndex.lookupGL.AssociatedControl("txtEGLAccount")
'Gui.frmAPAutomationIndex.lookupGL.Event(SelectionMade,lookupGL_SelectionMade)
'Gui.frmAPAutomationIndex.lookupGL.LookupMode(10)
Program.Sub.ScreenSU.End

Program.Sub.Preflight.Start
Program.External.Include.Library("AP043RIA.lib")
Program.External.Include.Library("AP043UP1.lib")
Program.External.Include.Library("175100.lib")
Program.External.Include.Library("175200.lib")
Program.External.Include.Library("GAB_5564_UPLPUROR.lib")
Program.External.Include.Library("6016.lib")
V.Global.sDOCID.Declare
v.Global.iRowIndex.Declare
v.Global.iQueueListDataTableStartSize.Declare
v.Global.iSaveListDataTableStartSize.Declare
v.Global.iRejectListDataTableStartSize.Declare
v.Global.iPOClicks.Declare
v.Global.icountingAPICalls.Declare
v.Global.icountingAPICalls.Set(100)
V.Global.iURLCounter.Declare(Long, 1)
v.Global.sID.Declare
v.Global.sAPIKey.Declare
v.Global.sWorkFlow.Declare
v.Global.sDocumentGroup.Declare
V.Global.bShowAllReceivers.Declare
V.Global.bShowAllReceivers.Set(False)
v.Global.bUploadSwitch.Declare

v.Local.sAPIKeyFile.Declare
v.Local.sapikey.Declare
v.Local.sret.Declare
f.Intrinsic.String.Concat(v.Caller.GasDir,"\",v.Caller.CompanyCode,"_GAB_5564_AP_AUTOMATION_ADMIN_SETTINGS.txt",v.Local.sAPIKeyFile)
f.Intrinsic.File.File2String(v.Local.sAPIKeyFile,v.Local.sAPIKey)
f.Intrinsic.String.Split(v.Local.sAPIKey,v.Ambient.NewLine,v.local.sret)
v.Global.sAPIKey.Set(v.Local.sret(0))
v.Global.sWorkFlow.Set(v.Local.sret(1))
v.Global.sDocumentGroup.Set(v.Local.sret(2))
Program.Sub.Preflight.End

Program.Sub.Main.Start 
f.Intrinsic.Control.Try
	f.Intrinsic.UI.UsePixels ' Allows you to use Pixels instead of Twips throughout
	'Function.Intrinsic.Debug.BenchmarkModeEnable
'	f.Intrinsic.Task.AuxInfoEnable(true)
	F.Intrinsic.UI.SetBrowserHotTypeAhead(True)
	f.ODBC.Connection!con5564.opencompanyconnection(300)
	
	F.Intrinsic.Control.Try
		Gui.Form.gsWebBrowser.Event(UrlChanged,gsWebBrowser_UrlChanged)
	F.Intrinsic.Control.Catch
		'if they aren't on the latest hotfix, we just don't add this event, don't need to do anything
	F.Intrinsic.Control.EndTry

	v.Local.sConfigFile.Declare
	v.Local.sReturn.Declare
	v.Local.sPCName.Declare
	f.Intrinsic.String.Concat(v.Caller.GasDir,"\",v.Caller.CompanyCode,"_GAB_5564_AP_AUTOMATION_ADMIN_SETTINGS.txt",v.Local.sConfigFile)
	f.Intrinsic.File.File2String(v.Local.sConfigFile,v.Local.sReturn)
	f.Intrinsic.String.Split(v.Local.sReturn,v.Ambient.NewLine,v.Local.sReturn)
	
	'Step 1, check and verify the core program tables exist
	f.Intrinsic.Control.CallSub(checkTable)
	
	'Step 2.1, check if unattended
	v.Local.bUnattendedFlag.Declare
	f.Intrinsic.Control.If(V.Ambient.IsInTaskScheduler,=,True,"or",v.Caller.Switches,=,"U")
		v.Local.bUnattendedFlag.Set(true)
	f.Intrinsic.Control.EndIf
	F.Intrinsic.Control.If(v.Local.bUnattendedFlag)
		F.Intrinsic.Control.CallSub(UnattendedUpload)
	f.Intrinsic.Control.EndIf

	'Step 2, download data from xxr
	f.Intrinsic.UI.InvokeWaitDialog("Downloading Data","AP Automation 5564")
	f.Intrinsic.Control.CallSub(getAppData)    
	
	'Step 3.1, load datatables, queue
	f.Intrinsic.UI.InvokeWaitDialog("Loading Queue Data","AP Automation 5564")
	f.Intrinsic.Control.CallSub(loadQueues,"Grid","all")
	
	'Step 3.2 Invoice Details (blank on purpose to create grid views and set column properties)
	f.Intrinsic.Control.CallSub(loadInvoiceDetail,"InvoiceNumber","","PurchaseOrder","","Status","","Vendor","")

	'Step 4, apply all column properties
	f.Intrinsic.UI.InvokeWaitDialog("Setting Properties","AP Automation 5564")
	f.Intrinsic.Control.CallSub(setProperties)
	'Step 4.1, Deserialize all gridviews
	f.Intrinsic.Control.CallSub(DeserializeAll)

	'Step 5, Show form
	gui.frmAPAutomationIndex..BarAddButton("ReceivePO","PO Receipt")
	gui.frmAPAutomationIndex..BarAddButton("APBatch","AP Batch from Receipts")
	f.Intrinsic.UI.CloseWaitDialog
	
	gui.frmAPAutomationIndex.tabs.SetTab(0)
	gui.frmAPAutomationIndex.tabDetails.SetTab(0)
	Gui.frmAPAutomationIndex..ApplySavedSettings
	f.Intrinsic.Control.Try
		gui.frmAPAutomationIndex..Show
	f.Intrinsic.Control.Catch
	f.Intrinsic.Control.EndTry
	
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	'f.Intrinsic.Control.CallSub(frmUnload)
f.Intrinsic.Control.EndTry
Program.Sub.Main.End

Program.Sub.UnattendedUpload.Start
f.Intrinsic.Control.Try
	gui.frmAPAutomationIndex.tabs.TabIndex(0)
	
	f.Data.DataTable.Create("dtRecLines",TRUE)
	f.Data.DataTable.AddColumn("dtRecLines","PART","String")
	f.Data.DataTable.AddColumn("dtRecLines","DESCRIPTION","String")
	f.Data.DataTable.AddColumn("dtRecLines","SelectLine","Boolean")
	f.Data.DataTable.AddColumn("dtRecLines","PSearch","String","BROWSE")
	f.Data.DataTable.AddColumn("dtRecLines","QTY_RECEIVED","Float")
	f.Data.DataTable.AddColumn("dtRecLines","QTY_RECEIVED_ORIGINAL","Float")
	f.Data.DataTable.AddColumn("dtRecLines","PO_LINE","String")
	f.Data.DataTable.AddColumn("dtRecLines","RECEIVED_AMT","Float")
	f.Data.DataTable.AddColumn("dtRecLines","ACTUAL_AMT","Float")
	f.Data.DataTable.AddColumn("dtRecLines","EXCH_COST","Float")
	f.Data.DataTable.AddColumn("dtRecLines","EXCH_RATE","Float")
	f.Data.DataTable.AddColumn("dtRecLines","GL_ACCOUNT","String")
	f.Data.DataTable.AddColumn("dtRecLines","GLSearch","String","BROWSE")
	f.Data.DataTable.AddColumn("dtRecLines","JOB","String")
	f.Data.DataTable.AddColumn("dtRecLines","SUFFIX","String")
	f.Data.DataTable.AddColumn("dtRecLines","SEQ","String")
	f.Data.DataTable.AddColumn("dtRecLines","LOCATION","String")
	f.Data.DataTable.AddColumn("dtRecLines","TAXABLE","Boolean")
	f.Data.DataTable.AddColumn("dtRecLines","TAX_CODE","String")
	f.Data.DataTable.AddColumn("dtRecLines","TCSearch","String","BROWSE")
	f.Data.DataTable.AddColumn("dtRecLines","PURCHASE_ORDER","String")
	f.Data.DataTable.AddColumn("dtRecLines","VENDOR","String")
	f.Data.DataTable.AddColumn("dtRecLines","NAME_VENDOR","String")
	f.Data.DataTable.AddColumn("dtRecLines","RECEIVER_NO","String")
	f.Data.DataTable.AddColumn("dtRecLines","VAT_RULE","Integer")

	v.Global.bUploadSwitch.Set(true)
	f.Intrinsic.Control.CallSub(getAppData)   
	f.Intrinsic.Control.CallSub(loadQueues,"Grid","all") 
	v.Local.i.Declare
	
	
	f.Intrinsic.Control.For(v.Local.i,v.DataTable.dtAPInvQueue.RowCount--,0,-1)
		'Do a logic check, if invoice matches po receiver exactly, move to approved queue
		v.Global.iRowIndex.Set(v.Local.i)
		f.Intrinsic.Control.If(v.DataTable.dtAPInvQueue(v.Local.i).RowState,<>,8)
			v.Global.sDOCID.Set(v.DataTable.dtAPInvQueue(v.Local.i).DocID!fieldval)
			f.Intrinsic.Control.CallSub(MoveInvoiceToApprove,"VendName",v.DataTable.dtAPInvQueue(v.Local.i).VENDNAME!fieldvaltrim,"Vendcode",v.DataTable.dtAPInvQueue(v.Local.i).VENDCODE!fieldvaltrim, "GSTTotal",v.DataTable.dtAPInvQueue(v.Local.i).GSTTotal!fieldval, "SubTotal",v.DataTable.dtAPInvQueue(v.Local.i).Subtotal!fieldval, "GRSTOTAL", v.DataTable.dtAPInvQueue(v.Local.i).GRSTotal!fieldval, "InvcDate",v.DataTable.dtAPInvQueue(v.Local.i).Invcdate!fieldval, "InvcNumb",v.DataTable.dtAPInvQueue(v.Local.i).INVCNUMB!Fieldvaltrim, "POHead",v.DataTable.dtAPInvQueue(v.Local.i).POHead!fieldvaltrim,"ID",v.DataTable.dtAPInvQueue(v.Local.i).ID!fieldval)
		f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.Next(v.Local.i)
	
	
	
	f.Intrinsic.Control.CallSub(frmAPAutomationIndex_SaveButtonClick)
	f.ODBC.Connection!con5564.Close
	f.Intrinsic.Control.End
f.Intrinsic.Control.Catch

f.Intrinsic.Control.EndTry
Program.Sub.UnattendedUpload.End

Program.Sub.MoveInvoiceToApprove.Start
f.Intrinsic.Control.Try
	'Evaluate the values against the PO Receiver table
	
	'Load Invoice Detail
	f.Intrinsic.Control.CallSub(loadInvoiceDetail,"InvoiceNumber",v.Args.InvcNumb,"PurchaseOrder",v.Args.POHead,"Status","Queue","Vendor",v.Args.VendCode)
	
	'Compare what is in GAB_5564_SA and adjust quantity accordingly
	v.Local.sReceiver.Declare
	v.Local.sPOLine.Declare
	v.Local.fQty.Declare
	v.Local.i.Declare
	F.Intrinsic.Control.For(v.Local.i,v.DataTable.dtRecLines.RowCount--,0,-1)
		f.Intrinsic.Control.If(v.DataTable.dtRecLines(v.Local.i).RowState,<>,8)
			F.Data.DataTable.SetValue("dtRecLines",v.Local.i,"SelectLine",True)
			v.Local.sReceiver.Set(v.DataTable.dtRecLines(v.Local.i).RECEIVER_NO!fieldvaltrim)
			v.Local.sPOLine.Set(v.DataTable.dtRecLines(v.Local.i).PO_LINE!fieldvaltrim)
			f.Intrinsic.String.build("SELECT ifnull(QUANTITY,0) FROM GAB_5564_AP_SA WHERE POLINE='{0}' AND PORCVR='{1}'",v.Local.sPOLine,v.Local.sReceiver,v.Local.ssql)
			f.ODBC.Connection!con5564.executeandreturn(v.Local.ssql,v.Local.fQty)
			f.Intrinsic.Control.If(v.Local.fQty,<>,0)
				f.Intrinsic.Math.Sub(v.DataTable.dtRecLines(v.Local.i).QTY_RECEIVED!FIELDVAL,v.Local.fQty,v.Local.fQty)
				f.Data.DataTable.SetValue("dtRecLines",v.Local.i,"QTY_RECEIVED",v.Local.fQty)
				f.Intrinsic.Control.If(v.Local.fQty,=,0)
					f.Data.DataTable.DeleteRow("dtRecLines",v.Local.i)
				f.Intrinsic.Control.EndIf
			f.Intrinsic.Control.EndIf
		f.Intrinsic.Control.EndIf
	F.Intrinsic.Control.Next(v.Local.i)

	'Compare currencies for matching exact amounts
	v.Local.sCompCurrency.Declare
	F.ODBC.Connection!Con5564.executeandreturn("select rtrim(TEXT1) from OP_HEADER WHERE ID='000000' AND SEQUENCE='0000'",v.Local.sCompCurrency)
	
	v.Local.sVendCurrency.Declare
	v.Local.sSql.Declare
	f.Intrinsic.String.Build("SELECT DEFAULT_CURRENCY FROM V_VENDOR_INTL WHERE VENDOR='{0}'",v.Args.VendCode,v.Local.ssql)
	f.ODBC.Connection!Con5564.executeandreturn(v.Local.sSql,v.Local.sVendCurrency)

	v.Local.fActualAmt.Declare
	f.Intrinsic.Control.If(v.Local.sVendCurrency.Trim,<>,v.Local.sCompCurrency.Trim)
		f.Intrinsic.String.Build("PURCHASE_ORDER='{0}' AND VENDOR='{1}'",v.Args.POHead,v.Args.VendCode,v.Local.ssql)
		f.Data.DataTable.Compute("dtRecLines","Sum(EXCH_COST)",v.Local.sSql,V.Local.fActualAmt)
	f.Intrinsic.Control.Else
		f.Intrinsic.String.Build("PURCHASE_ORDER='{0}' AND VENDOR='{1}'",v.Args.POHead,v.Args.VendCode,v.Local.ssql)
		f.Data.DataTable.Compute("dtRecLines","Sum(ACTUAL_AMT)",v.Local.sSql,V.Local.fActualAmt)
	f.Intrinsic.Control.EndIf
	
	f.Intrinsic.Control.If(v.Local.fActualAmt,<>,0)
		'If amount matches, move to Approve Queue
		F.Intrinsic.Control.If(V.Local.fActualAmt,=,V.Args.Subtotal)
			gui.frmAPAutomationIndex.txtInvNum.Text(v.Args.InvcNumb)
			gui.frmAPAutomationIndex.txtInvdate.Text(v.Args.InvcDate)
			gui.frmAPAutomationIndex.txtSupplierName.text(v.Args.VendName)
			gui.frmAPAutomationIndex.txtVendCode.Text(v.Args.VendCode)
			gui.frmAPAutomationIndex.txtPORef.Text(v.Args.POHead)
			v.Global.sID.Set(v.Args.ID)
			f.Intrinsic.Control.CallSub(cmdSaveApprove_Click)
		F.Intrinsic.Control.EndIf
	f.Intrinsic.Control.EndIf
	F.Data.DataTable.DeleteRow("dtRecLines")
	
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.MoveInvoiceToApprove.End

#Region "Initialize"

Program.Sub.checkTable.Start
f.Intrinsic.Control.Try
	v.Local.bCheck.Declare
	v.Local.sRet.Declare
	v.Local.sVat.Declare
	v.Local.i.Declare
	v.Local.sMsg.Declare
	
		
	'create table	
	f.ODBC.Connection!con5564.tableExists("GAB_5564_AP_XREF",V.Local.bCheck)
	F.Intrinsic.Control.If(V.Local.bCheck,=,False)
		f.ODBC.Connection!con5564.execute("CREATE TABLE GAB_5564_AP_XREF (VENDORCODE CHAR(6),VENDORNAME CHAR(50), ID IDENTITY DEFAULT '0' CONSTRAINT UK_ID UNIQUE USING 0);")
	F.Intrinsic.Control.EndIf
	
	f.ODBC.Connection!con5564.tableExists("GAB_5564_AP_SA",V.Local.bCheck)
	F.Intrinsic.Control.If(V.Local.bCheck,=,False)
		f.ODBC.Connection!con5564.execute("CREATE TABLE GAB_5564_AP_SA ( HID BIGINT, APAPPROVEID IDENTITY DEFAULT '0' CONSTRAINT UK_APAPPROVEID UNIQUE USING 0, DOCID BIGINT, POSTED BIT DEFAULT '0' NOT NULL, JOB VARCHAR(6), SUFFIX VARCHAR(3), SEQ VARCHAR(6), POLINE VARCHAR(3), PORCVR VARCHAR(50), GLACCOUNT VARCHAR(15), QUANTITY DOUBLE, RECEIVED_AMT DOUBLE, PART VARCHAR(50), LOCATION VARCHAR(3), TAXABLEFLAG BIT DEFAULT '0' NOT NULL, TAXCODE VARCHAR(5), POUM VARCHAR(3), BRANCH VARCHAR(2), BOOKSELFTAX VARCHAR(1), BUYER VARCHAR(3), VOUCHER VARCHAR(7), VAT INTEGER DEFAULT '0', COSTTYPE INTEGER, INVOICENOTES VARCHAR(255), APPROVED BIT DEFAULT '0' NOT NULL, APINVACCRFLAG VARCHAR(1), PACKINGLIST VARCHAR(20), ACTUAL_AMT DOUBLE,EXCH_CURR VARCHAR(3),EXCH_RATE DOUBLE DEFAULT '0', EXCH_AMT DOUBLE DEFAULT '0'  );")
	F.Intrinsic.Control.EndIf
	
	f.ODBC.Connection!con5564.TableExists("GAB_5564_AP_HEAD",V.Local.bCheck)
	F.Intrinsic.Control.If(v.Local.bCheck,=,False)
		f.ODBC.Connection!con5564.Execute("CREATE TABLE GAB_5564_AP_HEAD ( DOCID BIGINT, DOCURL LONGVARCHAR, IMGURL LONGVARCHAR, VENDCODE VARCHAR(6), VENDNAME VARCHAR(150), INVCNUMB VARCHAR(15), INVCDATE DATE, POHEAD VARCHAR(20), SUBTOTAL DOUBLE, FREIGHT DOUBLE, GSTTOTAL DOUBLE, GRSTOTAL DOUBLE, DOWNSTAT VARCHAR(50), NOTES LONGVARCHAR, GssStatus VARCHAR(20) DEFAULT 'queue', RejectReason VARCHAR(20), DocSavedLocation VARCHAR(255), XRefCheck BIT NOT NULL, CreditNote BIT NOT NULL, PROCESSED BIT NOT NULL, ID IDENTITY DEFAULT '0' CONSTRAINT UK_ID UNIQUE USING 0, INVOICETYPE VARCHAR(1), PROCESSEDDATE DATE);") 'tomasm
	F.Intrinsic.Control.EndIf
	
	f.ODBC.Connection!con5564.TableExists("GAB_5564_AP_LINES",V.Local.bCheck)
	F.Intrinsic.Control.If(v.Local.bCheck,=,False)
		f.ODBC.Connection!con5564.Execute("CREATE TABLE GAB_5564_AP_LINES ( HID BIGINT, ROWID VARCHAR(50) NOT NULL, UM VARCHAR(3), LINE VARCHAR(4), RCVR VARCHAR(10), GLACCOUNT VARCHAR(15), QUANTITY DOUBLE, UnitCost DOUBLE, EXTENSION DOUBLE, PORECLINE VARCHAR(50), PART VARCHAR(50), PARTDESC VARCHAR(30), DESCLINE LONGVARCHAR, JOB VARCHAR(6), SUFFIX VARCHAR(3), SEQ VARCHAR(6), RECEIVETEXT LONGVARCHAR, COSTTYPE VARCHAR(10), LID IDENTITY DEFAULT '0' CONSTRAINT UK_ID UNIQUE USING 0 );") 
	F.Intrinsic.Control.EndIf

	f.ODBC.Connection!con5564.TableExists("GAB_5564_Errorlog",V.Local.bCheck)
	F.Intrinsic.Control.If(v.Local.bCheck,=,False)
		f.ODBC.Connection!con5564.Execute("CREATE TABLE GAB_5564_Errorlog  (ROWID VARCHAR(50) NOT NULL,description VARCHAR(200));")
	F.Intrinsic.Control.EndIf
	
	f.ODBC.Connection!con5564.TableExists("V_GAB_5564_AP_ALL",v.Local.bCheck)
	f.Intrinsic.Control.If(v.Local.bCheck,=,False)
		f.ODBC.Connection!con5564.execute("CREATE VIEW V_GAB_5564_AP_ALL AS SELECT GAB_5564_AP_HEAD .CreditNote ,GAB_5564_AP_HEAD .DOCID ,GAB_5564_AP_HEAD .DocSavedLocation ,GAB_5564_AP_HEAD .DOWNSTAT ,GAB_5564_AP_HEAD .FREIGHT ,GAB_5564_AP_HEAD .GRSTOTAL ,GAB_5564_AP_HEAD .GssStatus ,GAB_5564_AP_HEAD .GSTTOTAL ,GAB_5564_AP_HEAD .ID ,GAB_5564_AP_HEAD .INVCDATE ,GAB_5564_AP_HEAD .INVCNUMB ,GAB_5564_AP_HEAD .POHEAD ,GAB_5564_AP_HEAD .INVOICETYPE ,GAB_5564_AP_HEAD .PROCESSED ,GAB_5564_AP_HEAD .RejectReason ,GAB_5564_AP_HEAD .SUBTOTAL ,GAB_5564_AP_HEAD .VENDCODE ,GAB_5564_AP_HEAD .VENDNAME ,GAB_5564_AP_HEAD .XRefCheck ,GAB_5564_AP_SA .APAPPROVEID ,GAB_5564_AP_SA .APINVACCRFLAG ,GAB_5564_AP_SA .APPROVED ,GAB_5564_AP_SA .BOOKSELFTAX ,GAB_5564_AP_SA .BRANCH ,GAB_5564_AP_SA .BUYER ,GAB_5564_AP_SA .COSTTYPE ,GAB_5564_AP_SA .RECEIVED_AMT ,GAB_5564_AP_SA .ACTUAL_AMT ,GAB_5564_AP_SA .GLACCOUNT ,GAB_5564_AP_SA .HID ,GAB_5564_AP_SA .INVOICENOTES ,GAB_5564_AP_SA .JOB ,GAB_5564_AP_SA .LOCATION ,GAB_5564_AP_SA .PART ,GAB_5564_AP_SA .POLINE ,GAB_5564_AP_SA .PORCVR ,GAB_5564_AP_SA .POSTED ,GAB_5564_AP_SA .POUM ,GAB_5564_AP_SA .QUANTITY ,GAB_5564_AP_SA .SEQ ,GAB_5564_AP_SA .SUFFIX ,GAB_5564_AP_SA .TAXABLEFLAG ,GAB_5564_AP_SA .TAXCODE ,GAB_5564_AP_SA .VAT ,GAB_5564_AP_SA .VOUCHER ,GAB_5564_AP_HEAD .DOCURL ,GAB_5564_AP_HEAD .IMGURL ,GAB_5564_AP_HEAD .NOTES, GAB_5564_AP_SA.EXCH_CURR, GAB_5564_AP_SA.EXCH_RATE, GAB_5564_AP_SA.EXCH_AMT, GAB_5564_AP_SA.PACKINGLIST FROM GAB_5564_AP_SA GAB_5564_AP_SA LEFT OUTER JOIN GAB_5564_AP_HEAD GAB_5564_AP_HEAD ON GAB_5564_AP_SA .DOCID = GAB_5564_AP_HEAD .DOCID")
	f.Intrinsic.Control.EndIf
	
	f.ODBC.Connection!con5564.executeandreturn("SELECT F_BOOLEAN FROM OP_HEADER WHERE ID='401062' AND SEQUENCE='0000'",v.Local.sret)
	F.Intrinsic.Control.If(v.Local.sRet.Trim,<>,"1")
		'f.Intrinsic.UI.CloseWaitDialog
		f.Intrinsic.UI.Msgbox("Warning: 'Use Six Decimal Precision for Tax Per Piece' is not turned on in System Support > Administration > Company Options (Standard) > Purchasing.  Please turn this on for precise tax calculations.")
	F.Intrinsic.Control.EndIf
	
	f.ODBC.Connection!con5564.executeandreturn("SELECT TEXT1 FROM OP_HEADER WHERE ID='400291' AND SEQUENCE='0000'",v.Local.sRet)
	f.Intrinsic.Control.If(v.Local.sRet.Trim,=,"")
		'f.Intrinsic.UI.CloseWaitDialog
		f.Intrinsic.UI.Msgbox("WARNING: Booking Variance account not set!  Please set under System Support > Administration > Company Options (Standard) > Inventory Accounting")
	f.Intrinsic.Control.EndIf
	
	F.Intrinsic.Control.If(v.DataTable.dtTaxes.Exists)
		f.Data.DataTable.Close("dtTaxes")
	F.Intrinsic.Control.EndIf
	f.Data.DataTable.CreateFromSQL("dtTaxes","con5564","select * from AR_TAX_TABLES")
	f.Intrinsic.Control.For(v.Local.i,0,v.DataTable.dtTaxes.RowCount--,1)
		f.Intrinsic.Control.If(v.DataTable.dtTaxes(v.Local.i).vat_exp_acct!Fieldvaltrim,=,"")
			f.Intrinsic.String.Concat("WARNING: TAX CODE ",v.DataTable.dtTaxes(v.Local.i).ZONE!FIELDVALTRIM," ",v.DataTable.dtTaxes(v.Local.i).AUTH!FIELDVALTRIM," Missing GL Account for AP",v.Local.sMsg)
			f.Intrinsic.UI.Msgbox(v.Local.sMsg)
		f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.Next(v.Local.i)
	
	F.Intrinsic.Control.If(V.Local.sVat.Trim,=,"1")
		f.Intrinsic.Control.For(v.Local.i,0,v.DataTable.dtTaxes.RowCount--,1)
			f.Intrinsic.Control.If(v.DataTable.dtTaxes(v.Local.i).vat_input_acct!Fieldvaltrim,=,"")
				f.Intrinsic.String.Concat("WARNING: TAX CODE ",v.DataTable.dtTaxes(v.Local.i).ZONE!FIELDVALTRIM," ",v.DataTable.dtTaxes(v.Local.i).AUTH!FIELDVALTRIM," Missing GL Account for AP",v.Local.sMsg)
				f.Intrinsic.UI.Msgbox(v.Local.sMsg)
			f.Intrinsic.Control.EndIf
		f.Intrinsic.Control.Next(v.Local.i)
	F.Intrinsic.Control.EndIf
	
	
	
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	f.ODBC.Connection!con5564.Close
	f.Intrinsic.Control.End
f.Intrinsic.Control.EndTry
Program.Sub.checkTable.End

Program.Sub.loadLookups.Start
f.Intrinsic.Control.Try
	'GL master
	f.Intrinsic.Control.If(v.DataTable.dtGLMast.Exists)
		f.Data.DataTable.Close("dtGLMast")
	f.Intrinsic.Control.EndIf
	f.Data.Datatable.CreateFromSQL("dtGLMast","con5564","SELECT GL_ACCOUNT AS 'Account', DESCR as 'Description' FROM V_GL_MASTER where inactive_date='1900-01-01' order by GL_ACCOUNT",true)
	GUI.frmAPAutomationIndex.lookupGL.DataTableBasis("dtGLMast")
	gui.frmAPAutomationIndex.lookupGL.show
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.loadLookups.End


Program.Sub.DeserializeAll.Start
f.Intrinsic.Control.Try
	'Deserialize all GVs
	'F.Intrinsic.Control.CallSub(Deserialize, "Form", "frmAPAutomationIndex", "GridControl", "gsgcAPInvoices", "GridView", "gvAPInvoices", "RegID", 5564)
	F.Intrinsic.Control.CallSub(Deserialize, "Form", "frmAPAutomationIndex", "GridControl", "gsgcPOLines", "GridView", "gvPOLines", "RegID", 5564)
	F.Intrinsic.Control.CallSub(Deserialize, "Form", "frmAPAutomationIndex", "GridControl", "gsgcRecLineItems", "GridView", "gvRecLines", "RegID", 5564)

f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.DeserializeAll.End

Program.Sub.Deserialize.Start
F.Intrinsic.Control.Try
V.Local.sError.Declare
V.Local.sSerialize.Declare
V.Local.sForm.Declare
V.Local.sGridControl.Declare
V.Local.sGridView.Declare
V.Local.sREGID.Declare
V.Local.bEditOpt.Declare

V.Local.sForm.Set(V.Args.Form.Trim)
V.Local.sGridControl.Set(V.Args.GridControl.Trim)
V.Local.sGridView.Set(V.Args.GridView.Trim)
V.Local.sREGID.Set(V.Args.REGID.Trim)
'V.Local.bEditOpt.Set(V.Args.EditOpt)

F.Global.Registry.ReadValue(V.Caller.User, V.Caller.CompanyCode, V.Local.sGridView, V.Local.sREGID, 1000, 6, "", V.Local.sSerialize)
F.Intrinsic.Control.If(V.Local.sSerialize.Trim,<>,"")
	Gui.[V.Local.sForm].[V.Local.sGridControl].Deserialize(V.Local.sSerialize)
F.Intrinsic.Control.EndIf

'View/Edit Radio button Deserialize 
'F.Intrinsic.Control.If(V.Local.bEditOpt)
'	F.Global.Registry.ReadValue(V.Caller.User, V.Caller.CompanyCode, V.Local.sGridView, V.Local.sREGID, 1000, 0, "", V.Local.bEditOpt)
'	F.Intrinsic.Control.If(V.Local.bEditOpt)
'		Gui.F_Dash.opt_Edit.Value(True)
'	F.Intrinsic.Control.Else
'		Gui.F_Dash.opt_View.Value(True)
'	F.Intrinsic.Control.EndIf
'F.Intrinsic.Control.EndIf



F.Intrinsic.Control.Catch

	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} at {6} with description {4}{1}{1}GAB Version: {5}", V.Caller.ScriptFile, V.Ambient.Newline, V.Ambient.CurrentSubroutine, V.Ambient.ErrorNumber, V.Ambient.ErrorDescription, V.Ambient.GABVersion, V.Ambient.Now, V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.End()

F.Intrinsic.Control.EndTry
Program.Sub.Deserialize.End


Program.Sub.SerializeAll.Start
f.Intrinsic.Control.Try
	'Serialize all GVs
	'F.Intrinsic.Control.CallSub(Serialize, "Form", "frmAPAutomationIndex", "GridControl", "gsgcAPInvoices", "GridView", "gvAPInvoices", "RegID", 5564)
	F.Intrinsic.Control.CallSub(Serialize, "Form", "frmAPAutomationIndex", "GridControl", "gsgcPOLines", "GridView", "gvPOLines", "RegID", 5564)
	F.Intrinsic.Control.CallSub(Serialize, "Form", "frmAPAutomationIndex", "GridControl", "gsgcRecLineItems", "GridView", "gvRecLines", "RegID", 5564)
	
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.SerializeAll.End

Program.Sub.Serialize.Start
F.Intrinsic.Control.Try

V.Local.sError.Declare
V.Local.sSerialize.Declare
V.Local.sForm.Declare
V.Local.sGridControl.Declare
V.Local.sGridView.Declare
V.Local.sREGID.Declare
V.Local.bEditOpt.Declare

V.Local.sForm.Set(V.Args.Form.Trim)
V.Local.sGridControl.Set(V.Args.GridControl.Trim)
V.Local.sGridView.Set(V.Args.GridView.Trim)
V.Local.sREGID.Set(V.Args.REGID.Trim)
'V.Local.bEditOpt.Set(V.Args.EditOpt)

GUI.[V.Local.sForm].[V.Local.sGridControl].Serialize(V.Local.sGridView, V.Local.sSerialize)
F.Global.Registry.AddValue(V.Caller.User, V.Caller.CompanyCode, V.Local.sGridView, V.Local.sREGID, 1000, False, "Serialize", V.Local.bEditOpt, 0, -999.0 , 1/1/1980, 12:00:00 AM, V.Local.sSerialize)

F.Intrinsic.Control.Catch

	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} at {6} with description {4}{1}{1}GAB Version: {5}", V.Caller.ScriptFile, V.Ambient.Newline, V.Ambient.CurrentSubroutine, V.Ambient.ErrorNumber, V.Ambient.ErrorDescription, V.Ambient.GABVersion, V.Ambient.Now, V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.End()

F.Intrinsic.Control.EndTry
Program.Sub.Serialize.End

#End Region ' Initialize

#Region "Load data and API calls"

Program.Sub.getAppData.Start
f.Intrinsic.Control.Try 'takes data from XXtr and downloads it into 5564 AP download table	
	v.Local.sxpath.Declare
	v.Local.sret.Declare
	V.Local.sDateTimeStamp.Declare
	v.Local.sKey.Declare
	v.Local.sWF.Declare
	v.Local.sFile.declare
	v.Local.lHand.Declare
	v.Local.sDoc.Declare
	v.Local.sDwn.Declare
	v.Local.sXML.Declare
	v.Local.sStat.Declare
	v.Local.sNode.Declare
	v.Local.bEOF.Declare
	v.Local.sDocID.Declare
	v.Local.sRowID.Declare
	v.Local.sDocURL.Declare
	v.Local.sImgURL.Declare
	v.Local.sFieldID.Declare
	v.Local.sFieldName.Declare
	v.Local.sResult.Declare
	V.Local.sExpr.Declare
	v.Local.sRow.Declare
	v.Local.sTaxCode.Declare
	v.Local.sDescLine.Declare
	v.Local.sGenrCode.Declare
	v.Local.sNotes.Declare
	v.Local.sPORecLine.Declare
	v.Local.sPOHead.Declare
	v.Local.sPOLine.Declare
	v.Local.sPORcvr.Declare
	v.Local.sGLCode.Declare
	v.Local.sItemCode.Declare
	v.Local.sVendName.Declare
	v.Local.sInvcNumb.Declare
	v.Local.sInvcDate.Declare
	v.Local.fSubTotal.Declare
	v.Local.sSubTotal.Declare
	v.Local.fGSTValue.Declare
	v.Local.sGSTValue.Declare
	v.Local.fGrossVal.Declare
	v.Local.sGrossVal.Declare
	v.Local.fQuantity.Declare
	v.Local.sQuantity.Declare
	v.Local.fUnitCost.Declare
	v.Local.sUnitCost.Declare
	v.Local.fExtension.Declare
	v.Local.sExtension.Declare
	V.Local.sPORecKey.Declare
	v.Local.sSql.Declare
	V.Local.iVar.Declare
	v.Local.iRow.Declare
	v.Local.iPORev.Declare
	v.Local.iGL.Declare
	v.Local.sRevPad.Declare
	v.Local.sAdminDetailsFile.Declare
	v.Local.sApiID.Declare
	v.Local.sWorkflowID.Declare
	v.Local.sAPIKeyFile.Declare
	v.Local.sAPIKey.Declare
	v.Local.sFileName.Declare
	v.Local.sVendorNo.Declare
	v.Local.sVat.Declare
	v.Local.sLoc.Declare
	v.Local.sBranch.Declare
	v.Local.sPackList.Declare
	v.Local.sVoucher.Declare
	v.Local.sBookUseTax.Declare
	v.Local.sDocSaveLocation.Declare
	v.Local.sInsertHeaderSQL.Declare
	v.Local.sInsertLinesSQL.Declare
	v.Local.sBuyer.Declare
	v.Local.sXrefCheck.Declare
	v.Local.sPDFFile.Declare
	v.Local.sVarAcct.Declare
	v.Local.iHID.Declare
	v.Local.bIsNumb.Declare
	v.Local.bIsDate.Declare
	V.Local.sMSG.Declare
	
	'Grab Receiver Lines & PO Lines in Master Table
	f.Intrinsic.Control.CallSub(getPOData)

	'Invoices are Next
	f.Intrinsic.Control.If(v.DataTable.dtAPAllInvoices.Exists)
		f.Data.DataTable.Close("dtAPAllInvoices")
		F.Data.DataTable.Close("dtAPAllInvoicesTemp")
		f.Data.DataView.Close("dtAPAllInvoicesTemp","dvAPAllInvoicesTemp")
	f.Intrinsic.Control.EndIf
	
	f.Data.DataTable.CreateFromSQL("dtAPAllInvoicesTemp","con5564","SELECT LTrim(RTrim(VENDOR))+LTrim(RTrim(INVOICE)) As VENDINV, invoice, PURCHASE_ORDER, Vendor, IF (SUBSTRING (AP_OPEN_ITEMS .DATE_INVOICE ,5 ,2 )<= '99' AND SUBSTRING (AP_OPEN_ITEMS .DATE_INVOICE ,5 ,2 )>= '00' AND SUBSTRING (AP_OPEN_ITEMS .DATE_INVOICE ,1 ,2 )<= '12' AND SUBSTRING (AP_OPEN_ITEMS .DATE_INVOICE ,1 ,2 )>= '01' AND SUBSTRING (AP_OPEN_ITEMS .DATE_INVOICE ,3 ,2 )<= '31' AND SUBSTRING (AP_OPEN_ITEMS .DATE_INVOICE ,3 ,2 )>= '01' ,IF (SUBSTRING (AP_OPEN_ITEMS .DATE_INVOICE ,5 ,2 )< '80' ,CONVERT ('20' +SUBSTRING (AP_OPEN_ITEMS .DATE_INVOICE ,5 ,2 )+'-' +SUBSTRING (AP_OPEN_ITEMS .DATE_INVOICE ,1 ,2 )+'-' +SUBSTRING (AP_OPEN_ITEMS .DATE_INVOICE ,3 ,2 ),SQL_DATE ),CONVERT ('19' +SUBSTRING (AP_OPEN_ITEMS .DATE_INVOICE ,5 ,2 )+'-' +SUBSTRING (AP_OPEN_ITEMS .DATE_INVOICE ,1 ,2 )+'-' +SUBSTRING (AP_OPEN_ITEMS .DATE_INVOICE ,3 ,2 ),SQL_DATE )),CONVERT ('1900-01-01' ,SQL_DATE ))DATE_INVOICE, AMT_INVOICE FROM AP_OPEN_ITEMS AP_OPEN_ITEMS ORDER BY AP_OPEN_ITEMS .VENDOR",true)
	F.Data.DataTable.AddColumn("dtAPAllInvoicesTemp","ZERO",Float,0.0)	
	F.Data.Dictionary.CreateFromSQL("dZero","con5564","SELECT LTrim(RTrim(VENDOR))+LTrim(RTrim(INVOICE)) As VENDINV,SUM(CASE BATCH_CODE WHEN '11' THEN -AMT_TRANSACTION WHEN '12' THEN -AMT_TRANSACTION ELSE AMT_TRANSACTION END) FROM V_AP_OPEN_ITEMS GROUP BY VENDOR,INVOICE;",32,true)	
	F.Data.Dictionary.SetDefaultReturn("dZero",0.0)
	F.Data.DataTable.FillFromDictionary("dtAPAllInvoicesTemp","dZero","VENDINV","ZERO")
	f.Data.Dictionary.Close("dZero")
	f.Data.DataView.Create("dtAPAllInvoicesTemp","dvAPAllInvoicesTemp",22,"ZERO <> 0","")
	f.Data.DataView.ToDataTable("dtAPAllInvoicesTemp","dvAPAllInvoicesTemp","dtAPAllInvoices",TRUE)
	f.Data.DataTable.RemoveColumn("dtAPAllInvoices","ZERO")
	f.Data.DataTable.RemoveColumn("dtAPAllInvoices","VENDINV")
	f.Data.DataView.Create("dtAPAllInvoices","dvAPAllInvoices")
	
	f.ODBC.Connection!con5564.executeandreturn("SELECT TEXT1 FROM OP_HEADER WHERE ID='400291' AND SEQUENCE='0000'",V.Local.sVarAcct)
	gui.frmAPAutomationIndex.txtEVarianceAcct.Text(v.Local.sVarAcct)
	
	f.Intrinsic.String.Concat(v.Caller.GasDir,"\",v.Caller.CompanyCode,"_GAB_5564_AP_AUTOMATION_ADMIN_SETTINGS.txt",v.Local.sAPIKeyFile)
	f.Intrinsic.File.File2String(v.Local.sAPIKeyFile,v.Local.sAPIKey)
	
	f.Intrinsic.String.Split(v.Local.sAPIKey,v.Ambient.NewLine,v.Local.sAPIKey) 
	'API ID and Workflow id Catalinabay19
	f.Intrinsic.Control.If(v.DataTable.dtApp.Exists)
		f.Data.DataTable.Close("dtApp")
	f.Intrinsic.Control.EndIf
	f.Data.DataTable.Create("dtApp",true)
	F.Data.DataTable.AddColumn("dtapp","Part","String")
	F.Data.DataTable.AddColumn("dtapp","RowID","String")
	F.Data.DataTable.AddColumn("dtapp","Processed","Boolean")
	F.Data.DataTable.AddColumn("dtapp","TaxableFlag","Boolean")
	F.Data.DataTable.AddColumn("dtapp","POHead","String")
	F.Data.DataTable.AddColumn("dtapp","Line","String")
	F.Data.DataTable.AddColumn("dtapp","Rcvr","String")
	F.Data.DataTable.AddColumn("dtapp","PORecLine","String")
	F.Data.DataTable.AddColumn("dtapp","VendCode","String")
	F.Data.DataTable.AddColumn("dtapp","DescLine","String")
	F.Data.DataTable.AddColumn("dtapp","GLAccount","String")
	F.Data.DataTable.AddColumn("dtapp","DOCID","String")
	F.Data.DataTable.AddColumn("dtapp","DOCURL","String")
	F.Data.DataTable.AddColumn("dtapp","VendName","String")
	F.Data.DataTable.AddColumn("dtapp","INVCNUMB","String")
	F.Data.DataTable.AddColumn("dtapp","InvcDate","String")
	F.Data.DataTable.AddColumn("dtapp","SubTotal","Float")
	F.Data.DataTable.AddColumn("dtapp","GstTotal","Float")
	F.Data.DataTable.AddColumn("dtapp","GrsTotal","Float")
	F.Data.DataTable.AddColumn("dtapp","ImgURL","String")
	F.Data.DataTable.AddColumn("dtapp","DownStat","String")
	F.Data.DataTable.AddColumn("dtapp","DocSavedLocation","String")
	F.Data.DataTable.AddColumn("dtapp","XRefCheck","String")
	F.Data.DataTable.AddColumn("dtapp","Notes","String")
	F.Data.DataTable.AddColumn("dtapp","TaxCode","String")
	F.Data.DataTable.AddColumn("dtapp","UnitCost","Float")
	F.Data.DataTable.AddColumn("dtapp","Quantity","Float")
	F.Data.DataTable.AddColumn("dtapp","Extension","Float")
	
	f.Intrinsic.String.Format(v.Ambient.Now,"YYYYMMDDHHNNSS",v.Local.sDateTimeStamp)
	f.Intrinsic.String.concat(v.Caller.TempDir,"\API_Data_",v.Local.sDateTimeStamp,".xml",v.Local.sFile)
	f.Intrinsic.String.Build("{{0}api_key{0} : {0}{1}{0}, {0}api_download_status{0} : {0}active{0},  {0}workflow_id{0} : {0}{2}{0}, {0}any_user_documents{0} : {0}1{0}, {0}document_status{0} : {0}output{0}, {0}detailed{0} : {0}1{0}, {0}items_per_page{0} : {0}1000{0} }",v.Ambient.DblQuote,v.Local.sAPIKey(0),v.Local.sAPIKey(1),v.Local.sKey)
	F.Communication.REST.SetProperty("ContentType","application/json")
	f.Communication.REST.SetProperty("PostData",v.Local.sKey)
	F.Intrinsic.Control.Try
		F.Communication.REST.Post("https://api-app.xtracta.com/v1/documents")
	F.Intrinsic.Control.Catch
		'Using this to catch the POST error...
	F.Intrinsic.Control.EndTry
	f.Communication.REST.ReadProperty("TransferredData",V.Local.sret)
	f.Intrinsic.File.String2File(v.Local.sFile,v.Local.sret)
	
	F.Intrinsic.String.Build("Doc{0}",0,V.Local.sDoc)
	F.Global.XML.LoadDocument(V.local.sdoc,V.local.sFile,False,False,False,False)
	f.global.XML.Query(v.local.sdoc,"set1","//*")
	'loop through node set
	F.Intrinsic.Control.dountil(V.local.bEOF,=,True)
		'Get the node name
		f.global.xml.ReadNodeSetValue(v.local.sdoc,"set1","nodeName",V.local.sret)
		
		f.Intrinsic.Control.If(v.Local.sret.Trim,=,"document_id")
			v.Local.iRow.Set(0)
			f.global.xml.ReadNodeSetValue(v.local.sdoc,"set1","text",V.local.sDocID)
		f.Intrinsic.Control.ElseIf(v.Local.sret.Trim,=,"api_download_status")
			f.global.xml.ReadNodeSetValue(v.local.sdoc,"set1","text",V.local.sDwn)
		f.Intrinsic.Control.ElseIf(v.Local.sret.Trim,=,"document_url")
			f.global.xml.ReadNodeSetValue(v.local.sdoc,"set1","text",V.local.sDocURL)
		f.Intrinsic.Control.ElseIf(v.Local.sret.Trim,=,"image_url")
			f.global.xml.ReadNodeSetValue(v.local.sdoc,"set1","text",V.local.sImgURL)
		f.Intrinsic.Control.ElseIf(v.Local.sret.Trim,=,"field_name")
			f.global.xml.ReadNodeSetValue(v.local.sdoc,"set1","text",V.local.sFieldName)
			f.Intrinsic.Control.If(v.Local.sFieldName.Trim,=,"PO Header #")
				f.global.xml.next(v.local.sdoc,"set1",V.local.bEOF)
				f.global.xml.ReadNodeSetValue(v.local.sdoc,"set1","text",V.local.sPOHead)
				f.Intrinsic.Control.For(v.Local.iPORev,0,10,1)
					f.Intrinsic.String.LPad(v.Local.iPORev,"0",2,v.Local.sRevPad)
					f.Intrinsic.String.Concat("-",v.Local.sRevPad,v.Local.sRevPad)
					F.Intrinsic.String.Replace(v.Local.sPOHead,v.Local.sRevPad,"",v.Local.sPOHead)
				f.Intrinsic.Control.Next(v.local.iPORev)
				f.Intrinsic.String.LPad(v.Local.sPOHead,"0",7,v.Local.sPOHead)
				f.Intrinsic.Control.If(v.Local.sPOHead,=,"0000000")
					v.Local.sPOHead.Set("")
				f.Intrinsic.Control.EndIf
			f.Intrinsic.Control.ElseIf(v.Local.sFieldName.Trim,=,"Item Code")
				f.global.xml.next(v.local.sdoc,"set1",V.local.bEOF)
				f.global.xml.ReadNodeSetValue(v.local.sdoc,"set1","text",V.local.sItemCode)
				
				f.Global.XML.Back(v.Local.sDoc,"set1",v.Local.bEOF)
			f.Intrinsic.Control.Elseif(v.Local.sFieldName.Trim,=,"Description")
				f.global.xml.next(v.local.sdoc,"set1",V.local.bEOF)
				f.global.xml.ReadNodeSetValue(v.local.sdoc,"set1","text",V.local.sDescLine)
				f.Global.XML.Back(v.Local.sDoc,"set1",v.Local.bEOF)
			f.Intrinsic.Control.Elseif(v.Local.sFieldName.Trim,=,"Quantity")
				f.global.xml.next(v.local.sdoc,"set1",V.local.bEOF)
				f.global.xml.ReadNodeSetValue(v.local.sdoc,"set1","text",V.local.sQuantity)
				f.Intrinsic.Math.IsNumeric(v.Local.sQuantity,v.Local.bIsNumb)
				f.Intrinsic.Control.If(v.Local.bIsNumb)
					v.Local.fQuantity.Set(v.Local.sQuantity)
				f.Intrinsic.Control.EndIf
				f.Global.XML.Back(v.Local.sDoc,"set1",v.Local.bEOF)
			F.Intrinsic.Control.ElseIf(V.Local.sFieldName.Trim,=,"Supplier Name")
				f.global.xml.next(v.local.sdoc,"set1",V.local.bEOF)
				f.global.xml.ReadNodeSetValue(v.local.sdoc,"set1","text",V.local.sVendName)
				f.Global.XML.Back(v.Local.sDoc,"set1",v.Local.bEOF)
			f.Intrinsic.Control.ElseIf(v.Local.sFieldName.Trim,=,"Invoice Number")
				f.global.xml.next(v.local.sdoc,"set1",V.local.bEOF)
				f.global.xml.ReadNodeSetValue(v.local.sdoc,"set1","text",V.local.sInvcNumb)
				'Added this line in to prevent very long (and incorrect) Invoice numbers from causing issues later on when trying to save the pdf file control. -SS 
				F.Intrinsic.String.Left(V.Local.sInvcNumb,100,V.Local.sInvcNumb)
				f.Global.XML.Back(v.Local.sDoc,"set1",v.Local.bEOF)
			f.Intrinsic.Control.ElseIf(v.Local.sFieldName.Trim,=,"Invoice Date")
				f.global.xml.next(v.local.sdoc,"set1",V.local.bEOF)
				f.global.xml.ReadNodeSetValue(v.local.sdoc,"set1","text",V.local.sInvcDate)
				f.Global.XML.Back(v.Local.sDoc,"set1",v.Local.bEOF)
			f.Intrinsic.Control.ElseIf(v.Local.sFieldName.Trim,=,"Sub Total")
				f.global.xml.next(v.local.sdoc,"set1",V.local.bEOF)
				f.global.xml.ReadNodeSetValue(v.local.sdoc,"set1","text",V.local.sSubTotal)
				f.Intrinsic.String.Replace(v.Local.sSubTotal,"$","",v.Local.sSubTotal)
				f.Intrinsic.Math.IsNumeric(v.Local.sSubTotal,v.Local.bIsNumb)
				f.Intrinsic.Control.If(v.Local.bIsNumb)
					v.Local.fSubTotal.Set(v.Local.sSubTotal)
				f.Intrinsic.Control.EndIf
				f.Global.XML.Back(v.Local.sDoc,"set1",v.Local.bEOF)
			f.Intrinsic.Control.ElseIf(v.Local.sFieldName.Trim,=,"GST Total")
				f.global.xml.next(v.local.sdoc,"set1",V.local.bEOF)
				f.global.xml.ReadNodeSetValue(v.local.sdoc,"set1","text",V.local.sGSTValue)
				f.Intrinsic.String.Replace(v.Local.sGSTValue,"$","",v.Local.sGSTValue)
				f.Intrinsic.Math.IsNumeric(v.Local.fGSTValue,v.Local.bIsNumb)
				f.Intrinsic.Control.If(v.Local.bIsNumb)
					v.Local.fGSTValue.Set(v.Local.sGSTValue)
				f.Intrinsic.Control.EndIf
				f.Global.XML.Back(v.Local.sDoc,"set1",v.Local.bEOF)
			f.Intrinsic.Control.ElseIf(v.Local.sFieldName.Trim,=,"Gross Total")
				f.global.xml.next(v.local.sdoc,"set1",V.local.bEOF)
				f.global.xml.ReadNodeSetValue(v.local.sdoc,"set1","text",V.local.sGrossVal)
				f.Intrinsic.String.Replace(v.Local.sGrossVal,"$","",v.Local.sGrossVal)
				f.Intrinsic.Math.IsNumeric(v.Local.sGrossVal,v.Local.bIsNumb)
				f.Intrinsic.Control.If(v.Local.bIsNumb)
					v.Local.fGrossVal.Set(v.Local.sGrossVal)
				f.Intrinsic.Control.EndIf
				f.Global.XML.Back(v.Local.sDoc,"set1",v.Local.bEOF)
			f.Intrinsic.Control.ElseIf(v.Local.sFieldName.Trim,=,"Unit Cost")
				f.global.xml.next(v.local.sdoc,"set1",V.local.bEOF)
				f.global.xml.ReadNodeSetValue(v.local.sdoc,"set1","text",V.local.sUnitCost)
				f.Intrinsic.String.Replace(v.Local.sUnitCost,"$","",v.Local.sUnitCost)
				f.Intrinsic.Math.IsNumeric(v.Local.sUnitCost,v.Local.bIsNumb)
				f.Intrinsic.Control.If(v.Local.bIsNumb)
					v.Local.fUnitCost.Set(v.Local.sUnitCost)
				f.Intrinsic.Control.EndIf
				f.Global.XML.Back(v.Local.sDoc,"set1",v.Local.bEOF)
			f.Intrinsic.Control.ElseIf(v.Local.sFieldName.Trim,=,"Notes")
				f.global.xml.next(v.local.sdoc,"set1",V.local.bEOF)
				f.global.xml.ReadNodeSetValue(v.local.sdoc,"set1","text",V.local.sNotes)
				f.Global.XML.Back(v.Local.sDoc,"set1",v.Local.bEOF)
			f.Intrinsic.Control.Elseif(v.Local.sFieldName.Trim,=,"Extension")
			
				f.global.xml.next(v.local.sdoc,"set1",V.local.bEOF)
				f.global.xml.ReadNodeSetValue(v.local.sdoc,"set1","text",V.local.sExtension)
				f.Intrinsic.String.Replace(v.Local.sExtension,"$","",v.Local.sExtension)
				f.Intrinsic.Math.ConvertToFloat(v.Local.sExtension,v.Local.fExtension)
				f.Global.XML.Back(v.Local.sDoc,"set1",v.Local.bEOF)
	
				f.Intrinsic.Math.Add(v.Local.iRow,1,v.Local.iRow)
				f.Intrinsic.String.LPad(v.Local.iRow,"0",3,v.Local.sRowID)
				f.Intrinsic.String.Concat(v.Local.sDocID,v.Local.sRowID,v.Local.sRowID)
				f.Intrinsic.String.Build("RowID={0}",v.Local.sRowID,v.Local.sExpr)
				f.Data.DataTable.Select("dtApp",V.Local.sExpr,v.Local.sRow)
				
				V.local.sVendName.Set(v.Local.sVendName.UCase)
				'Add row to database
				f.Intrinsic.Control.If(v.Local.sRow,=,"***NORETURN***")
					'Omit Row ID
					F.IntrinsiC.Control.If(V.Local.sInvcDate.Trim,=,"")
						v.Local.sInvcDate.Set("1900-01-01")
					F.Intrinsic.Control.EndIf
					F.Intrinsic.String.Replace(V.Local.sInvcDate,"Time","",v.Local.sInvcDate)
					f.Intrinsic.Date.IsDate(v.Local.sInvcDate,v.Local.bIsDate)
					f.Intrinsic.Control.If(v.Local.bIsDate,=,false)
						f.Intrinsic.String.Format(v.Ambient.Date,"YYYY-MM-DD",v.Local.sInvcDate)
					f.Intrinsic.Control.EndIf
					f.Data.DataTable.AddRow("dtApp","Part",v.Local.sItemCode,"RowID",V.Local.sRowID,"Processed",False,"TAXABLEFLAG",True,"POHead",v.Local.sPOHead,"lINE",v.Local.sPOLine,"RCVR",v.Local.sPORcvr, "PORECLine",v.Local.sPORecLine,"DescLine",v.Local.sDescLine,"Quantity",v.Local.fQuantity,"UnitCost",v.Local.fUnitCost,"Extension",v.Local.fExtension,"GLAccount",v.Local.sGLCode, "DocID",v.Local.sdocid,"DocURL",v.Local.sDocURL,"VendName",v.Local.sVendName,"InvcNumb",v.Local.sInvcNumb,"InvcDate",v.Local.sInvcDate,"SubTotal",v.Local.fSubTotal,"GstTotal",v.Local.fGSTValue,"GrsTotal",v.Local.fGrossVal,"ImgURL",v.Local.sImgURL,"DownStat",v.Local.sDwn,"Notes",v.local.sNotes)
					
					'populated in zensql ^
					f.Intrinsic.Control.CallSub(getAdditionalVendorData,"RowID",v.Local.sRowID,"POHead",v.Local.sPOHead,"POLine",v.Local.sPOLine,"PORcvr",v.Local.sPORcvr,"VendName",v.Local.sVendName)
					
					'creating the file name "InvoiceNumber-DocID"
					f.Intrinsic.String.Concat("select TOP 1 VENDORCODE from GAB_5564_AP_XREF WHERE VENDORNAME = '", v.Local.sVendName.PSQLFriendly ,"'",v.local.sSql)
					f.ODBC.Connection!con5564.ExecuteAndReturn(v.Local.sSql,v.Local.sVendorNo)
					
					f.Intrinsic.String.Replace(v.Local.sInvcNumb, "/","",v.Local.sInvcNumb)
					f.Intrinsic.String.Replace(v.Local.sFileName, "/","",v.Local.sFileName)
					f.Intrinsic.String.Replace(v.Local.sInvcNumb, "\","",v.Local.sInvcNumb)
					f.Intrinsic.String.Replace(v.Local.sFileName, "\","",v.Local.sFileName)
					f.Intrinsic.String.Replace(v.Local.sInvcNumb, ":","",v.Local.sInvcNumb)
					f.Intrinsic.String.Replace(v.Local.sFileName, ":","",v.Local.sFileName)
					f.Intrinsic.String.Replace(v.Local.sInvcNumb, "<","",v.Local.sInvcNumb)
					f.Intrinsic.String.Replace(v.Local.sFileName, "<","",v.Local.sFileName)
					f.Intrinsic.String.Replace(v.Local.sInvcNumb, ">","",v.Local.sInvcNumb)
					f.Intrinsic.String.Replace(v.Local.sFileName, ">","",v.Local.sFileName)
					f.Intrinsic.String.Replace(v.Local.sInvcNumb, "|","",v.Local.sInvcNumb)
					f.Intrinsic.String.Replace(v.Local.sFileName, "|","",v.Local.sFileName)
					f.Intrinsic.String.Replace(v.Local.sInvcNumb, "?","",v.Local.sInvcNumb)
					f.Intrinsic.String.Replace(v.Local.sFileName, "?","",v.Local.sFileName)
					f.Intrinsic.String.Replace(v.Local.sInvcNumb, "*","",v.Local.sInvcNumb)
					f.Intrinsic.String.Replace(v.Local.sInvcNumb, "#","",v.Local.sInvcNumb)
					f.Intrinsic.String.Replace(v.Local.sFileName, "*","",v.Local.sFileName)
					f.Intrinsic.String.Replace(v.Local.sFileName, "#","",v.Local.sFileName)
					f.Intrinsic.String.Replace(v.Local.sInvcNumb, v.Ambient.DblQuote,"",v.Local.sInvcNumb)
					f.Intrinsic.String.Replace(v.Local.sFileName, v.Ambient.DblQuote,"",v.Local.sFileName)
					
					f.Intrinsic.String.Concat(v.Local.sInvcNumb,"-", v.Local.sDocID,v.Local.sFileName)
					
					f.Intrinsic.Control.CallSub(subDownloadAPInvoices,"SupplierName",v.Local.sVendName,"RowID",v.Local.sRowID,"VendorNo", v.Local.sVendorNo, "FileName", v.Local.sFileName, "DocURL", v.Local.sDocURL, "DocID", v.Local.sDocID, "POHead", v.Local.sPOHead)
					F.Intrinsic.Variable.ArgToVar("rFilePath",v.Local.sPDFFile)
					f.Intrinsic.Variable.ArgToVar("rPDFFile",v.Local.sPDFFile)
					f.Intrinsic.Variable.ArgToVar("rXrefCheck",v.Local.sXrefCheck)
					f.Intrinsic.Variable.ArgToVar("rTaxCode",v.Local.sTaxCode)
	
					'Insert Header
					
					'f.Intrinsic.Debug.ShowCallerInfo
					v.Local.sLocationtesting.Declare
					f.Intrinsic.String.Build("SELECT ID FROM GAB_5564_AP_HEAD WHERE DOCID={0}",V.Local.sDocID,v.Local.ssql)
					f.ODBC.Connection!con5564.ExecuteAndReturn(v.Local.sSql,v.Local.iHID)
					F.Intrinsic.Control.If(V.Local.iHID,=,0)
						v.Local.sLocationtesting.Set("1")
						v.Local.sSql.Set("INSERT INTO GAB_5564_AP_HEAD VALUES ({0},'{1}','{2}','{3}','{4}','{5}','{6}','{7}','{8}','{9}','{10}','{11}','{12}','{13}','{14}','{15}','{16}','{17}','{18}','{19}','{20}','{21}','{22}')")					
						F.Intrinsic.String.Build(v.Local.sSql,v.Local.sDocID,v.Local.sDocURL,v.Local.sImgURL,v.Local.sVendorNo,v.Local.sVendName.PSQLFriendly,v.Local.sInvcNumb.PSQLFriendly,v.Local.sInvcDate.PervasiveDate,v.Local.sPOHead.PSQLFriendly,v.Local.fSubTotal,0,v.Local.fGSTValue,v.Local.fGrossVal,v.Local.sDwn,v.Local.sNotes,"queue","",v.Local.sPDFFile.PSQLFriendly,0,0,0,0,"","1900-10-10",v.Local.sSql)
						f.ODBC.Connection!con5564.Execute(v.Local.sSql)
						
					F.Intrinsic.Control.EndIf
					
					'Insert Line
					f.Intrinsic.String.Build("SELECT ID FROM GAB_5564_AP_HEAD WHERE DOCID={0}",V.Local.sDocID,v.Local.ssql)
					f.ODBC.Connection!con5564.ExecuteAndReturn(v.Local.sSql,v.Local.iHID)
					f.Intrinsic.Control.If(v.Local.iHID,<>,0)
						v.Local.sLocationtesting.Set("2")
						v.Local.sSql.Set("INSERT INTO GAB_5564_AP_LINES VALUES ({0},'{1}','{2}','{3}','{4}','{5}','{6}','{7}','{8}','{9}','{10}','{11}','{12}','{13}','{14}','{15}','{16}','{17}',{18})")
						F.Intrinsic.String.Build(v.Local.sSql,v.Local.iHID,v.Local.sRowID,"",v.Local.sPOLine,v.Local.sPORcvr,v.Local.sGLCode,v.Local.fQuantity,v.Local.fUnitCost,v.Local.fExtension,v.Local.sPORecLine,"","",v.Local.sDescLine.PSQLFriendly,"","","","",1,0,v.Local.sSql)
						f.ODBC.Connection!con5564.Execute(v.Local.sSql)
					f.Intrinsic.Control.EndIf
					
					'Archive the document
					F.Intrinsic.Control.CallSub(archiveDocument,"DocID",v.Local.sDocID)
				f.Intrinsic.Control.EndIf	
				
			F.Intrinsic.Control.EndIf
			
		f.Intrinsic.Control.EndIf
		f.global.xml.next(v.local.sdoc,"set1",V.local.bEOF)
	F.Intrinsic.Control.loop	
	'close node set
	f.global.xml.closeSet(v.local.sdoc,"set1")
	F.global.xml.CloseDocument(v.local.sdoc)
	
	'Make everything UCase
	f.ODBC.Connection!con5564.Execute("UPDATE GAB_5564_AP_HEAD SET VENDNAME=UCASE(VENDNAME)")
	
	'Soft update vendor codes where vendor name exists and no vendor code
	F.ODBC.Connection!con5564.execute("UPDATE GAB_5564_AP_HEAD SET VENDCODE=(SELECT VENDORCODE FROM GAB_5564_AP_XREF Z WHERE GAB_5564_AP_HEAD.VENDNAME=Z.VENDORNAME)  WHERE VENDCODE='' AND VENDNAME<>''")
	
f.Intrinsic.Control.Catch
	v.Local.sError.Declare
	v.Local.iRet.Declare
	v.Local.sError.Set(v.Ambient.ErrorDescription)
	f.Intrinsic.String.Instr(v.Local.sError,"404",v.Local.iRet)
	f.Intrinsic.Control.If(v.Local.iRet,>,0)
		f.Intrinsic.UI.SleepMs(1)
	f.Intrinsic.Control.Else
		F.Intrinsic.UI.Msgbox(V.Ambient.ErrorDescription)
	f.Intrinsic.Control.EndIf
'	f.ODBC.Connection!con5564.Close
'	f.Intrinsic.Control.End
f.Intrinsic.Control.EndTry
Program.Sub.getAppData.End

Program.Sub.getPOData.Start
f.Intrinsic.Control.Try
	f.Intrinsic.Control.If(v.DataTable.dtPOReceiver.Exists)
		f.Data.DataTable.Close("dtPOReceiver")
	f.Intrinsic.Control.EndIf
	f.Data.Datatable.CreateFromSQL("dtPOReceiver","con5564","Select CAST (0 AS BIT) as 'SelectLine', RTRIM(PART) as PART, 'PSearch' AS 'PSearch',  CAST (QTY_RECEIVED AS FLOAT) AS 'QTY_RECEIVED', CAST (QTY_INVOICED AS FLOAT) AS 'QTY_INVOICED', cast (QTY_RECEIVED as FLOAT) as 'QTY_RECEIVED_ORIGINAL', PO_LINE,  cast (EXTENDED_COST  as float) 'RECEIVED_AMT', cast (EXTENDED_COST  as float) 'ACTUAL_AMT', cast(EXCHANGE_RATE as float) 'EXCH_RATE', cast(EXCH_EXT_COST as float) 'EXCH_COST',  GL_ACCOUNT,'GLSearch' AS 'GLSearch',JOB,SUFFIX,SEQUENCE as 'SEQ',LOCATION,TAXABLE, TAX_CODE, 'TCSearch' as 'TCSearch', PURCHASE_ORDER, RECEIVER_NO, DESCRIPTION, CAST (VAT_RULE As Integer) as 'VAT_RULE', PO_RECEIVER.VENDOR, NAME_VENDOR FROM PO_RECEIVER LEFT JOIN V_VENDOR_MASTER ON PO_RECEIVER.VENDOR=V_VENDOR_MASTER.VENDOR WHERE flag_opn_itm_post='Y'",true)
	f.Data.DataView.Create("dtPOReceiver","dvPOReciver")
	
	f.Intrinsic.Control.If(v.DataTable.dtPOLines.exists)
		f.Data.DataTable.Close("dtPOLines")
	f.Intrinsic.Control.EndIf
	F.Data.DataTable.CreateFromSQL("dtPOLines","con5564","select A.VENDOR, A.PURCHASE_ORDER, A.RECORD_NO, RTRIM(A.PART) as PART, RTRIM(A.DESCRIPTION) as DESCRIPTION, CAST(A.QTY_ORDER AS FLOAT) AS 'QTY_ORDER', A.UM_PURCHASING, CAST(A.COST AS FLOAT) AS 'COST', CAST(A.EXTENSION AS FLOAT) AS 'EXTENSION', RTRIM(A.LOCATION) as LOCATION from V_PO_LINES A where A.FLAG_RECV_CLOSE<>'Y'",true)
	f.Data.DataView.Create("dtPOLines","dvPOLines")
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	f.ODBC.Connection!con5564.Close
	f.Intrinsic.Control.End
f.Intrinsic.Control.EndTry
Program.Sub.getPOData.End

Program.Sub.loadQueues.Start
'loading the datatable main
f.Intrinsic.Control.Try
	v.Local.sDocID.Declare
	v.Local.sSql.Declare
	f.Intrinsic.Control.If(v.Args.Grid,=,"all","or",v.Args.grid,=,"queue")
		f.Intrinsic.Control.If(v.DataTable.dtAPInvQueue.Exists)
			'if datatable is already created, delete it
			f.Data.Datatable.DeleteRow("dtAPInvQueue")
			f.Data.Datatable.CreateFromSQL("dtAPTempLines","con5564","SELECT DISTINCT VendName,VENDCODE,GSTTOTAL, SUBTOTAL, GRSTOTAL, INVCDATE, INVCNUMB, DocSavedLocation, GssStatus, DOCID, ID, POHEAD,NOTES FROM GAB_5564_AP_HEAD WHERE GssStatus ='queue' ORDER BY VendName, InvcNumb",TRUE)
			f.Data.Datatable.Merge("dtAPTempLines","dtAPInvQueue",false,1)
			f.Data.Datatable.Close("dtAPTempLines")
		f.Intrinsic.Control.Else
			f.Data.Datatable.CreateFromSQL("dtAPInvQueue","con5564","SELECT DISTINCT VendName,VENDCODE,GSTTOTAL, SUBTOTAL, GRSTOTAL, INVCDATE, INVCNUMB, DocSavedLocation, GssStatus, DOCID,ID, POHEAD,NOTES FROM GAB_5564_AP_HEAD WHERE GssStatus ='queue' ORDER BY VendName, InvcNumb",TRUE)
			gui.frmAPAutomationIndex.gsgcQueue.DataSource("dtAPInvQueue")
		f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.EndIf
	
	f.Intrinsic.Control.If(v.Args.Grid,=,"all","or",v.Args.grid,=,"reject")
		f.Intrinsic.Control.If(v.DataTable.dtAPInvReject.Exists)
			'if datatable is already created, delete it
			f.Data.Datatable.DeleteRow("dtAPInvReject")
			f.Data.Datatable.CreateFromSQL("dtAPTempLines","con5564","SELECT DISTINCT VendName,VENDCODE,GSTTOTAL, SUBTOTAL, GRSTOTAL, INVCDATE, INVCNUMB, DocSavedLocation, GssStatus, RejectReason, DOCID,ID, POHEAD,NOTES FROM GAB_5564_AP_HEAD WHERE GssStatus='rejected' ORDER BY VendName, InvcNumb")
			f.Data.Datatable.Merge("dtAPTempLines","dtAPInvReject",false,1)
			f.Data.Datatable.Close("dtAPTempLines")
		F.Intrinsic.Control.Else
			f.Data.DataTable.CreateFromSQL("dtAPInvReject",con5564,"SELECT DISTINCT VendName,VENDCODE,GSTTOTAL, SUBTOTAL, GRSTOTAL, INVCDATE, INVCNUMB, DocSavedLocation, GssStatus, RejectReason, DOCID,ID, POHEAD,NOTES FROM GAB_5564_AP_HEAD WHERE GssStatus='rejected' ORDER BY VendName, InvcNumb",TRUE)
			gui.frmAPAutomationIndex.gsgcReject.DataSource("dtAPInvReject")
		f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.EndIf
	
	f.Intrinsic.Control.If(v.Args.Grid,=,"all","or",v.Args.grid,=,"approve")
		f.Intrinsic.Control.If(v.DataTable.dtAPInvApproved.Exists)
			'if datatable is already created, delete it
			f.Data.Datatable.DeleteRow("dtAPInvApproved")
			f.Data.Datatable.CreateFromSQL("dtAPTempLines","con5564","SELECT DISTINCT Cast(0 as Bit) as Sel, INVCNUMB, VendName,VENDCODE,SUBTOTAL, GSTTOTAL, GRSTOTAL, (select round(sum((received_amt - actual_amt)),2) as 'variance' from GAB_5564_AP_SA X where x.docid=A.DOCID) AS 'VARIANCE', INVCDATE, DocSavedLocation, GssStatus, RejectReason, DOCID,ID, POHEAD,NOTES FROM GAB_5564_AP_HEAD A WHERE GssStatus='approved' ORDER BY VendName, InvcNumb")
			f.Data.Datatable.Merge("dtAPTempLines","dtAPInvApproved",false,1)
			f.Data.Datatable.Close("dtAPTempLines")
		F.Intrinsic.Control.Else
			f.Data.DataTable.CreateFromSQL("dtAPInvApproved",con5564,"SELECT DISTINCT Cast(0 as Bit) as Sel, INVCNUMB, VendName,VENDCODE,SUBTOTAL, GSTTOTAL, GRSTOTAL, (select round(sum((received_amt - actual_amt)),2) as 'variance' from GAB_5564_AP_SA X where x.docid=A.DOCID) AS 'VARIANCE', INVCDATE,   DocSavedLocation, GssStatus, RejectReason, DOCID,ID, POHEAD,NOTES FROM GAB_5564_AP_HEAD A WHERE GssStatus='approved' ORDER BY VendName, InvcNumb",TRUE)
			F.Data.DataTable.AddExpressionColumn("dtAPInvApproved","InvVarTotal","float","Variance + GRSTOTAL")
			
			gui.frmAPAutomationIndex.gsgcApproved.DataSource("dtAPInvApproved")
			
		f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.EndIf
	
	f.Intrinsic.Control.If(v.Args.Grid,=,"all","or",v.Args.grid,=,"save")
		f.Intrinsic.Control.If(v.DataTable.dtAPInvSaved.Exists)
			'if datatable is already created, delete it
			f.Data.Datatable.DeleteRow("dtAPInvSaved")
			f.Data.Datatable.CreateFromSQL("dtAPTempLines","con5564","SELECT DISTINCT VendName,VENDCODE,GSTTOTAL, SUBTOTAL, GRSTOTAL, INVCDATE, INVCNUMB, DocSavedLocation, GssStatus, RejectReason, DOCID,ID, POHEAD,NOTES FROM GAB_5564_AP_HEAD WHERE GssStatus='saved' ORDER BY VendName, InvcNumb")
			f.Data.Datatable.Merge("dtAPTempLines","dtAPInvSaved",false,1)
			f.Data.Datatable.Close("dtAPTempLines")
		F.Intrinsic.Control.Else
			f.Data.DataTable.CreateFromSQL("dtAPInvSaved",con5564,"SELECT DISTINCT VendName,VENDCODE,GSTTOTAL, SUBTOTAL, GRSTOTAL, INVCDATE, INVCNUMB, DocSavedLocation, GssStatus, RejectReason, DOCID,ID, POHEAD,NOTES FROM GAB_5564_AP_HEAD WHERE GssStatus='saved' ORDER BY VendName, InvcNumb",TRUE)
			gui.frmAPAutomationIndex.gsgcSaved.DataSource("dtAPInvSaved")
		f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.EndIf

	f.Intrinsic.Control.If(v.Args.Grid,=,"all","or",v.Args.grid,=,"process")
		f.Intrinsic.Control.If(v.DataTable.dtAPInvProcessed.Exists)
			'if datatable is already created, delete it
			f.Data.Datatable.DeleteRow("dtAPInvProcessed")
			f.Data.Datatable.CreateFromSQL("dtAPTempLines","con5564","SELECT DISTINCT VendName,VENDCODE,GSTTOTAL, SUBTOTAL, GRSTOTAL, INVCDATE, INVCNUMB, DocSavedLocation, GssStatus, RejectReason, DOCID,ID, POHEAD,NOTES,PROCESSEDDATE FROM GAB_5564_AP_HEAD WHERE GssStatus='processed' ORDER BY VendName, InvcNumb")
			f.Data.Datatable.Merge("dtAPTempLines","dtAPInvProcessed",false,1)
			f.Data.Datatable.Close("dtAPTempLines")
		F.Intrinsic.Control.Else
			f.Data.DataTable.CreateFromSQL("dtAPInvProcessed",con5564,"SELECT DISTINCT VendName,VENDCODE,GSTTOTAL, SUBTOTAL, GRSTOTAL, INVCDATE, INVCNUMB, DocSavedLocation, GssStatus, RejectReason, DOCID,ID, POHEAD,NOTES,PROCESSEDDATE FROM GAB_5564_AP_HEAD WHERE GssStatus='processed' ORDER BY VendName, InvcNumb",TRUE)
			gui.frmAPAutomationIndex.gsgcProcessed.DataSource("dtAPInvProcessed")
		f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.EndIf

f.Intrinsic.Control.Catch
	F.Intrinsic.UI.Msgbox(V.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.loadQueues.End

Program.Sub.loadInvoiceDetail.Start
f.Intrinsic.Control.Try
	v.Local.i.Declare
	v.Local.ssql.Declare
	v.Local.stempsql.Declare
	v.Local.sInvNum.Declare
	v.local.sInvNum.Set(v.Args.InvoiceNumber)
	v.Local.sPONum.Declare
	v.Local.sPONum.Set(v.Args.PurchaseOrder)
	v.Local.sVendor.Declare
	v.Local.sVendor.Set(v.Args.Vendor)
	
	'AP Invoices
	f.Intrinsic.Control.If(v.DataTable.dtAPInvoices.Exists)
		f.Data.DataTable.DeleteRow("dtAPInvoices")
	f.Intrinsic.Control.Else
		f.Data.DataTable.Create("dtAPInvoices",true)
		f.Data.DataTable.AddColumn("dtAPInvoices","Invoice","String")
		f.Data.DataTable.AddColumn("dtAPInvoices","Vendor","String")
		f.Data.DataTable.AddColumn("dtAPInvoices","date_invoice","String")
		f.Data.DataTable.AddColumn("dtAPInvoices","purchase_order","String")
		f.Data.DataTable.AddColumn("dtAPInvoices","amt_invoice","Float")
		
		gui.frmAPAutomationIndex.gsgcAPInvoices.DataSource("dtAPInvoices")
	f.Intrinsic.Control.EndIf
	
	f.Intrinsic.Control.If(v.DataView.dtAPAllInvoices!dvInvoiceSelected.Exists)
		f.Data.Dataview.Close("dtAPAllInvoices","dvInvoiceSelected")
	f.Intrinsic.Control.EndIf
	
	'Find invoices similar
	f.Intrinsic.String.Build("VENDOR LIKE '{0}'",v.Local.sVendor, v.Local.ssql)
	'f.Intrinsic.String.Build("INVOICE Like'{0}' AND VENDOR LIKE '{1}'",v.local.sInvNum,v.Local.sVendor, v.Local.ssql)
	f.Data.DataView.Create("dtAPAllInvoices","dvInvoiceSelected",22,v.Local.ssql,"")
	f.Data.DataView.ToDataTable("dtAPAllInvoices","dvInvoiceSelected","dtTempAP")
	f.Data.Datatable.Merge("dtTempAP","dtAPInvoices",false,1)
	f.Data.Datatable.Close("dtTempAP")
	
	'PO Receiver and Job Operations Data
	f.Intrinsic.Control.If(v.DataTable.dtRecLines.Exists)
		f.Data.Datatable.DeleteRow("dtRecLines")
	f.Intrinsic.Control.Else
		f.Data.DataTable.Create("dtRecLines",TRUE)
		f.Data.DataTable.AddColumn("dtRecLines","PART","String")
		f.Data.DataTable.AddColumn("dtRecLines","DESCRIPTION","String")
		f.Data.DataTable.AddColumn("dtRecLines","SelectLine","Boolean")
		f.Data.DataTable.AddColumn("dtRecLines","PSearch","String","BROWSE")
		f.Data.DataTable.AddColumn("dtRecLines","QTY_RECEIVED","Float")
		f.Data.DataTable.AddColumn("dtRecLines","QTY_RECEIVED_ORIGINAL","Float")
		f.Data.DataTable.AddColumn("dtRecLines","PO_LINE","String")
		f.Data.DataTable.AddColumn("dtRecLines","RECEIVED_AMT","Float")
		f.Data.DataTable.AddColumn("dtRecLines","ACTUAL_AMT","Float")
		f.Data.DataTable.AddColumn("dtRecLines","EXCH_COST","Float")
		f.Data.DataTable.AddColumn("dtRecLines","EXCH_RATE","Float")
		f.Data.DataTable.AddColumn("dtRecLines","GL_ACCOUNT","String")
		f.Data.DataTable.AddColumn("dtRecLines","GLSearch","String","BROWSE")
		f.Data.DataTable.AddColumn("dtRecLines","JOB","String")
		f.Data.DataTable.AddColumn("dtRecLines","SUFFIX","String")
		f.Data.DataTable.AddColumn("dtRecLines","SEQ","String")
		f.Data.DataTable.AddColumn("dtRecLines","LOCATION","String")
		f.Data.DataTable.AddColumn("dtRecLines","TAXABLE","Boolean")
		f.Data.DataTable.AddColumn("dtRecLines","TAX_CODE","String")
		f.Data.DataTable.AddColumn("dtRecLines","TCSearch","String","BROWSE")
		f.Data.DataTable.AddColumn("dtRecLines","PURCHASE_ORDER","String")
		f.Data.DataTable.AddColumn("dtRecLines","VENDOR","String")
		f.Data.DataTable.AddColumn("dtRecLines","NAME_VENDOR","String")
		f.Data.DataTable.AddColumn("dtRecLines","RECEIVER_NO","String")
		f.Data.DataTable.AddColumn("dtRecLines","VAT_RULE","Integer")
		gui.frmAPAutomationIndex.gsgcRecLineItems.DataSource("dtRecLines")
	f.Intrinsic.Control.EndIf	
	
	f.Intrinsic.Control.If(v.DataView.dtPOReceiver!dvPOSelected.Exists)
		f.Data.Dataview.Close("dtPOReceiver","dvPOSelected")
	f.Intrinsic.Control.EndIf
		
	f.Intrinsic.Control.If(v.DataTable.JobOperationsDataTable.Exists)
		f.Data.Datatable.Close("JobOperationsDataTable")	
	f.Intrinsic.Control.EndIf
		
	'Get PO Data
	F.Intrinsic.Control.If(V.dataview.dtPOLines!dvVendorSelected.exists)
		f.Data.DataView.Close("dtPOLines","dvVendorSelected")
	F.Intrinsic.Control.EndIf
	
	f.Intrinsic.String.Build("VENDOR = '{0}'",v.Local.sVendor,v.Local.ssql)
	f.Data.DataView.Create("dtPOLines","dvVendorSelected",22,v.Local.ssql,"")
	f.Intrinsic.Control.If(v.DataTable.dtPOSelLines.Exists)
		f.Data.Datatable.DeleteRow("dtPOSelLines")
	f.Intrinsic.Control.Else
		f.Data.DataTable.Create("dtPOSelLines",true)
		f.Data.DataTable.AddColumn("dtPOSelLines","PURCHASE_ORDER","String")
		f.Data.DataTable.AddColumn("dtPOSelLines","RECORD_NO","String")
		f.Data.DataTable.AddColumn("dtPOSelLines","PART","String")
		f.Data.DataTable.AddColumn("dtPOSelLines","DESCRIPTION","String")
		f.Data.DataTable.AddColumn("dtPOSelLines","QTY_ORDER","Float")
		f.Data.DataTable.AddColumn("dtPOSelLines","UM_PURCHASING","String")
		f.Data.DataTable.AddColumn("dtPOSelLines","COST","Float")
		f.Data.DataTable.AddColumn("dtPOSelLines","EXTENSION","Float")
		f.Data.DataTable.AddColumn("dtPOSelLines","LOCATION","String")
		GUI.frmAPAutomationIndex.gsgcPOLines.DataSource("dtPOSelLines")
	f.Intrinsic.Control.EndIf
	
	f.Data.DataView.ToDataTable("dtPOLines","dvVendorSelected","dtPOTempLines")
	f.Data.Datatable.Merge("dtPOTempLines","dtPOSelLines",false,1)
	f.Data.Datatable.Close("dtPOTempLines")
	f.Data.DataTable.RemoveColumn("dtPOSelLines","LOCATION")
	
	v.Local.sReceiver.Declare
	v.Local.sPOLine.Declare
	v.Local.fQty.Declare
	f.Intrinsic.Control.SelectCase(v.Args.Status.UCase)
		f.Intrinsic.Control.Caseany("QUEUE","REJECT")
			
			'Might need logic for job operations data table if PO Reference is blank
			F.Intrinsic.Control.If(V.Global.bShowAllReceivers)
				'We want to show even the negative receipts
				f.Intrinsic.String.Build("PURCHASE_ORDER='{0}'",v.local.sPONum,v.Local.ssql)
			F.Intrinsic.Control.Else
				'Only show positive receipts (Default) QTY_RECEIVED>QTY_INVOICED
				f.Intrinsic.Control.If(v.Local.sPONum,=,"SHOWALL")
					f.Intrinsic.String.Build("VENDOR='{0}'",v.local.sVendor.Trim,v.Local.ssql)
				
				F.Intrinsic.Control.Else
				
					f.Intrinsic.String.Build("PURCHASE_ORDER='{0}' and QTY_RECEIVED>QTY_INVOICED",v.local.sPONum,v.Local.ssql)
				
				f.Intrinsic.Control.EndIf
			F.Intrinsic.Control.EndIf
			f.Data.DataView.Create("dtPOReceiver","dvPOselected",22,v.Local.ssql,"")
			f.Data.DataView.ToDataTable("dtPOReceiver","dvPOSelected","dtTempPOR")
			f.Data.DataView.ToDataTable("dtPOReceiver","dvPOSelected","JobOperationsDataTable")
			f.Data.Datatable.Merge("dtTempPOR","dtRecLines",false,1)
			f.Data.Datatable.Close("dtTempPOR")
			'Compare what is in GAB_5564_SA and adjust quantity accordingly
			F.Intrinsic.Control.For(v.Local.i,v.DataTable.dtRecLines.RowCount--,0,-1)
				f.Intrinsic.Control.If(v.DataTable.dtRecLines(v.Local.i).RowState,<>,8)
					v.Local.sReceiver.Set(v.DataTable.dtRecLines(v.Local.i).RECEIVER_NO!fieldvaltrim)
					v.Local.sPOLine.Set(v.DataTable.dtRecLines(v.Local.i).PO_LINE!fieldvaltrim)
					f.Intrinsic.String.build("SELECT ifnull(QUANTITY,0) FROM GAB_5564_AP_SA WHERE POLINE='{0}' AND PORCVR='{1}'",v.Local.sPOLine,v.Local.sReceiver,v.Local.ssql)
					f.ODBC.Connection!con5564.executeandreturn(v.Local.ssql,v.Local.fQty)
					f.Intrinsic.Control.If(v.Local.fQty,<>,0)
						f.Intrinsic.Math.Sub(v.DataTable.dtRecLines(v.Local.i).QTY_RECEIVED!FIELDVAL,v.Local.fQty,v.Local.fQty)
						f.Data.DataTable.SetValue("dtRecLines",v.Local.i,"QTY_RECEIVED",v.Local.fQty)
						f.Intrinsic.Control.If(v.Local.fQty,=,0)
							f.Data.DataTable.DeleteRow("dtRecLines",v.Local.i)
						f.Intrinsic.Control.EndIf
					f.Intrinsic.Control.EndIf
				f.Intrinsic.Control.EndIf
			F.Intrinsic.Control.Next(v.Local.i)
			
			'gui.frmAPAutomationIndex.lookupJobOp.DataTableBasis("JobOperationsDataTable")
		f.Intrinsic.Control.caseany("SAVE","APPROVE","PROCESS")
			'Might need logic for job operations data table if PO Reference is blank
			f.Intrinsic.String.Build("SELECT CONVERT(1,SQL_BIT) AS 'SelectLine', PART, QUANTITY AS 'QTY_RECEIVED', RECEIVED_AMT, ACTUAL_AMT, rTRIM(GLACCOUNT) AS 'GL_ACCOUNT', JOB, SUFFIX, SEQ, LOCATION, TAXABLEFLAG AS 'TAXABLE', TAXCODE AS 'TAX_CODE', PORCVR AS 'RECEIVER_NO', VAT AS 'VAT_RULE', EXCH_RATE, EXCH_AMT AS 'EXCH_COST' FROM GAB_5564_AP_SA WHERE DocID='{0}'",v.Screen.frmAPAutomationIndex!txtDocID.text,v.Local.ssql)
			
			f.Data.DataTable.CreateFromSQL("dtTempPOR","con5564",v.Local.ssql)
			f.Data.Datatable.Merge("dtTempPOR","dtRecLines",false,1)
			f.Data.Datatable.Close("dtTempPOR")
	f.Intrinsic.Control.EndSelect
	
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.loadInvoiceDetail.End

Program.Sub.getAdditionalVendorData.Start
f.Intrinsic.Control.Try
	v.Local.ssql.Declare
	v.Local.sRet.Declare
	v.Local.sSearch.Declare
	v.Local.sVendCode.Declare
	v.Local.sPart.Declare
	v.Local.sPartDesc.Declare
	v.Local.sPackList.Declare
	v.Local.bTaxable.Declare
	v.Local.bBookUseTax.Declare
	v.Local.sTaxCode.Declare
	v.Local.sVatRule.Declare
	v.Local.sJob.Declare
	v.Local.sSuffix.Declare
	v.Local.sSequence.Declare
	
	v.Local.sLocation.Declare
	v.Local.sCostType.Declare
	v.Local.sPurchaseUM.Declare
	v.Local.sBranch.Declare
	v.Local.sBuyer.Declare
	v.Local.sVoucher.Declare
	
	v.Local.iRet.Declare
	
	'Get row
	f.Intrinsic.String.Build("RowID={0}",v.Args.RowID,v.Local.sSearch)
	f.Data.DataTable.Select("dtApp",v.Local.sSearch,v.Local.iRet)
	
	'Find if there is a cross reference
	f.Intrinsic.String.Build("SELECT TOP 1 VendorCode FROM GAB_5564_AP_XREF WHERE VendorName='{0}'",v.Args.VendName.PSQLFriendly,v.Local.ssql)
	f.ODBC.Connection!con5564.ExecuteAndReturn(v.Local.ssql,v.Local.sVendCode)
	
	'Set the data values in the datatable
	f.Data.DataTable.SetValue("dtApp",v.Local.iRet,"VendCode",v.Local.sVendCode)
	'"TaxCode",v.local.sTaxCode,"VatRule",v.Local.sVatRule,"Job",v.local.sJob,"Suffix",v.Local.sSuffix,"Seq",v.Local.sSequence,"Location",v.Local.sLocation,"PurchaseUM",v.Local.sPurchaseUM,"Buyer",v.Local.sBuyer,"Branch",v.Local.sBranch,"Taxable",v.Local.bTaxable,"BookUseTax",v.Local.bBookUseTax)
	
	'Create the return variable
	'f.Intrinsic.Variable.AddRV("rVendorCode",v.Local.sVendCode) ' not sure how rv works
	'^^^ finding vendor file and pulling in taxinfo ect.
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	f.ODBC.Connection!con5564.Close
	f.Intrinsic.Control.End

f.Intrinsic.Control.endtry
Program.Sub.getAdditionalVendorData.End

'This Sub is not being called by anthing in this script. Need to confirm its function -SS
Program.Sub.getVendorSetHeader.Start
f.Intrinsic.Control.Try
	v.Local.ssql.Declare
	v.Local.sret.Declare
	v.Local.svend.Declare
	v.Local.iPONum.Declare
	v.Local.sVend.Set(v.Args.Vend)
	v.Local.iPONum.Set(v.Args.PONum)
	
	v.Local.sVendName.Declare
	v.Local.sVendAddr1.Declare
	v.Local.sVendAddr2.Declare
	v.Local.sVendAddr3.Declare
	v.Local.sVendAddr4.Declare
	v.Local.sVendAddr5.Declare
	v.Local.sVendCity.Declare
	v.Local.sVendState.Declare
	v.Local.sVendZip.Declare
	v.Local.sVendCountry.Declare
	v.Local.sVendCounty.Declare
	v.Local.sVendAttn.Declare
	v.Local.sIntlFlag.Declare
	v.Local.sShipVendName.Declare
	v.Local.sShipVendAddr1.Declare
	v.Local.sShipVendAddr2.Declare
	v.Local.sShipVendAddr3.Declare
	v.Local.sShipVendAddr4.Declare
	v.Local.sShipVendAddr5.Declare
	v.Local.sShipVendCity.Declare
	v.Local.sShipVendState.Declare
	v.Local.sShipVendZip.Declare
	v.Local.sShipVendCountry.Declare
	v.Local.sShipVendCounty.Declare 
	v.Local.sShipVendAttn.Declare
	v.Local.sShipIntlFlag.Declare
	v.Local.sFOB.Declare
	v.Local.sTrms.Declare
	v.Local.sBuyC.Declare

	f.Intrinsic.String.Build("SELECT NAME_VENDOR, ADDRESS1, ADDRESS2, ADDRESS3, ADDRESS4, ADDRESS5, CITY, STATE, CODE_ZIP, COUNTRY, COUNTY, ATTENTION, BUYER, INTL_ADRS FROM V_VENDOR_MASTER3 WHERE VENDOR='{0}'",v.Local.sVend.Trim,v.Local.sSQL)
	f.ODBC.Connection!con5564.ExecuteAndReturn(v.Local.sSQL,v.Local.sRet)
	f.Intrinsic.String.Split(v.Local.sRet,"*!*",v.Local.sRet)
	v.Local.sVendName.Set(v.Local.sRet(0))
	v.Local.sVendAddr1.Set(v.Local.sRet(1))
	v.Local.sVendAddr2.Set(v.Local.sRet(2))
	v.Local.sVendAddr3.Set(v.Local.sRet(3))
	v.Local.sVendAddr4.Set(v.Local.sRet(4))
	v.Local.sVendAddr5.Set(v.Local.sRet(5))
	v.Local.sVendCity.Set(v.Local.sRet(6))
	v.Local.sVendState.Set(v.Local.sRet(7))
	v.Local.sVendZip.Set(v.Local.sRet(8))
	v.Local.sVendCountry.Set(v.Local.sRet(9))
	v.Local.sVendCounty.Set(v.Local.sRet(10))
	v.Local.sVendAttn.Set(v.Local.sRet(11))
	v.Local.sBuyC.Set(v.Local.sRet(12))
	v.Local.sIntlFlag.Set(v.Local.sRet(13))
	
	f.ODBC.Connection!con5564.ExecuteAndReturn("SELECT NAME_VENDOR, ADDRESS1, ADDRESS2, ADDRESS3, ADDRESS4, ADDRESS5, CITY, STATE, CODE_ZIP, COUNTRY, COUNTY, ATTENTION, INTL_ADRS FROM V_VENDOR_MASTER3 WHERE RESV='1'",v.Local.sRet)
	f.Intrinsic.String.Split(v.Local.sRet,"*!*",v.Local.sRet)
	v.Local.sShipVendName.Set(v.Local.sRet(0))
	v.Local.sShipVendAddr1.Set(v.Local.sRet(1))
	v.Local.sShipVendAddr2.Set(v.Local.sRet(2))
	v.Local.sShipVendAddr3.Set(v.Local.sRet(3))
	v.Local.sShipVendAddr4.Set(v.Local.sRet(4))
	v.Local.sShipVendAddr5.Set(v.Local.sRet(5))
	v.Local.sShipVendCity.Set(v.Local.sRet(6))
	v.Local.sShipVendState.Set(v.Local.sRet(7))
	v.Local.sShipVendZip.Set(v.Local.sRet(8))
	v.Local.sShipVendCountry.Set(v.Local.sRet(9))
	v.Local.sShipVendCounty.Set(v.Local.sRet(10))
	v.Local.sShipVendAttn.Set(v.Local.sRet(11))
	v.Local.sShipIntlFlag.Set(v.Local.sRet(12))
	
	f.Intrinsic.String.Build("SELECT payment_terms, code_fob FROM V_VENDOR_PAY_TO WHERE VENDOR='{0}'",v.Local.sVend.Trim,v.Local.sSQL)
	f.ODBC.Connection!con5564.ExecuteAndReturn(v.Local.sSQL,v.Local.sRet)
	f.Intrinsic.String.Split(v.Local.sRet,"*!*",v.Local.sRet)
	v.Local.sTrms.Set(v.Local.sRet(0))
	v.Local.sFOB.Set(v.Local.sRet(1))
	
	f.Intrinsic.String.Build("select TERMS_MESSAGE from V_AP_TERMS WHERE TERMS_CODE='{0}'",V.Local.sTrms,V.Local.sSQL)
	F.ODBC.Connection!con5564.ExecuteAndReturn(v.Local.sSql,v.Local.sTrms)
	
	F.Data.DataTable.AddRow("UPLPURORA","PONum",v.Local.iPONum,"OrderTaxCode","T","VendNum",v.Local.sVend,"Terms",v.Local.sTrms,"BuyerCode",v.LOCAL.sBuyC,"FOBInfo",v.Local.sFOB)
	f.Data.DataTable.AddRow("UPLPURORBC","PONum",v.Local.iPONum,"RecType","B","VendName",v.Local.sVendName,"VendAddr1",v.Local.sVendAddr1,"VendAddr2",v.Local.sVendAddr2,"VendAddr3",v.Local.sVendAddr3,"VendAddr4",v.Local.sVendAddr4,"VendAddr5",v.Local.sVendAddr5,"VendCity",v.Local.sVendCity,"VendState",v.Local.sVendState,"VendZip",v.Local.sVendZip,"VendCountry",v.Local.sVendCountry,"VendAttn",v.Local.sVendAttn,"IntlFlag",v.Local.sIntlFlag)
	F.Data.DataTable.AddRow("UPLPURORBC","PONum",v.Local.iPONum,"RecType","C","VendName",v.Local.sShipVendName,"VendAddr1",v.Local.sShipVendAddr1,"VendAddr2",v.Local.sShipVendAddr2,"VendAddr3",v.Local.sShipVendAddr3,"VendAddr4",v.Local.sShipVendAddr4,"VendAddr5",v.Local.sShipVendAddr5,"VendCity",v.Local.sShipVendCity,"VendState",v.Local.sShipVendState,"VendZip",v.Local.sShipVendZip,"VendCountry",v.Local.sShipVendCountry,"VendAttn",v.Local.sShipVendAttn,"IntlFlag",v.Local.sShipIntlFlag)
	
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	f.ODBC.Connection!con5564.Close
	f.Intrinsic.Control.End
f.Intrinsic.Control.EndTry

Program.Sub.getVendorSetHeader.End


#End Region ' Load data and API calls

Program.Sub.checkFieldsSave.Start
f.Intrinsic.Control.Try
	v.Local.bPassVendor.Declare
	v.Local.bPassVendor.Set(false)
	v.Local.bPassVendorXRef.Declare
	v.Local.bPassVendorXRef.Set(false)
	v.Local.bPassLineSelected.Declare
	v.Local.bPassLineSelected.Set(false)
	v.Local.bPassGLAccount.Declare
	v.Local.bPassGLAccount.Set(false)
	v.Local.bPassGL.Declare
	v.Local.bPassGL.Set(true)
	v.Local.bInvoiceAccrual.Declare
	v.Local.bInvoiceAccrual.Set(false)
	v.Local.bPassVariance.Declare
	v.Local.bPassVariance.Set(false)
	v.Local.bPassInvoiceExists.Declare
	v.Local.bPassInvoiceExists.Set(false)
	V.Local.bPassInvoiceExistsSA.Declare
	V.Local.bPassInvoiceExistsSA.Set(FALSE)
	v.Local.bPassVarianceLines.Declare
	v.Local.bPassVarianceLines.Set(FALSE)
	v.Local.bPassPOVendor.Declare
	v.Local.bPassPOVendor.Set(FALSE)
	
	v.Local.fVariance.Declare
	v.Local.sError.Declare
	v.Local.sGLCode.Declare
	v.Local.i.Declare

	v.Local.bAccrual.Declare
	v.Local.bAccrual.Set(v.Screen.frmAPAutomationIndex!optAccrual.Value)
	v.Local.bInvoice.Declare
	v.Local.bInvoice.Set(v.Screen.frmAPAutomationIndex!optInvoice.Value)
	V.Local.sPORef.Declare
	V.Local.sPORef.Set(V.Screen.frmAPAutomationIndex!txtPORef.Text)
	
	'Check if Vendor is created
	f.Intrinsic.Control.If(v.Screen.frmAPAutomationIndex!lblCreateVendor.ForeColor,<>,v.Enum.ThemeColors!ColorRed)
		v.Local.bPassVendor.Set(true)
	f.Intrinsic.Control.Else
		f.Intrinsic.String.Concat(v.Local.sError,"Vendor is not created.",V.Ambient.NewLine,V.Local.sError)
	f.Intrinsic.Control.EndIf
	
	'Check if Vendor is linked
	f.Intrinsic.Control.If(v.Screen.frmAPAutomationIndex!lblXRefConnect.ForeColor,<>,v.Enum.ThemeColors!ColorRed)
		v.Local.bPassVendorXRef.Set(true)
	f.Intrinsic.Control.Else
		f.Intrinsic.String.Concat(v.Local.sError,"Vendor xref is not created.",V.Ambient.NewLine,V.Local.sError)
	f.Intrinsic.Control.EndIf
	
	'Check invoice/accrual radio
	f.Intrinsic.Control.If(v.Local.bAccrual,=,true,"or",v.Local.bInvoice,=,true)
		v.Local.bInvoiceAccrual.Set(true)
	f.Intrinsic.Control.Else
		f.Intrinsic.String.Concat(v.Local.sError,"Invoice/Accrual option not selected.",v.Ambient.NewLine,v.Local.sError)
	f.Intrinsic.Control.EndIf



	'getting tax code
	'v.Local.sXRef.Declare
	'v.Local.ssql1.Declare
	'v.local.sTaxCode
	'f.Intrinsic.String.Build("select DISTINCT TAX_CODE from v_VENDOR_ADDL WHERE VENDOR = '{0}'",v.Local.sXRef,v.Local.ssql1)
	'f.ODBC.Connection!con5564.ExecuteAndReturn(v.local.sSql1,v.local.sTaxCode)
	'Check if variance
	'f.Intrinsic.Debug.ShowCallerInfo 'current
	v.Local.sSubTotal.Declare
	f.Intrinsic.String.Replace(v.Screen.frmAPAutomationIndex!txtSubTotal.text,"$","",v.Local.sSubTotal)
	v.Local.sGSTAmount.Declare
	f.Intrinsic.String.Replace(v.Screen.frmAPAutomationIndex!txtGST.text,"$","",v.Local.sGSTAmount)
	v.Local.sGTotal.Declare
	f.Intrinsic.String.Replace(v.Screen.frmAPAutomationIndex!txtGTotal.text,"$","",v.Local.sGTotal)
	'Manually calulating what the gst should be
	v.Local.fSubTotalTimesGstAmount.Declare
	f.Intrinsic.Math.Mult(v.Local.sSubTotal,0.15,v.Local.fSubTotalTimesGstAmount)
	f.Intrinsic.Math.Round(v.Local.fSubTotalTimesGstAmount,2,v.Local.fSubTotalTimesGstAmount)
	'comparing the should be gst amount with the gst amount in the text box.

	v.Local.fGSTAmountVariance.Declare
	f.Intrinsic.Math.Sub(v.Local.fSubTotalTimesGstAmount,v.Local.sGSTAmount,v.Local.fGSTAmountVariance)
	f.Intrinsic.Math.Round(v.Local.fGSTAmountVariance,2,v.Local.fGSTAmountVariance)

	'C:\Apps\Global\PLUGINS\GAB_5564_AP_AUTOMATION_ADMIN_SETTINGS.txt
	v.Local.sVal.Declare
	v.Local.fVarianceAllowed.Declare
	v.Local.fVarianceAllowedNeg.Declare
	v.Local.bFileCheck.Declare(boolean)
	v.Local.sFileLocat.Declare(string)
	v.Local.sgstOffset.Declare
	f.Intrinsic.String.Concat(v.Caller.GasDir,"\",V.Caller.CompanyCode,"_GAB_5564_AP_AUTOMATION_ADMIN_SETTINGS.txt",v.Local.sFileLocat) 'GAB_5564_AP_AUTOMATION_ADMIN_SETTINGS.txt
	f.Intrinsic.File.Exists(v.Local.sFileLocat,v.Local.bFileCheck)
	f.Intrinsic.Control.If(v.Local.bFileCheck)
		f.Intrinsic.File.File2String(v.Local.sFileLocat,v.Local.sVal)
		f.Intrinsic.String.Split(v.Local.sVal,v.Ambient.NewLine,v.Local.sVal)
		v.Local.fVarianceAllowed.Set(v.Local.sVal(2))
		f.Intrinsic.Math.Mult(v.Local.fVarianceAllowed,-1,v.Local.fVarianceAllowedNeg)
		
	f.Intrinsic.Control.Else
		v.Local.fVarianceAllowed.Set(0)
	f.Intrinsic.Control.EndIf

	f.Intrinsic.Control.If(v.Local.fGSTAmountVariance,<=,v.Local.fVarianceAllowed) '+ive
		f.Intrinsic.Control.If(v.Local.fGSTAmountVariance,>=,v.Local.fVarianceAllowedNeg) '-ive
			v.Local.bPassVariance.Set(true)
		f.Intrinsic.Control.Else
				v.Local.bPassVariance.Set(true)
				'f.Intrinsic.String.Concat(v.Local.sError,"1GST Variance exceeds acceptable amount. Please review and correct.",v.Ambient.NewLine,v.Local.sError)
		f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.Else
		v.Local.bPassVariance.Set(true)
		'f.Intrinsic.String.Concat(v.Local.sError,"1GST Variance exceeds acceptable amount. Please review and correct.",v.Ambient.NewLine,v.Local.sError)
	f.Intrinsic.Control.EndIf

	'f.Intrinsic.Debug.ShowCallerInfo 'CurrentlyWorkingOn
	'check if variance in line exists
	v.Local.fVarAmount.Declare
	f.Intrinsic.String.Replace(v.Screen.frmAPAutomationIndex!txtEVarianceAmt.text,"$","",v.Local.fVarAmount)
	
	f.Intrinsic.Control.If(v.Local.fVarAmount,=,0)
		v.Local.bPassVarianceLines.Set(true)
	f.Intrinsic.Control.Else
		f.Intrinsic.String.Concat(v.Local.sError,"Variance Exists. Please Correct.",v.Ambient.NewLine,v.Local.sError)
	f.Intrinsic.Control.EndIf
	
	'Check if Invoice Exists
	f.Intrinsic.Control.If(v.Screen.frmAPAutomationIndex!lblInvoiceExists.ForeColor,<>,v.Enum.ThemeColors!ColorRed)
		v.Local.bPassInvoiceExists.Set(true)
	f.Intrinsic.Control.Else
		f.Intrinsic.String.Concat(v.Local.sError,"Cannot Upload, invoice Exists for Vendor.",V.Ambient.NewLine,V.Local.sError)
	f.Intrinsic.Control.EndIf
	
	
	'Check if Invoice Exists
	f.Intrinsic.Control.If(v.Screen.frmAPAutomationIndex!lblInvoiceExistsSA.ForeColor,<>,v.Enum.ThemeColors!ColorRed)
		v.Local.bPassInvoiceExistsSA.Set(true)
	f.Intrinsic.Control.Else
		f.Intrinsic.String.Concat(v.Local.sError,"Cannot Upload, invoice Exists for Vendor in approve queue.",V.Ambient.NewLine,V.Local.sError)
	f.Intrinsic.Control.EndIf
	

	
	'Check if Vendor on the PO matches the vendor on the Invoice
	F.Intrinsic.Control.If(V.Local.sPORef,<>,"")
		f.Intrinsic.Control.If(v.Local.sPORef.Trim,<>,"MULTIPO")		
			f.Intrinsic.Control.If(v.Screen.frmAPAutomationIndex!lblPOVendor.ForeColor,<>,v.Enum.ThemeColors!ColorRed)
				v.Local.bPassPOVendor.Set(true)
			f.Intrinsic.Control.Else
				f.Intrinsic.String.Concat(v.Local.sError,"Cannot Upload, Vendor on the PO Does not match Vendor on Invoice.",V.Ambient.NewLine,V.Local.sError)
			f.Intrinsic.Control.EndIf
		F.Intrinsic.Control.Else
			V.Local.bPassPOVendor.Set(TRUE)
		f.Intrinsic.Control.EndIf
	F.Intrinsic.Control.Else
		v.Local.bPassPOVendor.Set(true)
	f.Intrinsic.Control.EndIf
	
	f.Intrinsic.Variable.AddRV("rPassVendor",v.Local.bPassVendor)
	f.Intrinsic.Variable.AddRV("rPassVendorXRef",v.Local.bPassVendorXRef)
	f.Intrinsic.Variable.AddRV("rPassGL",v.Local.bPassGL)
	f.Intrinsic.Variable.AddRV("rPassIA",v.Local.bInvoiceAccrual)
	f.Intrinsic.Variable.AddRV("rPassVariance",v.Local.bPassVariance)
	f.Intrinsic.Variable.AddRV("rPassInvoiceExists",v.Local.bPassInvoiceExists)
	f.Intrinsic.Variable.AddRV("rPassInvoiceExistsSA",v.Local.bPassInvoiceExistsSA)
	f.Intrinsic.Variable.AddRV("rMessage",v.Local.sError)
	f.Intrinsic.Variable.AddRV("rPassVarianceLines",v.Local.bPassVarianceLines)
	f.Intrinsic.Variable.AddRV("rPassPOVendor",v.Local.bPassPOVendor)
	
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.checkFieldsSave.End

Program.Sub.checkXrefSuppPORec.Start
'Called by gsgcQueue_RowCellClick
f.Intrinsic.Control.Try
	v.Local.sLink.Declare
	v.Local.sSupplierName.Declare
	v.Local.sInvoiceNumber.Declare
	v.Local.sInvoiceDate.Declare
	v.Local.sPORefrence.Declare
	v.Local.sDOCID.Declare
	v.Local.sVendCode.Declare
	v.Local.sSubTotal.Declare
	v.Local.sGSTTotal.Declare
	
	v.Local.sSupplierName.Set(v.Screen.frmAPAutomationIndex!txtSupplierName.text)
	v.Local.sInvoiceNumber.Set(v.Screen.frmAPAutomationIndex!txtInvNum.text)
	v.Local.sInvoiceDate.Set(v.Screen.frmAPAutomationIndex!txtInvdate.text)
	v.Local.sPORefrence.Set(v.Screen.frmAPAutomationIndex!txtPORef.text)
	v.Local.sSubTotal.Set(v.Screen.frmAPAutomationIndex!txtSubTotal.text)
	v.local.sGSTTotal.Set(v.Screen.frmAPAutomationIndex!txtGST.text)
	v.local.sDOCID.Set(v.Global.sDOCID)
	v.Local.sVendCode.Set(v.Screen.frmAPAutomationIndex!txtVendCode.text)
	
	v.Local.sSql.Declare
	v.Local.sXRef.Declare
	v.Local.bVendorCheck.Declare
	v.Local.bPOHead.Declare
	v.Local.bPOreceiver.Declare
	v.Local.bXRefCheck.Declare
	v.Local.bPOVendor.Declare
	
	v.Local.inothing.Declare

	v.Local.sLinkTemp.Declare
	v.Local.ssqlUpdatePath.Declare
	v.Local.bXRefCheck1.Declare
	v.Local.bInvoice.Declare
	v.Local.bInvoiceSA.Declare
	'f.Intrinsic.Debug.ShowCallerInfo
	'Checking Xref is created
	f.Intrinsic.String.RTrim(v.Local.sVendCode, v.Local.sVendCode)
	f.Intrinsic.Control.CallSub(CheckXrefVendorExist, "SupplierName", v.Local.sSupplierName, "DOCID", v.Local.sDOCID)
	f.Intrinsic.Variable.ArgToVar("rVendorCheck",v.Local.bXRefCheck) 'IF Xref is created return TRUE ////needs to look up from db
	f.Intrinsic.Variable.ArgToVar("rVendorCode",v.Local.sVendCode) 'return the xref being VULCAN
	f.Intrinsic.Variable.ArgToVar("rxref",v.Local.bXRefCheck1) 'this is what XREF CHECK is shown in the db
	gui.frmAPAutomationIndex.txtVendCode.Text(v.Local.sVendCode)
	
	v.Local.bXREFChecking.Declare
	v.Local.bXREFChecking.Set(v.Local.bXRefCheck)
	f.Intrinsic.Variable.AddRV("XREFCheck",v.Local.bXREFChecking)
	'Call Routines to format colour/linkage
	f.Intrinsic.Control.CallSub(setGSSXRefFormatColourLink,"XRefCheck1",v.Local.bXRefCheck1,"XRefCheck",v.Local.bXRefCheck,"SupplierName",v.Local.sSupplierName.Trim,"DocID",V.Global.sDOCID,"VendCode",v.Local.sVendCode)
	f.Intrinsic.Control.CallSub(setGSSVendorFormatColour,"VendorCheck",v.Local.bXRefCheck)
	
	'Checking Vendor is created
	f.Intrinsic.Control.CallSub(CheckGSSVendorExist, "VendorNo", v.Local.sVendCode)
	f.Intrinsic.Variable.ArgToVar("rVendor",v.Local.bVendorCheck)
	
	
	'Check Purchase Order is created in the system
	f.Intrinsic.Control.CallSub(CheckPONumberExist, "POHead", v.Local.sPORefrence)
	f.Intrinsic.Variable.ArgToVar("POHead",v.Local.bPOHead)
	F.Intrinsic.Control.If(v.Local.bPOHead,=,True)
		gui.frmAPAutomationIndex.lblCreatePO.Caption("PO Found")
		gui.frmAPAutomationIndex.lblCreatePO.Visible(True)
		gui.frmAPAutomationIndex.lblCreatePO.ForeColor(v.Enum.ThemeColors!ColorGreen)
	F.Intrinsic.Control.Else
		gui.frmAPAutomationIndex.lblCreatePO.Caption("PO Not Found")
		gui.frmAPAutomationIndex.lblCreatePO.Visible(True)
		gui.frmAPAutomationIndex.lblCreatePO.ForeColor(v.Enum.ThemeColors!ColorRed)
	F.Intrinsic.Control.EndIf
	
	'Checking if PO is recived
	f.Intrinsic.Control.CallSub(CheckPOreceiverExist,"POHead",v.Local.sPORefrence)
	f.Intrinsic.Variable.ArgToVar("POreceiver",v.Local.bPOreceiver)
	F.Intrinsic.Control.If(v.Local.bPOreceiver,=,True)
		gui.frmAPAutomationIndex.lblReceivePO.Caption("PO Received")
		gui.frmAPAutomationIndex.lblReceivePO.Visible(True)
		gui.frmAPAutomationIndex.lblReceivePO.ForeColor(v.Enum.ThemeColors!ColorGreen)
	F.Intrinsic.Control.Else
		gui.frmAPAutomationIndex.lblReceivePO.Caption("PO Not Received")
		gui.frmAPAutomationIndex.lblReceivePO.Visible(True)
		gui.frmAPAutomationIndex.lblReceivePO.ForeColor(v.Enum.ThemeColors!ColorRed)
	F.Intrinsic.Control.EndIf
	
	'Check If Purchase Order Vendor Matches Invoice Vendor
	f.Intrinsic.Control.CallSub(CheckPOVendor, "POHead", v.Local.sPORefrence)
	f.Intrinsic.Variable.ArgToVar("POVendor",v.Local.bPOVendor)
	F.Intrinsic.Control.If(v.Local.bPOVendor,=,True)
		gui.frmAPAutomationIndex.lblPOVendor.Caption("PO Vendor Matches")
		gui.frmAPAutomationIndex.lblPOVendor.Visible(True)
		gui.frmAPAutomationIndex.lblPOVendor.ForeColor(v.Enum.ThemeColors!ColorGreen)
	F.Intrinsic.Control.Else
		gui.frmAPAutomationIndex.lblPOVendor.Caption("PO Vendor Does Not Match")
		gui.frmAPAutomationIndex.lblPOVendor.Visible(True)
		gui.frmAPAutomationIndex.lblPOVendor.ForeColor(v.Enum.ThemeColors!ColorRed)
	F.Intrinsic.Control.EndIf
	
	
	'checking varables and locking or unlocking the approve buttion
	F.Intrinsic.Control.If(v.Local.bXRefCheck,=,True,"AND",v.Local.bVendorCheck,=,True)
		gui.frmAPAutomationIndex.cmdSave.Locked(False)
	F.Intrinsic.Control.Else
		gui.frmAPAutomationIndex.cmdSave.Locked(True)
	F.Intrinsic.Control.EndIf
	
	'Check Invoice
	f.Intrinsic.Control.CallSub(checkInvoiceExists, "Invoice", v.Local.sInvoiceNumber,"Vendor",v.Local.sVendCode)
	f.Intrinsic.Variable.ArgToVar("rInvoice",v.Local.bInvoice)
	f.Intrinsic.Control.If(v.Local.bInvoice)
		gui.frmAPAutomationIndex.lblInvoiceExists.Caption("Cannot Upload, Invoice Exist")
		gui.frmAPAutomationIndex.lblInvoiceExists.ForeColor(v.Enum.ThemeColors!ColorRed)
	f.Intrinsic.Control.Else
		gui.frmAPAutomationIndex.lblInvoiceExists.Caption("Can Upload, Invoice Not Found")
		gui.frmAPAutomationIndex.lblInvoiceExists.ForeColor(v.Enum.ThemeColors!ColorGreen)
	f.Intrinsic.Control.EndIf
	
	'Check Invoice SA
	f.Intrinsic.Control.CallSub(checkInvoiceExistsSA, "Invoice", v.Local.sInvoiceNumber,"Vendor",v.Local.sVendCode)
	f.Intrinsic.Variable.ArgToVar("rInvoiceSA",v.Local.bInvoiceSA)
	f.Intrinsic.Control.If(v.Local.bInvoiceSA)
		gui.frmAPAutomationIndex.lblInvoiceExistsSA.Caption("Cannot Upload, Invoice Exist in approval")
		gui.frmAPAutomationIndex.lblInvoiceExistsSA.ForeColor(v.Enum.ThemeColors!ColorRed)
	f.Intrinsic.Control.Else
		gui.frmAPAutomationIndex.lblInvoiceExistsSA.Caption("")
		gui.frmAPAutomationIndex.lblInvoiceExistsSA.ForeColor(v.Enum.ThemeColors!ColorGreen)
	f.Intrinsic.Control.EndIf
	
f.Intrinsic.Control.Catch	
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.checkXrefSuppPORec.End

Program.Sub.checkInvoiceExists.Start
f.Intrinsic.Control.Try
	v.Local.ssql.Declare
	v.Local.sret.Declare
	v.Local.bInvoiceExists.Declare
	f.Intrinsic.String.Build("SELECT * FROM AP_OPEN_ITEMS WHERE VENDOR='{0}' AND INVOICE='{1}'",v.Args.Vendor,v.Args.Invoice.PSQLFriendly,v.Local.ssql)
	f.ODBC.Connection!con5564.executeandreturn(v.Local.ssql,v.Local.sret)
	f.Intrinsic.Control.If(v.Local.sret.Trim,<>,"")
		v.Local.bInvoiceExists.Set(true)
	f.Intrinsic.Control.EndIf
	
	f.Intrinsic.Variable.AddRV("rInvoice",v.Local.bInvoiceExists)
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	f.Intrinsic.Control.CallSub(frmUnload)
f.Intrinsic.Control.EndTry
Program.sub.checkInvoiceExists.End

Program.Sub.checkInvoiceExistsSA.Start
f.Intrinsic.Control.Try
	v.Local.ssql.Declare
	v.Local.sret.Declare
	v.Local.bInvoiceExistsSA.Declare
	f.Intrinsic.String.Build("select APAPPROVEID, VENDCODE, INVCNUMB from GAB_5564_AP_SA A LEFT JOIN GAB_5564_AP_HEAD B ON A.HID = B.ID WHERE VENDCODE='{0}' AND INVCNUMB='{1}'",v.Args.Vendor,v.Args.Invoice.PSQLFriendly,v.Local.ssql)
	f.ODBC.Connection!con5564.executeandreturn(v.Local.ssql,v.Local.sret)
	f.Intrinsic.Control.If(v.Local.sret.Trim,<>,"")
		v.Local.bInvoiceExistsSA.Set(true)
	f.Intrinsic.Control.EndIf
	
	f.Intrinsic.Variable.AddRV("rInvoiceSA",v.Local.bInvoiceExistsSA)
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	f.Intrinsic.Control.CallSub(frmUnload)
f.Intrinsic.Control.EndTry
Program.Sub.checkInvoiceExistsSA.End

Program.Sub.CheckXrefVendorExist.Start
f.Intrinsic.Control.Try
	v.Local.ssql.Declare
	v.Local.ssqlDOCID.Declare
	v.Local.sXRef.Declare
	v.Local.stest.Declare
	v.Local.sVAT.Declare
	v.Local.bVendorNo.Declare
	v.Local.sVendorName.Declare
	v.Local.bXRefCheck.Declare
	v.Local.sDOCID.Declare
	v.Local.sVendorName.Set(v.Args.SupplierName)
	
	v.Local.sTaxCode.Declare
	v.Local.sTaxRate.Declare
	v.Local.sGLAccount.Declare
	v.Local.ssql1.Declare
	
	v.Local.iRet.Declare
	
	f.Intrinsic.String.Concat("select VENDORCODE from GAB_5564_AP_XREF WHERE VENDORNAME = '", v.Local.sVendorName.PSQLFriendly ,"'",v.local.sSql)
	f.ODBC.Connection!con5564.ExecuteAndReturn(v.Local.sSql,v.Local.sXRef)
	F.Intrinsic.Control.If(V.Local.sXRef.Trim,=,"")
		v.Local.stest.Set("XRef not set")
		v.Local.bVendorNo.Set(False)
		GUI.frmAPAutomationIndex.chkETaxable.Value(false)
		GUI.frmAPAutomationIndex.txtETaxCode.Text("")
		gui.frmAPAutomationIndex.txtEGLAccount.Text("")
		gui.frmAPAutomationIndex.txtEVat.text("")
	F.Intrinsic.Control.Else
		'SOFT UPDATE IN CASE VENDOR CODE IS NOT SET
		f.Intrinsic.String.Build("UPDATE GAB_5564_AP_HEAD SET VENDCODE = '{0}' where docid='{1}'",v.Local.sXRef,V.Screen.frmAPAutomationIndex!txtDocID.TEXT,v.Local.sSQL)
		F.ODBC.Connection!con5564.execute(v.Local.ssql)
		
		f.Intrinsic.String.Instr(v.Local.sXRef,"#$#",v.Local.iRET)
		F.Intrinsic.Control.If(V.Local.iRet,>,0)
			f.Intrinsic.UI.Msgbox("ERROR!  Multiple cross references found.  Please delete!")
			f.Intrinsic.Control.ExitSub
		F.Intrinsic.Control.EndIf
		v.Local.stest.Set("XRef is set")
		v.Local.bXRefCheck.Set(True)
		v.Local.bVendorNo.Set(True)
		
		f.Intrinsic.String.Build("select DISTINCT TAX_CODE from v_VENDOR_ADDL WHERE VENDOR = '{0}'",v.Local.sXRef,v.Local.ssql1)
		f.ODBC.Connection!con5564.ExecuteAndReturn(v.local.sSql1,v.local.sTaxCode)
		
		F.Intrinsic.Control.If(V.Local.sTaxCode.Trim,=,"")
			f.Intrinsic.String.Concat("select DFLT_TAX_GRP_CODE from VAT_VEND_TAX where VENDOR_ID = '",v.local.sXRef,"'", v.Local.sSql1)
			f.ODBC.Connection!con5564.ExecuteAndReturn(v.Local.sSql1,v.Local.sTaxCode)
		F.Intrinsic.Control.EndIf
		
		F.Intrinsic.Control.If(v.Local.sTaxCode.Trim,!=,"")
			gui.frmAPAutomationIndex.txtETaxCode.Text(v.Local.sTaxCode)
			gui.frmAPAutomationIndex.chkETaxable.Value(true)
		F.Intrinsic.Control.Else
			GUI.frmAPAutomationIndex.txtETaxCode.Text("")
			GUI.frmAPAutomationIndex.chkETaxable.Value(false)
		F.Intrinsic.Control.EndIf
			
		f.Intrinsic.String.Build("select NORMAL_GL_ACCOUNT from V_VENDOR_MASTER WHERE VENDOR = '{0}'",v.Local.sXRef,v.Local.ssql1)
		f.ODBC.Connection!con5564.ExecuteAndReturn(v.local.sSql1,v.local.sGLAccount)
		gui.frmAPAutomationIndex.txtEGLAccount.Text(v.Local.sGLAccount.Trim)
			
		f.Intrinsic.String.Build("select DFLT_VAT_RULE from VAT_VEND_TAX WHERE VENDOR_ID = '{0}'",v.Local.sXRef,v.Local.ssql1)
		f.ODBC.Connection!con5564.ExecuteAndReturn(v.local.sSql1,v.local.sVAT)
		gui.frmAPAutomationIndex.txtEVat.Text(v.Local.sVAT)
		
	F.Intrinsic.Control.EndIf
	
	f.Intrinsic.Variable.AddRV("rVendorCheck",v.Local.bVendorNo) 'this needs to be true orfalse dpeending on if a company directory is made
	f.Intrinsic.Variable.AddRV("rVendorCode",v.Local.sXRef)
	f.Intrinsic.Variable.AddRV("rTaxCode",v.Local.sTaxCode) 'Take this number and get the rv from same place as the location above
	f.Intrinsic.Variable.AddRV("rxref",v.Local.bXRefCheck) 'this needs to be what is shown in the db
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	f.ODBC.Connection!con5564.Close
	f.Intrinsic.Control.End
f.Intrinsic.Control.EndTry
Program.Sub.CheckXrefVendorExist.End

Program.Sub.CheckGSSVendorExist.Start
f.Intrinsic.Control.Try
	''f.Intrinsic.Debug.ShowCallerInfo
	v.Local.sVendorNo.Declare
	v.Local.sVendorNo.Set(v.Args.VendorNo)
	v.Local.ssql.Declare
	v.Local.sVendorCode.Declare
	v.Local.bVendor.Declare
	f.Intrinsic.String.Concat("select VENDOR from V_VENDOR_MASTER WHERE VENDOR = '", v.Local.sVendorNo ,"'",v.local.sSql)
	f.ODBC.Connection!con5564.ExecuteAndReturn(v.Local.sSql,v.Local.sVendorCode)
	F.Intrinsic.Control.If(V.Local.sVendorCode.Trim,=,"")
		v.Local.bVendor.Set(False)
	F.Intrinsic.Control.Else
		v.Local.bVendor.Set(True)
	F.Intrinsic.Control.EndIf
	
	f.Intrinsic.Variable.AddRV("rVendor",v.Local.bVendor)
		
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	f.ODBC.Connection!con5564.Close
	f.Intrinsic.Control.End
f.Intrinsic.Control.EndTry
Program.Sub.CheckGSSVendorExist.End

Program.Sub.CheckPONumberExist.Start
f.Intrinsic.Control.Try
	v.Local.ssql.Declare
	v.Local.sPONumber.Declare
	v.Local.stest.Declare
	v.Local.bPOHead.Declare
	v.Local.sPOHead.Declare
	v.Local.sPOHead.Set(v.Args.POHead)
	f.Intrinsic.String.Concat("select PURCHASE_ORDER from PO_HEADER WHERE PURCHASE_ORDER = '", v.Local.sPOHead.PSQLFriendly ,"'",v.local.sSql)
	f.ODBC.Connection!con5564.ExecuteAndReturn(v.Local.sSql,v.Local.sPONumber)
	F.Intrinsic.Control.If(V.Local.sPONumber.Trim,=,"")
		v.Local.stest.Set("No PO Number Found")
		v.Local.bPOHead.Set(False)
	F.Intrinsic.Control.Else
		v.Local.stest.Set("PO Found")
		v.Local.bPOHead.Set(True)
		'f.Intrinsic.Control.CallSub(CheckPOreceiverExist, "POHead", v.Local.sPONumber)
	F.Intrinsic.Control.EndIf
	f.Intrinsic.Variable.AddRV("POHead",v.Local.bPOHead)
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	f.ODBC.Connection!con5564.Close
	f.Intrinsic.Control.End
f.Intrinsic.Control.EndTry
Program.Sub.CheckPONumberExist.End

Program.Sub.CheckPOreceiverExist.Start
f.Intrinsic.Control.Try
	v.Local.ssql.Declare
	v.Local.sPONumber.Declare
	v.Local.stest.Declare
	v.Local.bPOreceiver.Declare
	v.Local.sPOHead.Declare
	v.Local.sPOHead.Set(v.Args.POHead)
	f.Intrinsic.String.Concat("select DISTINCT PURCHASE_ORDER from PO_RECEIVER WHERE PURCHASE_ORDER = '", v.Local.sPOHead.PSQLFriendly ,"'",v.local.sSql)
	f.ODBC.Connection!con5564.ExecuteAndReturn(v.Local.sSql,v.Local.sPONumber)
	F.Intrinsic.Control.If(V.Local.sPONumber.Trim,=,"")
		v.Local.stest.Set("No PO Reciver Found")
		v.Local.bPOreceiver.Set(False)
	F.Intrinsic.Control.Else
		v.Local.stest.Set("PO Received Found")
		v.Local.bPOreceiver.Set(True)
	F.Intrinsic.Control.EndIf
	f.Intrinsic.Variable.AddRV("POreceiver",v.Local.bPOreceiver)
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	f.ODBC.Connection!con5564.Close
	f.Intrinsic.Control.End
f.Intrinsic.Control.EndTry
Program.Sub.CheckPOreceiverExist.End

Program.Sub.CheckPOVendor.Start
f.Intrinsic.Control.Try
	v.Local.ssql.Declare
	v.Local.sPOVendor.Declare
	v.Local.stest.Declare
	v.Local.bPOVendor.Declare
	v.Local.sPOHead.Declare
	v.Local.sPOHead.Set(v.Args.POHead)
	V.Local.sINVVendorCode.Declare
	V.Local.sINVVendorCode.Set(V.Screen.frmAPAutomationIndex!txtVendCode.Text)
	F.Intrinsic.String.RTrim(v.Local.sINVVendorCode,V.Local.sINVVendorCode)
	v.Local.stest.Set("PO Vendor Does Not Match")
	v.Local.bPOVendor.Set(False)
	

	f.Intrinsic.String.Concat("select RTRIM(VENDOR) as VENDOR from V_PO_HEADER WHERE PURCHASE_ORDER = '", v.Local.sPOHead.PSQLFriendly ,"'",v.local.sSql)
	f.ODBC.Connection!con5564.ExecuteAndReturn(v.Local.sSql,v.Local.sPOVendor)	
	F.Intrinsic.Control.If(V.Ambient.ExecuteAndReturnEOF.not)
		F.Intrinsic.Control.If(V.Local.sINVVendorCode.Trim,=,V.Local.sPOVendor.Trim)
			v.Local.stest.Set("PO Vendor Matches")
			v.Local.bPOVendor.Set(True)
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.EndIf	

	f.Intrinsic.Variable.AddRV("POVendor",v.Local.bPOVendor)
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	f.ODBC.Connection!con5564.Close
	f.Intrinsic.Control.End
f.Intrinsic.Control.EndTry
Program.Sub.CheckPOVendor.End

Program.Sub.setInvoiceAccrual.Start
f.Intrinsic.Control.Try
	v.Local.i.Declare
	v.Local.bAFlag.Declare
	f.Intrinsic.Control.For(v.Local.i,0,v.DataTable.dtRecLines.RowCount--,1)
		f.Intrinsic.Control.If(v.DataTable.dtRecLines(v.Local.i).rowstate,<>,8)
			f.Intrinsic.Control.If(v.DataTable.dtRecLines(v.Local.i).SelectLine!fieldval)
				F.Intrinsic.Control.If(v.DataTable.dtRecLines(v.Local.i).RECEIVER_NO!FIELDVALTRIM,<>,"")
					V.Local.bAFlag.Set(true)
				F.Intrinsic.Control.EndIf
			f.Intrinsic.Control.EndIf
		f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.Next(v.Local.i)
	
	f.Intrinsic.Control.If(v.Local.bAFlag)
		gui.frmAPAutomationIndex.optAccrual.Value(True)
		gui.frmAPAutomationIndex.optInvoice.Value(False)
	f.Intrinsic.Control.Else
		gui.frmAPAutomationIndex.optInvoice.Value(True)
		gui.frmAPAutomationIndex.optAccrual.Value(False)
	f.Intrinsic.Control.EndIf
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	f.Intrinsic.Control.CallSub(unload)
f.Intrinsic.Control.EndTry
Program.Sub.setInvoiceAccrual.End

Program.Sub.CheckAndUpdateXRef.Start
f.Intrinsic.Control.Try
	v.Local.sSupplierName.Declare
	''f.Intrinsic.Debug.ShowCallerInfo tested
	V.Local.sSupplierName.Set(v.Args.SupplierName)
	v.Local.sVendorCode.Declare
	v.Local.sSql.Declare
	v.Local.stest.Declare
	v.Local.sSqlUpdate.Declare
	f.Intrinsic.String.Concat("select VENDORCODE from GAB_5564_AP_XREF WHERE VENDORNAME = '", v.Local.sSupplierName.PSQLFriendly ,"'",v.local.sSql)
	f.ODBC.Connection!con5564.ExecuteAndReturn(v.Local.sSql,v.Local.sVendorCode)
	F.Intrinsic.Control.If(V.Local.sVendorCode.Trim,=,"")
		v.Local.stest.Set("Not registerd in xref")
		v.Local.sVendorCode.Set("TempHolder")
	F.Intrinsic.Control.Else
		v.Local.stest.Set("Registerd in xref")
		f.Intrinsic.String.Concat("UPDATE GAB_5564_AP_HEAD SET VENDCODE = '", v.Local.sVendorCode.trim ,"' WHERE DOCID = '",v.Args.DocID,"'", v.Local.sSqlUpdate)
		gui.frmAPAutomationIndex.lblXRefConnect.ForeColor(v.Enum.ThemeColors!ColorGreen)
	F.Intrinsic.Control.EndIf
	f.Intrinsic.Variable.AddRV("VendSQLUpdate",v.Local.sSqlUpdate)
	f.Intrinsic.Variable.AddRV("VendCode",v.Local.sVendorCode)
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	f.ODBC.Connection!con5564.Close
	f.Intrinsic.Control.End
f.Intrinsic.Control.EndTry
Program.Sub.CheckAndUpdateXRef.End

Program.Sub.checkTaxAfterInvoiceUpload.Start
f.Intrinsic.Control.Try
	V.Local.sSql.Declare
	v.Local.sRet.Declare
	v.Local.sInvoice.Declare
	v.Local.sAPAccount.Declare
	V.Local.sTaxCode.Declare
	v.Local.sTaxAcct.Declare
	v.Local.sBatchNum.Declare
	v.Local.sVendorID.Declare
	V.Local.sCompCurr.Declare
	v.Local.sVendCurr.Declare
	v.Local.bForeign.Declare
	
	v.Local.fInvoiceAmt.Declare
	v.Local.fBatchInvoiceAmt.Declare
	v.Local.fDifference.Declare
	v.Local.fGSTAmt.Declare
	
	v.Local.i.Declare
	v.Local.j.Declare(long)
	
	
	'Get the company's AP account
	F.ODBC.Connection!Con5564.executeandreturn("SELECT text1 FROM op_header where ID=402455 AND SEQUENCE=0000",v.Local.sAPAccount)
	
	'Get the company's currency code
	F.ODBC.Connection!Con5564.executeandreturn("select rtrim(TEXT1) from OP_HEADER WHERE ID='000000' AND SEQUENCE='0000'",v.Local.sCompCurr)
	f.Intrinsic.String.RTrim(v.Local.sCompCurr,v.Local.sCompCurr)

	'Bring all the distinct intvoices together in a datable and loop through them
	f.Data.DataView.Create("dtApprovedProcessing","dvApprovedProcessing",22,"","")
	f.Data.DataView.ToDataTableDistinct("dtApprovedProcessing","dvApprovedProcessing","dtApprovedInvoices","INVCNUMB*!*SubTotal*!*GSTTotal*!*TAXCODE*!*VENDCODE")
	f.Intrinsic.Control.For(v.Local.i,0,v.DataTable.dtApprovedInvoices.RowCount--,1)
		
		'Set Variables
		v.Local.sTaxCode.Set(v.DataTable.dtapprovedinvoices(v.Local.i).TAXCODE!Fieldvaltrim)
		v.Local.sInvoice.Set(v.DataTable.dtApprovedInvoices(v.Local.i).INVCNUMB!Fieldvaltrim)
		v.Local.sVendorID.Set(v.DataTable.dtapprovedinvoices(v.Local.i).VENDCODE!Fieldvaltrim)
		v.Local.fGSTAmt.Set(v.DataTable.dtapprovedinvoices(v.Local.i).GSTTOTAL!Fieldval)
		f.Intrinsic.Math.Add(v.DataTable.dtapprovedINvoices(v.Local.i).GSTTotal!fieldval,v.DataTable.dtApprovedInvoices(v.Local.i).Subtotal!fieldval,v.Local.fInvoiceAmt)
		f.Intrinsic.Math.Round(v.Local.fInvoiceAmt,2,v.Local.fInvoiceAmt)
		
		'Check if Vendor is International
		f.Intrinsic.String.Build("select DEFAULT_CURRENCY from V_VENDOR_INTL where vendor='{0}'",v.Local.sVendorID,v.Local.sSql)
		f.ODBC.Connection!con5564.executeandreturn(v.Local.sSql,v.Local.sVendCurr)
		
		'Only do the check if the currency is the same as the company currency
		f.Intrinsic.Control.If(v.Local.sVendCurr.Trim,=,v.Local.sCompCurr.Trim)
			'Query AP Open Batches for the invoice
			f.Intrinsic.String.Build("SELECT TEMP_AMT FROM AP_OPEN_BATCHES WHERE INVC='{0}' AND GL_ACCT='{1}'",v.Local.sInvoice,v.Local.sAPAccount.Trim,v.Local.sSql)
			f.ODBC.Connection!con5564.executeandreturn(v.Local.sSql,v.Local.fBatchInvoiceAmt)
			F.Intrinsic.Math.Abs(V.Local.fBatchInvoiceAmt,V.Local.fBatchInvoiceAmt)
			'Determine if the invoice value matches
			f.Intrinsic.Control.If(v.Local.fBatchInvoiceAmt,<>,v.Local.fInvoiceAmt)
				f.Intrinsic.Control.If(v.Local.fBatchInvoiceAmt,<>,0)
					'generally the batch is higher than the invoice, calculate the difference
					f.Intrinsic.Math.Sub(v.Local.fBatchInvoiceAmt,v.Local.fInvoiceAmt,v.Local.fDifference)
					f.Intrinsic.Math.Round(v.local.fDifference,2,v.Local.fDifference)
					
					'Grab the tax GL Code
					f.Intrinsic.String.Build("SELECT VAT_INPUT_ACCT FROM AR_TAX_TABLES WHERE CONCAT(ZONE,AUTH)='{0}'",v.Local.sTaxCode,v.Local.sSql)
					f.ODBC.Connection!con5564.executeandreturn(v.Local.sSql,v.Local.sTaxAcct)
					'VAT might not be used, so if blank, check the normal place for payable GST
					F.Intrinsic.Control.If(v.Local.sTaxAcct.Trim,=,"")
						f.Intrinsic.String.Build("SELECT VAT_EXP_ACCT FROM AR_TAX_TABLES WHERE CONCAT(ZONE,AUTH)='{0}'",v.Local.sTaxCode,v.Local.sSql)
						f.ODBC.Connection!con5564.executeandreturn(v.Local.sSql,v.Local.sTaxAcct)
					F.Intrinsic.Control.EndIf
					
					'start correction
					'Update invoice figure
					F.Intrinsic.Math.Mult(V.Local.fInvoiceAmt,"-1",V.Local.fInvoiceAmt)
					f.Intrinsic.String.Build("UPDATE AP_OPEN_BATCHES SET TEMP_AMT={0} WHERE GL_ACCT='{1}' AND INVC='{2}'",v.Local.fInvoiceAmt,v.Local.sAPAccount,v.Local.sInvoice,v.Local.sSql)
					f.ODBC.Connection!con5564.execute(v.Local.sSql)
					
					'Update the tax figure
					f.Intrinsic.String.Build("UPDATE AP_OPEN_BATCHES SET TEMP_AMT={0} WHERE GL_ACCT='{1}' AND INVC='{2}'",V.Local.fGSTAmt,v.Local.sTaxAcct,v.Local.sInvoice,v.Local.sSql)
					f.ODBC.Connection!con5564.execute(v.Local.sSql)
					
					'Take it off the first line
					f.Intrinsic.String.Build("UPDATE AP_OPEN_BATCHES SET INVC_TAX_AMT=INVC_TAX_AMT-{0} WHERE LN='1' AND INVC='{1}'",V.Local.fDifference,v.Local.sInvoice,v.Local.sSql)
					f.ODBC.Connection!con5564.execute(v.Local.sSql)
					
					'Grab the batchnum
					f.Intrinsic.String.Build("SELECT BATCH FROM AP_OPEN_BATCHES WHERE LN='1' AND INVC='{0}'",v.Local.sInvoice,v.Local.sSql)
					f.ODBC.Connection!con5564.executeandreturn(v.Local.sSql,v.Local.sBatchNum)
					
					'Update INVC DTL Vat table taking off the different
					f.Intrinsic.String.Build("UPDATE INVC_DTL_VAT SET TAX_AMOUNT=TAX_AMOUNT-{0} WHERE BATCH_LINE='00001' AND INVOICE='{1}' AND BATCH_NUM='{2}' AND VENDOR_ID='{3}'",V.Local.fDifference,v.Local.sInvoice,v.Local.sBatchNum,v.Local.sVendorID,v.Local.sSql)
					f.ODBC.Connection!con5564.execute(v.Local.sSql)
				f.Intrinsic.Control.EndIf
			f.Intrinsic.Control.EndIf
		f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.Next(v.Local.i)
	
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
program.Sub.checkTaxAfterInvoiceUpload.End

Program.Sub.calcTaxGrandTotal.Start
f.Intrinsic.Control.Try
	'f.Intrinsic.Debug.ShowCallerInfo
	v.Local.bXREFChecking.Declare
	v.local.bXREFChecking.Set(v.Args.xref)
	v.Local.sMessage.Declare
	v.Local.sSubTotal.Declare
	v.Local.sSubTotal.Set(v.Screen.frmAPAutomationIndex!txtSubTotal.text)
	f.Intrinsic.String.Replace(v.Local.sSubTotal,"$","",v.Local.sSubTotal)
	v.Local.sTax.Declare
	v.Local.sTax.Set(v.Screen.frmAPAutomationIndex!txtGST.text)
	f.Intrinsic.String.Replace(v.Local.sTax,"$","",v.Local.sTax)
	v.Local.fSubTotal.Declare
	v.local.fSubTotal.Set(v.Local.sSubTotal)
	v.Local.sTaxCode.Declare
	v.Local.sTaxCode.Set(v.Screen.frmAPAutomationIndex!txtETaxCode.text)
	
	v.Local.fTax.Declare
	v.Local.fTax.Set(v.Local.sTax)
	v.local.sSql.Declare
	f.Intrinsic.String.Build("SELECT RATE FROM AR_TAX_TABLES WHERE CONCAT(ZONE,AUTH)='{0}'",v.Local.sTaxCode,v.Local.sSql)
	v.Local.fRate.Declare
	f.ODBC.Connection!con5564.executeandreturn(v.Local.sSql,v.Local.fRate)
	v.Local.fTaxResult.Declare
	f.Intrinsic.Math.Mult(v.Local.fSubTotal,v.Local.fRate,v.Local.fTaxResult)
	f.Intrinsic.Math.Round(v.Local.fTaxResult,2,1,v.Local.fTaxResult)

	gui.frmAPAutomationIndex.lblGSTCheck.text(v.Local.fTaxResult)
	f.Intrinsic.Control.If(v.Local.fTaxResult,<>,v.Local.fTax)
		f.Intrinsic.Math.Sub(v.Local.fTaxResult,v.Local.fTax,v.Local.fTaxResult)
		f.Intrinsic.Math.Round(v.Local.fTaxResult,2,1,v.Local.fTaxResult)
		'f.Intrinsic.Debug.ShowCallerInfo
		f.Intrinsic.Control.If(v.Local.bXREFChecking,=,"True")
			f.Intrinsic.String.Concat(v.Local.fTaxResult," Tax Variance Calculated in GSS!",V.Local.sMessage)		
		f.Intrinsic.Control.Else
			V.Local.sMessage.Set("XRef Needs to be connected!")
		f.Intrinsic.Control.EndIf

		gui.frmAPAutomationIndex.lblGSTCheck.Visible(true)
		gui.frmAPAutomationIndex.lblGSTCheck.text(v.Local.sMessage)
		gui.frmAPAutomationIndex.lblGSTCheck.ForeColor(v.Enum.ThemeColors!ColorRed)
	f.Intrinsic.Control.Else
		gui.frmAPAutomationIndex.lblGSTCheck.Visible(false)
		gui.frmAPAutomationIndex.lblGSTCheck.ForeColor(v.Enum.ThemeColors!ColorGreen)
	f.Intrinsic.Control.EndIf
	
	v.Local.fGrandTotal.Declare
	f.Intrinsic.Math.Add(v.Local.fTax,v.Local.fSubTotal,v.Local.fGrandTotal)
	
	
	v.Local.sAddSign.Declare
	f.Intrinsic.String.Concat("$",v.local.fGrandTotal,v.local.sAddSign)
	gui.frmAPAutomationIndex.txtGTotal.Text(v.Local.sAddSign)
	
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	f.Intrinsic.Control.CallSub(unload)
f.Intrinsic.Control.EndTry
Program.Sub.calcTaxGrandTotal.End

Program.Sub.calcVariance.Start
f.Intrinsic.Control.Try
	v.Local.i.Declare
	v.Local.fTotal.Declare
	v.Local.sVendor.Declare
	v.Local.sVendor.Set(v.Screen.frmAPAutomationIndex!txtVendCode.Text)
	v.Local.sVendorCurr.Declare
	v.Local.sSql.Declare
	f.Intrinsic.String.Build("select DEFAULT_CURRENCY from V_VENDOR_INTL WHERE VENDOR='{0}'",V.Local.sVendor.Trim,V.Local.sSQL)
	f.ODBC.Connection!con5564.ExecuteAndReturn(v.Local.sSql,v.Local.sVendorCurr)
	v.Local.sCompanyCurr.Declare
	F.ODBC.Connection!con5564.ExecuteAndReturn("SELECT rtrim(TEXT1) FROM OP_HEADER WHERE ID='000000' AND SEQUENCE='0000'",v.Local.sCompanyCurr)
	
	f.Intrinsic.Control.If(v.Local.sCompanyCurr.Trim,=,"")
		f.Intrinsic.UI.Msgbox("ERROR! Company Currency not found")
		f.Intrinsic.Control.ExitSub
	f.Intrinsic.Control.EndIf
	
	v.Local.sSubTotal.Declare
	v.Local.sSubTotal.Set(v.Screen.frmAPAutomationIndex!txtSubTotal.text)
	f.Intrinsic.String.Replace(v.Local.sSubTotal,"$","",v.Local.sSubTotal)
	v.Local.fSubTotal.Declare
	v.Local.fSubTotal.Set(v.Local.sSubTotal)
	v.Local.fVariance.Declare
	v.Local.sVarianceWithSign.Declare
				
	f.Intrinsic.Control.For(v.Local.i,0,v.DataTable.dtRecLines.RowCount--,1)
		f.Intrinsic.Control.If(v.DataTable.dtRecLines(v.Local.i).rowstate,<>,8)
			f.Intrinsic.Control.If(v.DataTable.dtRecLines(v.Local.i).SelectLine!fieldval)
				
				f.Intrinsic.Control.If(v.Local.sCompanyCurr.Trim,<>,v.Local.sVendorCurr.Trim)
					f.Intrinsic.Math.Add(v.Local.fTotal,v.DataTable.dtRecLines(v.Local.i).EXCH_COST!FIELDVAL,V.Local.fTotal)
				f.Intrinsic.Control.Else
					f.Intrinsic.Math.Add(v.Local.fTotal,v.DataTable.dtRecLines(v.Local.i).ACTUAL_AMT!FIELDVAL,V.Local.fTotal)
				
				f.Intrinsic.Control.EndIf
				
			f.Intrinsic.Control.EndIf
		f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.Next(v.Local.i)
	
	'Variance bug calculation.  Need to do this rounding so that the GAB Compiler calculates 0 when 0.
	f.Intrinsic.Math.Round(v.Local.fSubTotal,2,v.Local.fSubTotal)
	f.Intrinsic.Math.Round(v.Local.fTotal,2,v.Local.fTotal)
	
	f.Intrinsic.Math.Sub(v.Local.fSubTotal,v.Local.fTotal,v.Local.fVariance)
	f.Intrinsic.Math.Round(v.Local.fVariance,2,v.Local.fVariance)
	'f.Intrinsic.Debug.ShowCallerInfo
	f.Intrinsic.String.Concat("$",v.local.fVariance,v.local.sVarianceWithSign)
	
	gui.frmAPAutomationIndex.txtEVarianceAmt.Text(v.Local.sVarianceWithSign)
	
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	f.Intrinsic.Control.CallSub(unload)
f.Intrinsic.Control.EndTry
Program.Sub.calcVariance.End

Program.Sub.subUpdateButton_Update.Start
f.Intrinsic.Control.Try
	v.Local.sSupplierName.Declare
	v.Local.sInvoiceNumber.Declare
	v.Local.sVendCode.Declare
	v.Local.sGLAccount.Declare
	v.Local.sTaxCode.Declare
	v.Local.sGrandTotal.Declare
	v.Local.sSubtotal.Declare
	v.Local.sSql.Declare
	v.Local.sPOReference.Declare
	v.Local.sSEQUENCE.Declare
	v.Local.sJob.Declare
	v.Local.sSuffix.Declare
	v.Local.sPO_Line.Declare
	v.Local.sRECEIVER_NO.Declare
	v.Local.sGL_ACCOUNT.Declare
	v.Local.sQTY_Received.Declare
	v.Local.sQTY_Received_Original.Declare
	v.Local.sActualAmt.Declare
	v.Local.sReceivedAmt.Declare
	v.Local.sPART.Declare
	v.Local.sLOCATION.Declare
	v.Local.sSqlXrefCheck.Declare
	v.Local.sSelectLines.Declare
	v.Local.sIAFlag.Declare
	v.Local.sVatRUle.Declare
	v.Local.fExchRate.Declare
	v.Local.fExchCost.Declare
	v.Local.sExchCurr.Declare
	v.Local.sPackingList.Declare
	
	v.Local.dInvoiceDate.Declare
	
	v.Local.bTaxableFlag.Declare
	v.Local.bTaxCheckBox.Declare
	v.Local.bXrefCheck.Declare
	v.Local.bProcessesStatus.Declare
	
	v.Local.lXrefCheck.Declare
	v.Local.lProcessesStatus.Declare
	v.Local.lTaxFlag.Declare
	v.Local.iCount.Declare
	
	v.Local.bSelectionMade.Declare

	v.Local.sGrandTotal.Set(v.Screen.frmAPAutomationIndex!txtGTotal.text)
	f.Intrinsic.String.Replace(v.local.sGrandTotal,"$","",v.Local.sGrandTotal)
	
	'Loop through all of the lines
	F.Intrinsic.Control.For(v.Local.iCount, 0, v.DataTable.dtRecLines.RowCount--, 1)
		F.Intrinsic.Control.If(V.DataTable.dtRecLines(V.Local.iCount).RowState,<>,8)	
			f.Intrinsic.Control.If(v.DataTable.dtRecLines(v.Local.iCount).SelectLine!fieldval)
				'Variable set
				v.Local.sInvoiceNumber.Set(v.Screen.frmAPAutomationIndex!txtInvNum.text)
				v.Local.dInvoiceDate.Set(v.Screen.frmAPAutomationIndex!txtInvdate.text)
				v.Local.sSupplierName.Set(v.Screen.frmAPAutomationIndex!txtSupplierName.text)
				v.Local.sVendCode.Set(v.Screen.frmAPAutomationIndex!txtVendCode.text)
				v.Local.sPOReference.Set(v.Screen.frmAPAutomationIndex!txtPORef.text)
				v.Local.sPART.Set(v.DataTable.dtRecLines(v.Local.iCount).PART!FIELDVALTRIM)
				v.Local.sLOCATION.Set(v.DataTable.dtRecLines(v.Local.iCount).LOCATION!FIELDVALTRIM)
				v.Local.sQTY_Received.Set(v.DataTable.dtRecLines(v.Local.iCount).QTY_RECEIVED!FIELDVALTRIM)
				v.Local.sQTY_Received_Original.Set(v.DataTable.dtRecLines(v.Local.iCount).QTY_RECEIVED_ORIGINAL!FIELDVALTRIM)
				v.Local.sReceivedAmt.Set(v.DataTable.dtRecLines(v.Local.iCount).RECEIVED_AMT!FIELDVALTRIM)
				v.Local.sActualAmt.Set(v.DataTable.dtRecLines(v.Local.iCount).ACTUAL_AMT!FIELDVALTRIM)
				v.Local.sTaxCode.Set(v.DataTable.dtRecLines(v.Local.iCount).TAX_CODE!FIELDVALTRIM)
				v.Local.sSEQUENCE.Set(v.DataTable.dtRecLines(v.Local.iCount).SEQ!FIELDVALTRIM)
				v.Local.sSelectLines.Set(v.DataTable.dtRecLines(v.Local.iCount).SelectLine!FIELDVALTRIM)
				v.Local.sJob.Set(v.DataTable.dtRecLines(v.Local.iCount).JOB!FIELDVALTRIM)
				v.Local.sSuffix.Set(v.DataTable.dtRecLines(v.Local.iCount).SUFFIX!FIELDVALTRIM)
				v.Local.sPO_Line.Set(v.DataTable.dtRecLines(v.Local.iCount).PO_LINE!FIELDVALTRIM)
				v.Local.sRECEIVER_NO.Set(v.DataTable.dtRecLines(v.Local.iCount).RECEIVER_NO!FIELDVALTRIM)
				v.Local.sGL_ACCOUNT.Set(v.DataTable.dtRecLines(v.Local.iCount).GL_ACCOUNT!FIELDVALTRIM)
				v.Local.bTaxableFlag.Set(v.DataTable.dtRecLines(v.Local.iCount).Taxable!FIELDVALTRIM)
				V.Local.fExchCost.Set(v.DataTable.dtRecLines(v.Local.iCount).EXCH_COST!fieldval)
				v.Local.fExchRate.Set(v.DataTable.dtRecLines(v.Local.iCount).EXCH_RATE!Fieldval)
				f.Intrinsic.String.Build("SELECT DEFAULT_CURRENCY FROM V_VENDOR_MASTER3 WHERE VENDOR='{0}'",v.Local.sVendCode.Trim,v.Local.sSql)
				f.ODBC.Connection!con5564.ExecuteAndReturn(v.Local.sSql,v.Local.sExchCurr)
				f.Intrinsic.Control.If(v.Local.sPOReference.Trim,=,"MULTIPO")
					v.Local.sPackingList.Set(v.DataTable.dtRecLines(v.Local.iCount).PURCHASE_ORDER!Fieldvaltrim)
				f.Intrinsic.Control.EndIf
				
		
				f.Intrinsic.Control.If(v.Local.bTaxableFlag,=,"False")
					v.Local.lTaxFlag.Set(0)
				f.Intrinsic.Control.Else()
					v.Local.lTaxFlag.Set(1)
				f.Intrinsic.Control.EndIf	
				f.Intrinsic.Control.If(v.Screen.frmAPAutomationIndex!optAccrual.Value,=,"True")
					v.Local.sIAFlag.Set("a")
				f.Intrinsic.Control.Else
					v.local.sIAFlag.Set("i")
				f.Intrinsic.Control.EndIf
				
				'Write to DB
				F.Intrinsic.String.Build("UPDATE GAB_5564_AP_HEAD SET INVOICETYPE='{0}', VendCode='{1}', GRSTOTAL='{2}', VENDNAME='{3}', INVCNUMB='{4}',INVCDATE='{5}',POHEAD='{6}'  WHERE DOCID='{7}'",v.Local.sIAFlag,v.Local.sVendCode,v.Local.SGRANDTOTAL,v.local.sSupplierName.PSQLFriendly,v.local.sInvoiceNumber.PSQLFriendly,V.local.dInvoiceDate.PervasiveDate,v.local.sPOReference.PSQLFriendly,v.Global.sDOCID,v.Local.ssql)
				f.ODBC.Connection!con5564.execute(v.Local.ssql)
				
				f.Intrinsic.String.Build("INSERT INTO GAB_5564_AP_SA (DOCID, JOB, SUFFIX, SEQ, POLINE, PORCVR, GLACCOUNT, QUANTITY, ACTUAL_AMT, RECEIVED_AMT, PART, LOCATION, TAXCODE, TAXABLEFLAG, HID, EXCH_AMT, EXCH_RATE, EXCH_CURR, PACKINGLIST) VALUES ('{0}','{1}','{2}','{3}','{4}','{5}','{6}','{7}','{8}','{9}','{10}','{11}','{12}','{13}','{14}',{15},{16},'{17}','{18}')",v.Global.sDOCID,v.local.sJob,v.local.sSuffix,v.local.sSEQUENCE,v.local.sPO_Line,v.local.sRECEIVER_NO,v.local.sGL_ACCOUNT,v.Local.sQTY_Received,v.Local.sActualAmt,v.Local.sReceivedAmt,v.Local.sPART.PSQLFriendly,v.local.sLOCATION,v.local.sTaxCode,v.local.lTaxFlag,v.Global.sID,v.Local.fExchCost,v.Local.fExchRate, v.Local.sExchCurr,v.Local.sPackingList,v.Local.sSql)
				F.ODBC.Connection!con5564.Execute(v.Local.sSql)
			f.Intrinsic.Control.EndIf
			
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.Next(v.Local.iCount)
	
f.Intrinsic.Control.Catch	
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.subUpdateButton_Update.End

Program.Sub.subPOSTDocumentRedownload.Start
'PO Doc Review download from api
f.Intrinsic.Control.Try
	v.Local.sxpath.Declare
	v.Local.sret.Declare
	v.Local.sKey.Declare
	v.Local.sWF.Declare
	v.Local.sFile.declare
	v.Local.lHand.Declare
	v.Local.sDoc.Declare
	v.Local.sDwn.Declare
	v.Local.sXML.Declare
	v.Local.sStat.Declare
	v.Local.sNode.Declare
	v.Local.bEOF.Declare
	v.Local.sDocID.Declare
	v.Local.sRowID.Declare
	v.Local.sDocURL.Declare
	v.Local.sImgURL.Declare
	v.Local.sFieldID.Declare
	v.Local.sFieldName.Declare
	v.Local.sResult.Declare
	V.Local.sExpr.Declare
	v.Local.sRow.Declare
	v.Local.sDescLine.Declare
	v.Local.sGenrCode.Declare
	v.Local.sNotes.Declare
	v.Local.sPORecLine.Declare
	v.Local.sPOHead.Declare
	v.Local.sPOLine.Declare
	v.Local.sPORcvr.Declare
	v.Local.sGLCode.Declare
	v.Local.sItemCode.Declare
	v.Local.sVendName.Declare
	v.Local.sInvcNumb.Declare
	v.Local.sInvcDate.Declare
	v.Local.fSubTotal.Declare
	v.Local.sSubTotal.Declare
	v.Local.fGSTValue.Declare
	v.Local.sGSTValue.Declare
	v.Local.fGrossVal.Declare
	v.Local.sGrossVal.Declare
	v.Local.fQuantity.Declare
	v.Local.sQuantity.Declare
	v.Local.fUnitCost.Declare
	v.Local.sUnitCost.Declare
	v.Local.fExtension.Declare
	v.Local.sExtension.Declare
	V.Local.sPORecKey.Declare
	v.Local.sSql.Declare
	V.Local.iVar.Declare
	v.Local.iRow.Declare
	v.Local.iPORev.Declare
	v.Local.sRevPad.Declare
	v.Local.sAdminDetailsFile.Declare
	v.Local.sApiID.Declare
	v.Local.sWorkflowID.Declare
	v.Local.sAPIKeyFile.Declare
	v.Local.sAPIKey.Declare
	v.Local.sFileName.Declare
	v.Local.sVendorNo.Declare
	v.Local.sVat.Declare
	v.Local.sLoc.Declare
	v.Local.sBranch.Declare
	v.Local.sPackList.Declare
	v.Local.sVoucher.Declare
	v.Local.sBookUseTax.Declare
	v.Local.sInsertHeaderSQL.Declare
	v.Local.sInsertLinesSQL.Declare
	v.Local.sBuyer.Declare
	v.Local.iHID.Declare
	v.Local.bIsNumb.Declare
	v.Local.bIsDate.Declare
	v.Local.sdata.Declare
	v.Local.sID.Declare
	v.Local.sDocSaveLocation.Declare
	v.Local.sPOType.Declare
	v.Local.sXrefCheck.Declare
	v.Local.sVendCode.Declare
	v.Local.sTaxCode.Declare
	v.Local.sNVENDNAME.Declare
	v.Local.sNINVCNUMB.Declare
	v.Local.sNINVCDATE.Declare
	v.Local.sNPOHEAD.Declare
	v.Local.sNSUBTOTAL.Declare
	v.Local.sNGSTTOTAL.Declare
	v.Local.sNGRSTOTAL.Declare
	v.Local.sDocID.Set(v.Screen.frmAPAutomationIndex!txtDocID.text)
	
	f.Intrinsic.String.concat(v.Caller.TempDir,"\API_Data_RedownloadData.xml",v.Local.sFile)
	F.Intrinsic.String.Build("{{0}api_key{0} : {0}{1}{0}, {0}document_id{0} : {0}{2}{0} }",v.Ambient.DblQuote,v.Global.sAPIKey,v.local.sDocID,v.Local.sdata)
	F.Communication.REST.SetProperty("ContentType","application/json")
	f.Communication.REST.SetProperty("PostData",v.Local.sdata)
	F.Communication.REST.Post("https://api-app.xtracta.com/v1/documents")
	f.Communication.REST.ReadProperty("TransferredData",V.Local.sret)
	
	f.Intrinsic.File.String2File(v.Local.sFile,v.Local.sret)
	F.Intrinsic.String.Build("Doc{0}",v.global.icountingAPICalls,V.Local.sDoc)
	f.Intrinsic.Math.Add(v.global.icountingAPICalls,1,v.global.icountingAPICalls)
	F.Global.XML.LoadDocument(v.Local.sdoc,V.local.sFile,False,False,False,False)
	f.global.XML.Query(v.local.sdoc,"set1","//*")
	
	'loop through node set
	F.Intrinsic.Control.dountil(V.local.bEOF,=,True)
		'Get the node name
		f.global.xml.ReadNodeSetValue(v.local.sdoc,"set1","nodeName",V.local.sret)
		
		f.Intrinsic.Control.If(v.Local.sret.Trim,=,"document_id")
			v.Local.iRow.Set(0)
			'f.global.xml.ReadNodeSetValue(v.local.sdoc,"set1","text",V.local.sDocID)
		f.Intrinsic.Control.ElseIf(v.Local.sret.Trim,=,"api_download_status")
			f.global.xml.ReadNodeSetValue(v.local.sdoc,"set1","text",V.local.sDwn)
		f.Intrinsic.Control.ElseIf(v.Local.sret.Trim,=,"document_url")
			f.global.xml.ReadNodeSetValue(v.local.sdoc,"set1","text",V.local.sDocURL)
		f.Intrinsic.Control.ElseIf(v.Local.sret.Trim,=,"image_url")
			f.global.xml.ReadNodeSetValue(v.local.sdoc,"set1","text",V.local.sImgURL)
		f.Intrinsic.Control.ElseIf(v.Local.sret.Trim,=,"field_name")
			f.global.xml.ReadNodeSetValue(v.local.sdoc,"set1","text",V.local.sFieldName)
			f.Intrinsic.Control.If(v.Local.sFieldName.Trim,=,"PO Header #")
				f.global.xml.next(v.local.sdoc,"set1",V.local.bEOF)
				f.global.xml.ReadNodeSetValue(v.local.sdoc,"set1","text",V.local.sPOHead)
				f.Intrinsic.Control.For(v.Local.iPORev,0,10,1)
					f.Intrinsic.String.LPad(v.Local.iPORev,"0",2,v.Local.sRevPad)
					f.Intrinsic.String.Concat("-",v.Local.sRevPad,v.Local.sRevPad)
					F.Intrinsic.String.Replace(v.Local.sPOHead,v.Local.sRevPad,"",v.Local.sPOHead)
				f.Intrinsic.Control.Next(v.local.iPORev)
				f.Intrinsic.String.LPad(v.Local.sPOHead,"0",7,v.Local.sPOHead)
				f.Intrinsic.Control.If(v.Local.sPOHead,=,"0000000")
					v.Local.sPOHead.Set("")
				f.Intrinsic.Control.EndIf
			f.Intrinsic.Control.ElseIf(v.Local.sFieldName.Trim,=,"Item Code")
				f.global.xml.next(v.local.sdoc,"set1",V.local.bEOF)
				f.global.xml.ReadNodeSetValue(v.local.sdoc,"set1","text",V.local.sItemCode)
				
				f.Global.XML.Back(v.Local.sDoc,"set1",v.Local.bEOF)
			f.Intrinsic.Control.Elseif(v.Local.sFieldName.Trim,=,"Description")
				f.global.xml.next(v.local.sdoc,"set1",V.local.bEOF)
				f.global.xml.ReadNodeSetValue(v.local.sdoc,"set1","text",V.local.sDescLine)
				f.Global.XML.Back(v.Local.sDoc,"set1",v.Local.bEOF)
			f.Intrinsic.Control.Elseif(v.Local.sFieldName.Trim,=,"Quantity")
				f.global.xml.next(v.local.sdoc,"set1",V.local.bEOF)
				f.global.xml.ReadNodeSetValue(v.local.sdoc,"set1","text",V.local.sQuantity)
				f.Intrinsic.Math.IsNumeric(v.Local.sQuantity,v.Local.bIsNumb)
				f.Intrinsic.Control.If(v.Local.bIsNumb)
					v.Local.fQuantity.Set(v.Local.sQuantity)
				f.Intrinsic.Control.EndIf
				f.Global.XML.Back(v.Local.sDoc,"set1",v.Local.bEOF)
			F.Intrinsic.Control.ElseIf(V.Local.sFieldName.Trim,=,"Supplier Name")
				f.global.xml.next(v.local.sdoc,"set1",V.local.bEOF)
				f.global.xml.ReadNodeSetValue(v.local.sdoc,"set1","text",V.local.sVendName)
				f.Global.XML.Back(v.Local.sDoc,"set1",v.Local.bEOF)
			f.Intrinsic.Control.ElseIf(v.Local.sFieldName.Trim,=,"Invoice Number")
				f.global.xml.next(v.local.sdoc,"set1",V.local.bEOF)
				f.global.xml.ReadNodeSetValue(v.local.sdoc,"set1","text",V.local.sInvcNumb)
				f.Global.XML.Back(v.Local.sDoc,"set1",v.Local.bEOF)
			f.Intrinsic.Control.ElseIf(v.Local.sFieldName.Trim,=,"Invoice Date")
				f.global.xml.next(v.local.sdoc,"set1",V.local.bEOF)
				f.global.xml.ReadNodeSetValue(v.local.sdoc,"set1","text",V.local.sInvcDate)
				f.Global.XML.Back(v.Local.sDoc,"set1",v.Local.bEOF)
			f.Intrinsic.Control.ElseIf(v.Local.sFieldName.Trim,=,"Sub Total")
				f.global.xml.next(v.local.sdoc,"set1",V.local.bEOF)
				f.global.xml.ReadNodeSetValue(v.local.sdoc,"set1","text",V.local.sSubTotal)
				f.Intrinsic.String.Replace(v.Local.sSubTotal,"$","",v.Local.sSubTotal)
				f.Intrinsic.Math.IsNumeric(v.Local.sSubTotal,v.Local.bIsNumb)
				f.Intrinsic.Control.If(v.Local.bIsNumb)
					v.Local.fSubTotal.Set(v.Local.sSubTotal)
				f.Intrinsic.Control.EndIf
				f.Global.XML.Back(v.Local.sDoc,"set1",v.Local.bEOF)
			f.Intrinsic.Control.ElseIf(v.Local.sFieldName.Trim,=,"GST Total")
				f.global.xml.next(v.local.sdoc,"set1",V.local.bEOF)
				f.global.xml.ReadNodeSetValue(v.local.sdoc,"set1","text",V.local.sGSTValue)
				f.Intrinsic.String.Replace(v.Local.sGSTValue,"$","",v.Local.sGSTValue)
				f.Intrinsic.Math.IsNumeric(v.Local.fGSTValue,v.Local.bIsNumb)
				f.Intrinsic.Control.If(v.Local.bIsNumb)
					v.Local.fGSTValue.Set(v.Local.sGSTValue)
				f.Intrinsic.Control.EndIf
				f.Global.XML.Back(v.Local.sDoc,"set1",v.Local.bEOF)
			f.Intrinsic.Control.ElseIf(v.Local.sFieldName.Trim,=,"Gross Total")
				f.global.xml.next(v.local.sdoc,"set1",V.local.bEOF)
				f.global.xml.ReadNodeSetValue(v.local.sdoc,"set1","text",V.local.sGrossVal)
				f.Intrinsic.String.Replace(v.Local.sGrossVal,"$","",v.Local.sGrossVal)
				f.Intrinsic.Math.IsNumeric(v.Local.sGrossVal,v.Local.bIsNumb)
				f.Intrinsic.Control.If(v.Local.bIsNumb)
					v.Local.fGrossVal.Set(v.Local.sGrossVal)
				f.Intrinsic.Control.EndIf
				f.Global.XML.Back(v.Local.sDoc,"set1",v.Local.bEOF)
			f.Intrinsic.Control.ElseIf(v.Local.sFieldName.Trim,=,"Unit Cost")
				f.global.xml.next(v.local.sdoc,"set1",V.local.bEOF)
				f.global.xml.ReadNodeSetValue(v.local.sdoc,"set1","text",V.local.sUnitCost)
				f.Intrinsic.String.Replace(v.Local.sUnitCost,"$","",v.Local.sUnitCost)
				f.Intrinsic.Math.IsNumeric(v.Local.sUnitCost,v.Local.bIsNumb)
				f.Intrinsic.Control.If(v.Local.bIsNumb)
					v.Local.fUnitCost.Set(v.Local.sUnitCost)
				f.Intrinsic.Control.EndIf
				f.Global.XML.Back(v.Local.sDoc,"set1",v.Local.bEOF)
			f.Intrinsic.Control.ElseIf(v.Local.sFieldName.Trim,=,"Notes")
				f.global.xml.next(v.local.sdoc,"set1",V.local.bEOF)
				f.global.xml.ReadNodeSetValue(v.local.sdoc,"set1","text",V.local.sNotes)
				f.Global.XML.Back(v.Local.sDoc,"set1",v.Local.bEOF)
			f.Intrinsic.Control.Elseif(v.Local.sFieldName.Trim,=,"Extension")
			
				f.global.xml.next(v.local.sdoc,"set1",V.local.bEOF)
				f.global.xml.ReadNodeSetValue(v.local.sdoc,"set1","text",V.local.sExtension)
				f.Intrinsic.String.Replace(v.Local.sExtension,"$","",v.Local.sExtension)
				f.Intrinsic.Math.ConvertToFloat(v.Local.sExtension,v.Local.fExtension)
				f.Global.XML.Back(v.Local.sDoc,"set1",v.Local.bEOF)
	
				f.Intrinsic.Math.Add(v.Local.iRow,1,v.Local.iRow)
				f.Intrinsic.String.LPad(v.Local.iRow,"0",3,v.Local.sRowID)
				f.Intrinsic.String.Concat(v.Local.sDocID,v.Local.sRowID,v.Local.sRowID)
				f.Intrinsic.String.Build("RowID={0}",v.Local.sRowID,v.Local.sExpr)
				'f.Data.DataTable.Select("dtApp",V.Local.sExpr,v.Local.sRow)
				V.local.sVendName.Set(v.Local.sVendName.UCase)
			F.Intrinsic.Control.EndIf
		f.Intrinsic.Control.EndIf
		f.global.xml.next(v.local.sdoc,"set1",V.local.bEOF) 
	F.Intrinsic.Control.loop
	'close node set
	f.global.xml.closeSet(v.local.sdoc,"set1")
	F.global.xml.CloseDocument(v.local.sdoc)'tomas
	
	f.Intrinsic.String.Build("SELECT top 1 ID FROM GAB_5564_AP_HEAD WHERE DOCID='{0}'",v.local.sDocID,v.Local.sSql)
	f.ODBC.Connection!con5564.ExecuteAndReturn(v.Local.sSql,v.Local.sID)
	f.Intrinsic.String.Build("SELECT top 1 INVOICETYPE FROM GAB_5564_AP_HEAD WHERE DOCID='{0}'",v.local.sDocID,v.Local.sSql)
	f.ODBC.Connection!con5564.ExecuteAndReturn(v.Local.sSql,v.Local.sPOType)
	f.Intrinsic.String.Build("SELECT top 1 XREFCHECK FROM GAB_5564_AP_HEAD WHERE DOCID='{0}'",v.local.sDocID,v.Local.sSql)
	f.ODBC.Connection!con5564.ExecuteAndReturn(v.Local.sSql,v.Local.sXrefCheck)
	f.Intrinsic.String.Build("SELECT top 1 DOCSAVEDLOCATION FROM GAB_5564_AP_HEAD WHERE DOCID='{0}'",v.local.sDocID,v.Local.sSql)
	f.ODBC.Connection!con5564.ExecuteAndReturn(v.Local.sSql,v.Local.sDocSaveLocation)
	f.Intrinsic.String.Build("SELECT top 1 VENDCODE FROM GAB_5564_AP_HEAD WHERE DOCID='{0}'",v.local.sDocID,v.Local.sSql)
	f.ODBC.Connection!con5564.ExecuteAndReturn(v.Local.sSql,v.Local.sVendCode)	
	
	f.Intrinsic.Control.If(v.Local.sXrefCheck,=,"True")
		v.Local.sXrefCheck.Set("1")
	f.Intrinsic.Control.Else
		v.Local.sXrefCheck.Set("0")
	f.Intrinsic.Control.EndIf
	
	f.Intrinsic.String.Build("DELETE FROM GAB_5564_AP_HEAD where DOCID ='{0}'",v.local.sDocID,v.Local.sSql)
	f.ODBC.Connection!con5564.Execute(v.Local.sSql) 
	
	'Check if the date is proper
	f.Intrinsic.Date.IsDate(v.Local.sInvcDate,v.Local.bIsDate)
	f.Intrinsic.Control.If(v.Local.bIsDate,=,False)
		v.Local.sInvcDate.Set("1900-01-01")
	f.Intrinsic.Control.EndIf
	
	v.Local.sSql.Set("INSERT INTO GAB_5564_AP_HEAD VALUES ({0},'{1}','{2}','{3}','{4}','{5}','{6}','{7}','{8}','{9}','{10}','{11}','{12}','{13}','{14}','{15}','{16}','{17}','{18}','{19}','{20}','{21}','{22}')")					
	F.Intrinsic.String.Build(v.Local.sSql,v.Local.sDocID.PSQLFriendly,v.Local.sDocURL.PSQLFriendly,v.Local.sImgURL.PSQLFriendly,v.Local.sVendCode.PSQLFriendly,v.Local.sVendName.PSQLFriendly,v.Local.sInvcNumb.PSQLFriendly,v.Local.sInvcDate.PSQLFriendly,v.Local.sPOHead.PSQLFriendly,v.Local.fSubTotal.PSQLFriendly,0,v.Local.fGSTValue.PSQLFriendly,v.Local.fGrossVal.PSQLFriendly,v.Local.sDwn.PSQLFriendly,v.Local.sNotes.PSQLFriendly,"queue","",v.Local.sDocSaveLocation.PSQLFriendly,v.Local.sXrefCheck,0,0,v.Local.sID.PSQLFriendly,v.Local.sPOType,"1900-10-10",v.Local.sSql)
	f.ODBC.Connection!con5564.Execute(v.Local.sSql)
	
	f.Intrinsic.String.Build("SELECT top 1 VENDNAME FROM GAB_5564_AP_HEAD WHERE DOCID='{0}'",v.local.sDocID,v.Local.sSql)
	f.ODBC.Connection!con5564.ExecuteAndReturn(v.Local.sSql,v.Local.sNVENDNAME)
	f.Intrinsic.String.Build("SELECT top 1 INVCNUMB FROM GAB_5564_AP_HEAD WHERE DOCID='{0}'",v.local.sDocID,v.Local.sSql)
	f.ODBC.Connection!con5564.ExecuteAndReturn(v.Local.sSql,v.Local.sNINVCNUMB)
	f.Intrinsic.String.Build("SELECT top 1 INVCDATE FROM GAB_5564_AP_HEAD WHERE DOCID='{0}'",v.local.sDocID,v.Local.sSql)
	f.ODBC.Connection!con5564.ExecuteAndReturn(v.Local.sSql,v.Local.sNINVCDATE)
	f.Intrinsic.String.Build("SELECT top 1 POHEAD FROM GAB_5564_AP_HEAD WHERE DOCID='{0}'",v.local.sDocID,v.Local.sSql)
	f.ODBC.Connection!con5564.ExecuteAndReturn(v.Local.sSql,v.Local.sNPOHEAD)
	f.Intrinsic.String.Build("SELECT top 1 SUBTOTAL FROM GAB_5564_AP_HEAD WHERE DOCID='{0}'",v.local.sDocID,v.Local.sSql)
	f.ODBC.Connection!con5564.ExecuteAndReturn(v.Local.sSql,v.Local.sNSUBTOTAL)
	f.Intrinsic.String.Build("SELECT top 1 GSTTOTAL FROM GAB_5564_AP_HEAD WHERE DOCID='{0}'",v.local.sDocID,v.Local.sSql)
	f.ODBC.Connection!con5564.ExecuteAndReturn(v.Local.sSql,v.Local.sNGSTTOTAL)
	f.Intrinsic.String.Build("SELECT top 1 GRSTOTAL FROM GAB_5564_AP_HEAD WHERE DOCID='{0}'",v.local.sDOCID,v.Local.sSql)
	f.ODBC.Connection!con5564.ExecuteAndReturn(v.Local.sSql,v.Local.sNGRSTOTAL)
	
	gui.frmAPAutomationIndex.txtSupplierName.Text(v.Local.sNVENDNAME)
	gui.frmAPAutomationIndex.txtInvNum.Text(v.Local.sNINVCNUMB)
	F.Intrinsic.String.Replace(V.Local.sNINVCDATE,"12:00:00 am","",V.Local.sNINVCDATE)
	gui.frmAPAutomationIndex.txtInvdate.Text(v.Local.sNINVCDATE.Trim)
	gui.frmAPAutomationIndex.txtPORef.Text(v.Local.sNPOHEAD)
	gui.frmAPAutomationIndex.txtSubTotal.Text(v.Local.sNSUBTOTAL)
	gui.frmAPAutomationIndex.txtGTotal.Text(v.Local.sNGRSTOTAL)
	gui.frmAPAutomationIndex.txtGST.Text(v.Local.sNGSTTOTAL)
	
	f.Data.DataTable.SetValue("dtAPInvQueue",v.Global.iRowIndex,"POHEAD",v.Local.sNPOHEAD,"INVCNUMB",v.Local.sNINVCNUMB,"VENDNAME",v.Local.sNVENDNAME,"INVCDATE",v.Local.sNINVCDATE,"SUBTOTAL",v.Local.sNSUBTOTAL,"GSTTOTAL",v.Local.sNGSTTOTAL)

f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	f.Intrinsic.Control.End
f.Intrinsic.Control.endtry
Program.Sub.subPOSTDocumentRedownload.End

Program.Sub.subClearEverything.Start

GUI.frmAPAutomationIndex.txtGrantTotalCheck.Visible(False)
GUI.frmAPAutomationIndex.lblGSTCheck.Visible(False)

gui.frmAPAutomationIndex.txtSupplierName.Text("")
gui.frmAPAutomationIndex.txtInvNum.Text("")
gui.frmAPAutomationIndex.txtInvdate.Text("")
gui.frmAPAutomationIndex.txtPORef.Text("")
gui.frmAPAutomationIndex.txtSubTotal.Text("")
gui.frmAPAutomationIndex.txtGTotal.Text("")
gui.frmAPAutomationIndex.txtNotes.Text("")
gui.frmAPAutomationIndex.txtGST.Text("")
gui.frmAPAutomationIndex.txtDocID.Text("")
gui.frmAPAutomationIndex.txtVendCode.Text("")
f.Intrinsic.Control.CallSub(loadInvoiceDetail,"InvoiceNumber","","PurchaseOrder","","Status","","Vendor","")

GUI.frmAPAutomationIndex.lblGSTCheck.ForeColor(v.Enum.ThemeColors!ColorWhite)
GUI.frmAPAutomationIndex.lblGSTCheck.ForeColor(v.Enum.ThemeColors!ColorWhite)
GUI.frmAPAutomationIndex.txtGrantTotalCheck.ForeColor(v.Enum.ThemeColors!ColorWhite)
gui.frmAPAutomationIndex.lblXRefConnect.ForeColor(v.Enum.ThemeColors!ColorRed)
gui.frmAPAutomationIndex.lblReceivePO.ForeColor(v.Enum.ThemeColors!ColorRed)
gui.frmAPAutomationIndex.lblCreateVendor.ForeColor(v.Enum.ThemeColors!ColorRed)
gui.frmAPAutomationIndex.lblCreatePO.ForeColor(v.Enum.ThemeColors!ColorRed)
gui.frmAPAutomationIndex.lblPOVendor.ForeColor(v.Enum.ThemeColors!ColorRed)

Program.Sub.subClearEverything.End

Program.Sub.archiveDocument.Start
f.Intrinsic.Control.Try 'takes invoice from XXtr and archives it on XXtr.
	v.Local.skey.Declare
	v.Local.sret.Declare
	v.Local.sfile.Declare
	v.Local.sAPIKeyFile.Declare
	v.Local.sAPIKey.Declare
	V.Local.sWorkFlowID.Declare
	
	f.Intrinsic.String.Concat(v.Caller.GasDir,"\",v.Caller.CompanyCode,"_GAB_5564_AP_AUTOMATION_ADMIN_SETTINGS.txt",v.Local.sAPIKeyFile)
	f.Intrinsic.File.File2String(v.Local.sAPIKeyFile,v.Local.sAPIKeyFile)
	f.Intrinsic.String.Split(v.Local.sAPIKeyFile,v.Ambient.NewLine,v.Local.sAPIKey)
	f.Intrinsic.String.Build("{{0}api_key{0} : {0}{2}{0}, {0}document_id{0} : {0}{1}{0}, {0}api_download_status{0} : {0}archived{0}  }",v.Ambient.DblQuote,v.Args.DocID,v.Local.sAPIKey(0),v.Local.sKey)
	F.Communication.REST.SetProperty("ContentType","application/json")
	f.Communication.REST.SetProperty("PostData",v.Local.sKey)
	F.Communication.REST.Post("https://api-app.xtracta.com/v1/documents/update")
	f.Communication.REST.ReadProperty("TransferredData",V.Local.sret)

f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	f.ODBC.Connection!con5564.Close
	f.Intrinsic.Control.End
f.Intrinsic.Control.EndTry
Program.Sub.archiveDocument.End

Program.Sub.disableAll.Start
f.Intrinsic.Control.Try
	gui.frmAPAutomationIndex..Enabled(false)
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	f.ODBC.Connection!con5564.Close
	f.Intrinsic.Control.End
f.Intrinsic.Control.EndTry
Program.Sub.disableAll.End

Program.Sub.enableAll.Start
f.Intrinsic.Control.Try
	gui.frmAPAutomationIndex..Enabled(true)
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	f.ODBC.Connection!con5564.Close
	f.Intrinsic.Control.End
f.Intrinsic.Control.EndTry
Program.Sub.enableAll.End

Program.Sub.subDownloadAPInvoices.Start
f.Intrinsic.Control.Try
	'C:\Apps\Global\PLUGINS\APInvoices
	'Download invoice, saving to network.
	'while saving to netowrk - checking if company directry is already made.if directory not made, MAKE it. If is made put the file in it. 
	'file name DOCID-invoicenumber.file
	v.Local.sFilePath.Declare 'location of where the file should be kept as well as the file name
	v.Local.bExists.Declare 'bool
	v.Local.bVendorCheck.Declare
	v.Local.sCompanyDirectory.Declare ' location path to where the company file is
	v.Local.sVendorNo.Declare
	v.Local.sVendorNo.Set(v.Args.VendorNo)
	v.Local.sDocURL.Declare
	v.Local.sDocURL.Set(v.Args.DocURL)
	v.Local.sDocID.Declare
	v.Local.sDocID.Set(v.Args.DocID)
	v.Local.sPOHead.Declare
	v.Local.sPOHead.Set("pre")
	v.Local.ssql.Declare
	v.Local.sSearch.Declare
	v.Local.iRet.Declare
	v.Local.sRowID.Declare
	v.Local.sRowID.Set(v.Args.RowID)
	v.Local.bTempFolder.Declare
	v.Local.sTempCompanyDirectory.Declare 'path where files will go if no company is defined
	v.Local.bXRefChecked.Declare
	v.Local.sTaxCode.Declare
	v.Local.sFileName.Declare
	v.Local.sFileName.Set(V.Args.Filename)
	f.Intrinsic.String.Replace(v.Local.sFileName,"#","",v.Local.sFileName)
	
	''f.Intrinsic.Debug.ShowCallerInfo
	'Get row
	f.Intrinsic.String.Build("RowID={0}",v.Local.sRowID,v.Local.sSearch)
	f.Data.DataTable.Select("dtApp",v.Local.sSearch,v.Local.iRet)
	'F.Data.Datatable.DeleteRow("dtApp",v.Local.iRet)
	f.Intrinsic.String.RTrim(v.Local.sVendorNo, v.Local.sVendorNo)




	v.Local.sPOHead.Set(v.Args.POHead)

	'error checking.

	'f.Intrinsic.Control.CallSub(CheckXrefVendors,"VendorNo",v.Local.sVendorNo)
	'f.Intrinsic.Control.CallSub(CheckXrefVendorExist,"VendorNo",v.Local.sVendorNo, "DocID", v.Local.sDocID, "RowID", v.Local.sRowID)
	'f.Intrinsic.Control.CallSub(CheckGSSVendorExist,"VendorNo",v.Local.sVendorNo)
	'CheckPONumberExist calls CheckPOreceiverExist only if the PONumber already Exists.
	'f.Intrinsic.Control.CallSub(CheckPONumberExist, "POHead", v.Local.sPOHead)
	f.Intrinsic.String.Concat(v.Caller.PluginsDir,"\APInvoices\",v.Local.sVendorNo,"\",v.Local.sFileName,".pdf",v.Local.sFilePath) 'creating the path to where the company directory will be kept
	''f.Intrinsic.Debug.ShowCallerInfo
	f.Intrinsic.String.Concat(v.Caller.PluginsDir,"\APInvoices\",v.Local.sVendorNo,v.Local.sCompanyDirectory) 'creating a string that should be the company file path
	f.Intrinsic.File.DirExists(v.Local.sCompanyDirectory,v.Local.bExists) 
	f.Intrinsic.String.Concat(v.Caller.PluginsDir,"\APInvoices\TempHolder",v.Local.sTempCompanyDirectory) 'creating a string that should be the company file path if there is no xref for the po
	f.Intrinsic.File.DirExists(v.Local.sTempCompanyDirectory, v.Local.bTempFolder)
	' checking in dir if file exists
	'below is checking if the directory is already there checking what state(bool) bExists is in
	F.Intrinsic.Control.If(V.Local.bExists,=,False)
		'if there is no directory made for the company Create Directory
		f.Intrinsic.File.CreateDir(v.Local.sCompanyDirectory)
	F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.If(V.Local.bTempFolder,=,False)
		f.Intrinsic.File.CreateDir(v.Local.sTempCompanyDirectory)
		'if there is no directory made for the non xref PO's Create Directory
		
		
		
		f.Intrinsic.File.CreateDir(v.Local.sCompanyDirectory)
	F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.If(V.Local.sVendorNo.Trim,=,"")
		f.Intrinsic.String.Concat(v.Caller.PluginsDir,"\APInvoices\TempHolder\",v.Local.sFileName,".pdf",v.Local.sFilePath) 'creating the path to where the company directory will be kept
	F.Intrinsic.Control.EndIf
	'(website link , where to save file to)
	'v.Global.sPDFLocation.Set(v.Local.sFilePath)
	f.Intrinsic.Control.Try
		f.Communication.HTTP.DownloadFile(v.Local.sDocURL,v.Local.sFilePath)
	f.Intrinsic.Control.Catch
		f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	f.Intrinsic.Control.EndTry
	'Set the data values in the datatable
	'Add supplier name to subroutine below 
	f.Intrinsic.Control.CallSub(CheckXrefVendorExist, "VendorNo", v.Local.sVendorNo,"SupplierName",v.Args.SupplierName)
	''f.Intrinsic.Debug.ShowCallerInfo
	f.Intrinsic.Variable.ArgToVar("rVendorCheck",v.Local.bXRefChecked)
	f.Intrinsic.Variable.ArgToVar("rTaxCode",v.Local.sTaxCode)
	
	
'	f.Intrinsic.Control.If(v.Local.bXRefChecked,"=","True")
'		v.Global.sXRefChecked.Set("1")
'	f.Intrinsic.Control.Else
'		v.Global.sXRefChecked.Set("0")
'	f.Intrinsic.Control.EndIf
'	v.Global.sTaxCodeSet.Set(v.Local.sTaxCode)
	f.Data.DataTable.SetValue("dtApp",v.Local.iRet, "DocSavedLocation",v.local.sFilePath, "XRefCheck",v.Local.bXRefChecked, "TaxCode",v.Local.sTaxCode)
	f.Intrinsic.Variable.AddRV("rPDFFile",v.Local.sFilePath)
	f.Intrinsic.Variable.AddRV("rXrefCheck",v.Local.bXRefChecked)
	f.Intrinsic.Variable.AddRV("rTaxCode",v.Local.sTaxCode)
	
	''f.Intrinsic.Debug.ShowCallerInfo
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	f.ODBC.Connection!con5564.Close
	f.Intrinsic.Control.End
f.Intrinsic.Control.EndTry
Program.Sub.subDownloadAPInvoices.End

Program.Sub.MassDeArchive.Start
f.Intrinsic.Control.Try
	v.Local.i.Declare
	
	f.Data.DataTable.CreateFromSQL("dtDocIDs","con5564","select distinct left(rowid,9) as 'docid' from GAB_5564_AP_LINES")
	f.Intrinsic.Control.For(v.Local.i,0,v.DataTable.dtDocIDs.RowCount--)
		f.Intrinsic.Control.CallSub(dearchiveDocument,"DocID",v.DataTable.dtDocIDs(v.Local.i).DocId!fieldval)
	f.Intrinsic.Control.Next(v.Local.i)
f.Intrinsic.Control.Catch

f.Intrinsic.Control.EndTry
Program.Sub.MassDearchive.End

Program.Sub.dearchiveDocument.Start
f.Intrinsic.Control.Try
	v.Local.skey.Declare
	v.Local.sret.Declare
	v.Local.sfile.Declare
	v.Local.sAPIKeyFile.Declare
	v.Local.sAPIKey.Declare
	V.Local.sWorkFlowID.Declare
	
	f.Intrinsic.String.Concat(v.Caller.GasDir,"\",v.Caller.CompanyCode,"_GAB_5564_AP_AUTOMATION_ADMIN_SETTINGS.txt",v.Local.sAPIKeyFile)
	f.Intrinsic.String.Split(v.Local.sAPIKey,v.Ambient.NewLine,v.Local.sAPIKey)
	f.Intrinsic.String.Split(v.Local.sAPIKeyFile,v.Ambient.NewLine,v.Local.sAPIKey)
	
	
	
	f.Intrinsic.String.Build("{{0}api_key{0} : {0}{2}{0}, {0}document_id{0} : {0}{1}{0}, {0}api_download_status{0} : {0}active{0}  }",v.Ambient.DblQuote,v.Args.DocID,v.Global.sAPIKey,v.Local.sKey)
	F.Communication.REST.SetProperty("ContentType","application/json")
	f.Communication.REST.SetProperty("PostData",v.Local.sKey)
	F.Communication.REST.Post("https://api-app.xtracta.com/v1/documents/update")
	f.Communication.REST.ReadProperty("TransferredData",V.Local.sret)

f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	f.ODBC.Connection!con5564.Close
	f.Intrinsic.Control.End
f.Intrinsic.Control.EndTry
Program.Sub.dearchiveDocument.End

Program.Sub.lookupGL_SelectionMade.Start
gui.frmAPAutomationIndex.txtEGLAccount.Text(v.DataTable.lookupGL_Result(0).ACCOUNT!FIELDVALTRIM)
Program.Sub.lookupGL_SelectionMade.End

Program.Sub.InvoiceTypeInvoiceQuickDetails_show.Start

Program.Sub.InvoiceTypeInvoiceQuickDetails_show.End

Program.Sub.InvoiceTypeInvoice.Start
'Invoice 
f.Intrinsic.Control.Try
	'v.Global.sInvoiceType.Set("i")	
	'f.Intrinsic.Control.CallSub(InvoiceTypeInvoiceQuickDetails_show)
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	f.Intrinsic.Control.End
f.Intrinsic.Control.endtry
Program.Sub.InvoiceTypeInvoice.End

Program.Sub.InvoiceTypeAccrual.Start
'Accrual Invoice
f.Intrinsic.Control.Try
	'v.Global.sInvoiceType.Set("a")
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	f.Intrinsic.Control.End
f.Intrinsic.Control.endtry
Program.Sub.InvoiceTypeAccrual.End

Program.Sub.InvoiceTypeCreditNote.Start
'Credit note
f.Intrinsic.Control.Try
	'v.Global.sInvoiceType.Set("c")
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	f.Intrinsic.Control.End
f.Intrinsic.Control.endtry
Program.Sub.InvoiceTypeCreditNote.End

Program.Sub.HideInvoiceNotifications.Start
f.Intrinsic.Control.Try
	gui.frmAPAutomationIndex.lblXRefConnect.Visible(false)
	gui.frmAPAutomationIndex.lblCreateVendor.Visible(false)
	gui.frmAPAutomationIndex.lblCreatePO.Visible(false)
	gui.frmAPAutomationIndex.lblPOVendor.Visible(false)
	gui.frmAPAutomationIndex.lblReceivePO.Visible(false)
	gui.frmAPAutomationIndex.lblInvoiceExists.Visible(false)
	gui.frmAPAutomationIndex.lblGSTCheck.Visible(flase)
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	f.Intrinsic.Control.CallSub(unload)
f.Intrinsic.Control.EndTry
Program.Sub.HideInvoiceNotifications.End

Program.Sub.ShowInvoiceNotifications.Start
f.Intrinsic.Control.Try
	gui.frmAPAutomationIndex.lblXRefConnect.Visible(true)
	gui.frmAPAutomationIndex.lblCreateVendor.Visible(true)
	gui.frmAPAutomationIndex.lblCreatePO.Visible(true)
	gui.frmAPAutomationIndex.lblPOVendor.Visible(true)
	gui.frmAPAutomationIndex.lblReceivePO.Visible(true)
	gui.frmAPAutomationIndex.lblInvoiceExists.Visible(true)
	gui.frmAPAutomationIndex.lblGSTCheck.Visible(true)
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	f.Intrinsic.Control.CallSub(unload)
f.Intrinsic.Control.EndTry
Program.Sub.ShowInvoiceNotifications.End

Program.Sub.DisableInput.Start
f.Intrinsic.Control.Try
	GUI.frmAPAutomationIndex.cmdLearn.Enabled(False)
	GUI.frmAPAutomationIndex.cmdPOShowNegative.Enabled(False)
	gui.frmAPAutomationIndex.cmdEAddLine.Enabled(false)
	gui.frmAPAutomationIndex.cmdEGLAccount.Enabled(false)
	gui.frmAPAutomationIndex.cmdEPart.Enabled(false)
	gui.frmAPAutomationIndex.cmdETaxCode.Enabled(false)
	gui.frmAPAutomationIndex.cmdEVarBrowse.Enabled(false)
	gui.frmAPAutomationIndex.cmdEVAT.Enabled(false)
	gui.frmAPAutomationIndex.cmdEWO.Enabled(false)
	gui.frmAPAutomationIndex.cmdSupplierXRefSearch.Enabled(false)
	gui.frmAPAutomationIndex.chkETaxable.Enabled(false)
	gui.frmAPAutomationIndex.txtSupplierName.Enabled(false)
	gui.frmAPAutomationIndex.txtInvNum.Enabled(false)
	gui.frmAPAutomationIndex.txtInvdate.Enabled(false)
	gui.frmAPAutomationIndex.txtPORef.Enabled(false)
	gui.frmAPAutomationIndex.txtSubTotal.Enabled(false)
	gui.frmAPAutomationIndex.txtGST.Enabled(false)
	gui.frmAPAutomationIndex.txtGTotal.Enabled(false)
	Gui.frmAPAutomationIndex.optCreditNote.Enabled(False)
	Gui.frmAPAutomationIndex.optInvoice.Enabled(False)
	Gui.frmAPAutomationIndex.optAccrual.Enabled(False)
	gui.frmAPAutomationIndex.txtEDesc.Enabled(false)
	gui.frmAPAutomationIndex.txtEGLAccount.Enabled(false)
	gui.frmAPAutomationIndex.txtELoc.Enabled(false)
	gui.frmAPAutomationIndex.txtEPart.Enabled(false)
	gui.frmAPAutomationIndex.txtEQty.Enabled(false)
	gui.frmAPAutomationIndex.txtESeq.Enabled(false)
	gui.frmAPAutomationIndex.txtESuffix.Enabled(false)
	gui.frmAPAutomationIndex.txtETaxAmt.Enabled(false)
	gui.frmAPAutomationIndex.txtETaxCode.Enabled(false)
	gui.frmAPAutomationIndex.txtEVarianceAcct.Enabled(false)
	gui.frmAPAutomationIndex.txtEVarianceAmt.Enabled(false)
	gui.frmAPAutomationIndex.txtEVat.Enabled(false)
	gui.frmAPAutomationIndex.txtEWO.Enabled(false)
	gui.frmAPAutomationIndex.gsgcRecLineItems.enabled(false)
	Gui.frmAPAutomationIndex.txtNotes.Enabled(False)
	Gui.frmAPAutomationIndex.cmdEVarAdd.Enabled(False)
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	f.Intrinsic.Control.CallSub(unload)
f.Intrinsic.Control.EndTry
Program.Sub.DisableInput.End

Program.Sub.EnableInput.Start
f.Intrinsic.Control.Try	
	GUI.frmAPAutomationIndex.cmdLearn.Enabled(true)
	GUI.frmAPAutomationIndex.cmdPOShowNegative.Enabled(true)
	gui.frmAPAutomationIndex.cmdEAddLine.Enabled(true)
	gui.frmAPAutomationIndex.cmdEGLAccount.Enabled(true)
	gui.frmAPAutomationIndex.cmdEPart.Enabled(true)
	gui.frmAPAutomationIndex.cmdETaxCode.Enabled(true)
	gui.frmAPAutomationIndex.cmdEVarBrowse.Enabled(true)
	gui.frmAPAutomationIndex.cmdEVAT.Enabled(true)
	gui.frmAPAutomationIndex.cmdEWO.Enabled(true)
	'gui.frmAPAutomationIndex.cmdSupplierXRefSearch.Enabled(true) needs to be done in subRowCellclick
	gui.frmAPAutomationIndex.chkETaxable.Enabled(true)
	gui.frmAPAutomationIndex.txtSupplierName.Enabled(true)
	gui.frmAPAutomationIndex.txtInvNum.Enabled(true)
	gui.frmAPAutomationIndex.txtInvdate.Enabled(true)
	gui.frmAPAutomationIndex.txtPORef.Enabled(true)
	gui.frmAPAutomationIndex.txtSubTotal.Enabled(true)
	gui.frmAPAutomationIndex.txtGST.Enabled(true)
	Gui.frmAPAutomationIndex.optCreditNote.Enabled(true)
	Gui.frmAPAutomationIndex.optInvoice.Enabled(true)
	Gui.frmAPAutomationIndex.optAccrual.Enabled(true)
	Gui.frmAPAutomationIndex.cmdSave.Enabled(true)
	Gui.frmAPAutomationIndex.cmdReject.Enabled(true)
	gui.frmAPAutomationIndex.txtEDesc.Enabled(true)
	gui.frmAPAutomationIndex.txtEGLAccount.Enabled(true)
	gui.frmAPAutomationIndex.txtELoc.Enabled(true)
	gui.frmAPAutomationIndex.txtEPart.Enabled(true)
	gui.frmAPAutomationIndex.txtEQty.Enabled(true)
	gui.frmAPAutomationIndex.txtESeq.Enabled(true)
	gui.frmAPAutomationIndex.txtESuffix.Enabled(true)
	gui.frmAPAutomationIndex.txtETaxAmt.Enabled(true)
	gui.frmAPAutomationIndex.txtETaxCode.Enabled(true)
	gui.frmAPAutomationIndex.txtEVarianceAcct.Enabled(true)
	gui.frmAPAutomationIndex.txtEVat.Enabled(true)
	gui.frmAPAutomationIndex.txtEWO.Enabled(true)
	gui.frmAPAutomationIndex.gsgcRecLineItems.enabled(true)
	Gui.frmAPAutomationIndex.txtNotes.Enabled(true)
	Gui.frmAPAutomationIndex.cmdEVarAdd.Enabled(True)
	
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	f.Intrinsic.Control.CallSub(unload)
f.Intrinsic.Control.EndTry
Program.Sub.EnableInput.End

Program.Sub.createDocumentLink.Start
f.Intrinsic.Control.Try
	V.Local.sLink.Declare
	v.Local.iLink.Declare
	v.Local.iFiEx.Declare
	v.Local.sVendorInvoice.Declare
	v.Local.sSql.Declare
	v.Local.sFTyp.Declare
	v.Local.sTmpF.Declare
	v.Local.sNewDir.Declare
	V.Local.sLinkCheck.Declare
	F.Intrinsic.File.GetPathFromFQN(V.Args.FilePath,v.Local.sNewDir)
	f.Intrinsic.File.GetFileNameFromFQN(v.Args.filepath,v.Local.sTmpF)
	
	f.Intrinsic.String.Concat(v.Args.Vendor,v.Args.Invoice,v.Local.sVendorInvoice)
	
	'Check if it exists
	f.Intrinsic.String.Build("select link_id from LINK_DATA WHERE TYPE='00011' AND ID='{0}'",v.Local.sVendorInvoice,v.Local.sSql)
	f.ODBC.Connection!con5564.executeandreturn(v.Local.sSql,v.Local.sLink)
	f.Intrinsic.Control.If(v.Local.sLink.Trim,=,"")
		'Create the link
		F.ODBC.Connection!con5564.ExecuteAndReturn("SELECT ifnull(MAX(LINK_ID),0) AS 'LinkID' FROM LINK_DATA",v.Local.sLink)
		f.Intrinsic.Math.ConvertToLong(v.Local.sLink,v.Local.iLink)
		f.Intrinsic.Math.Add(v.Local.iLink,1,v.Local.iLink)
		f.Intrinsic.string.LPad(v.Local.iLink,"0",9,v.Local.sLink)
		f.Intrinsic.String.Build("INSERT INTO LINK_DATA (LINK_ID,TYPE,ID) VALUES('{0}','{1}','{2}')",v.Local.sLink,"00011",v.Local.sVendorInvoice,v.Local.ssql)
		f.ODBC.Connection!con5564.execute(v.Local.ssql)
		
		'Create the association for the Vendor Invoice
		f.Intrinsic.String.InstrRev(v.Args.FilePath,".",v.Local.iFiEx)
		f.Intrinsic.String.Mid(v.Args.FilePath,v.Local.iFiEx,v.Local.sFTyp)
		f.Intrinsic.String.Replace(v.Local.sFTyp,".","",v.Local.sFTyp)
		v.Local.ssql.Set("INSERT INTO ATG_DOC_ASSOC VALUES ('','{0}','{1}','{2}','{3}','{4}','{5}','{6}','{7}','','','','',0)")
		F.Intrinsic.String.Build(V.Local.SSQL,v.local.iLink,v.Local.sFTyp.UCase,v.Local.sNewDir,v.Local.sTmpF,"AP Invoice",v.Ambient.Now.PervasiveDate,v.Caller.User,v.Global.sDocumentGroup,v.Local.ssql)
		f.ODBC.Connection!con5564.execute(v.Local.ssql)
	f.Intrinsic.Control.Else
		'REference the link, will likely delete this.
		f.Intrinsic.Math.ConvertToLong(v.Local.sLink,v.Local.iLink)
		f.Intrinsic.Math.Add(v.Local.iLink,1,v.Local.iLink)
		f.Intrinsic.string.LPad(v.Local.iLink,"0",9,v.Local.sLink)
	f.Intrinsic.Control.EndIf

f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	f.ODBC.Connection!con5564.Close
	f.Intrinsic.Control.End
f.Intrinsic.Control.EndTry
Program.Sub.createDocumentLink.End

Program.Sub.tabs_Click.Start
v.Local.sValue.Declare
v.Local.sValue.Set(v.Screen.frmAPAutomationIndex!tabs.tab)

'THE ISSUE IS HERE
f.Intrinsic.Control.if(v.Local.sValue,=,"0")
	f.Intrinsic.Control.CallSub(loadQueues,"Grid","queue")
	gui.frmAPAutomationIndex.cmdSave.Visible(true)
	gui.frmAPAutomationIndex.cmdSaveApprove.Visible(true)
	gui.frmAPAutomationIndex.cmdQueue.Visible(false)
	gui.frmAPAutomationIndex.cmdReject.Visible(true)
	Gui.frmAPAutomationIndex.cmdSkipNext.Visible(True)
f.Intrinsic.Control.ElseIf(v.Local.sValue,=,"1")
	f.Intrinsic.Control.CallSub(loadQueues,"Grid","save")
	gui.frmAPAutomationIndex.cmdSave.Visible(false)
	gui.frmAPAutomationIndex.cmdSaveApprove.Visible(true)
	gui.frmAPAutomationIndex.cmdQueue.Visible(True)
	Gui.frmAPAutomationIndex.cmdSkipNext.Visible(False)
	
	gui.frmAPAutomationIndex.cmdReject.Visible(true)
f.Intrinsic.Control.ElseIf(v.Local.sValue,=,"2")
	f.Intrinsic.Control.CallSub(loadQueues,"Grid","approve")
	gui.frmAPAutomationIndex.cmdSave.Visible(false)
	gui.frmAPAutomationIndex.cmdSaveApprove.Visible(false)
	gui.frmAPAutomationIndex.cmdQueue.Visible(True)
	Gui.frmAPAutomationIndex.cmdSkipNext.Visible(False)
	gui.frmAPAutomationIndex.cmdReject.Visible(true)
f.Intrinsic.Control.ElseIf(v.Local.sValue,=,"3")
	f.Intrinsic.Control.CallSub(loadQueues,"Grid","process")
	gui.frmAPAutomationIndex.cmdSave.Visible(false)
	gui.frmAPAutomationIndex.cmdSaveApprove.Visible(false)
	gui.frmAPAutomationIndex.cmdQueue.Visible(false)
	gui.frmAPAutomationIndex.cmdReject.Visible(false)
	Gui.frmAPAutomationIndex.cmdSkipNext.Visible(False)
f.Intrinsic.Control.ElseIf(v.Local.sValue,=,"4")
	f.Intrinsic.Control.CallSub(loadQueues,"Grid","reject")
	gui.frmAPAutomationIndex.cmdSave.Visible(false)
	gui.frmAPAutomationIndex.cmdSaveApprove.Visible(false)
	gui.frmAPAutomationIndex.cmdQueue.Visible(True)
	Gui.frmAPAutomationIndex.cmdSkipNext.Visible(False)
	gui.frmAPAutomationIndex.cmdReject.Visible(false)
f.Intrinsic.Control.EndIf

gui.frmAPAutomationIndex.txtSupplierName.Text("")
gui.frmAPAutomationIndex.txtInvNum.Text("")
gui.frmAPAutomationIndex.txtInvdate.Text("")
gui.frmAPAutomationIndex.txtPORef.Text("")
gui.frmAPAutomationIndex.txtSubTotal.Text("")
gui.frmAPAutomationIndex.txtGTotal.Text("")
gui.frmAPAutomationIndex.txtGST.Text("")
gui.frmAPAutomationIndex.txtDocID.Text("")
gui.frmAPAutomationIndex.txtVendCode.Text("")
f.Intrinsic.Control.CallSub(loadInvoiceDetail,"InvoiceNumber","","PurchaseOrder","","Status","","Vendor","")

gui.frmAPAutomationIndex.lblXRefConnect.ForeColor(v.Enum.ThemeColors!ColorRed)
gui.frmAPAutomationIndex.lblReceivePO.ForeColor(v.Enum.ThemeColors!ColorRed)
gui.frmAPAutomationIndex.lblCreateVendor.ForeColor(v.Enum.ThemeColors!ColorRed)
gui.frmAPAutomationIndex.lblCreatePO.ForeColor(v.Enum.ThemeColors!ColorRed)
gui.frmAPAutomationIndex.lblPOVendor.ForeColor(v.Enum.ThemeColors!ColorRed)

v.Global.iQueueListDataTableStartSize.Set(0)
v.Global.iSaveListDataTableStartSize.Set(0)
Program.Sub.tabs_Click.End

#Region "GridControl Events"

'This RCC is shaired by multiple tabs
Program.Sub.subRowCellClick.Start
f.Intrinsic.Control.Try
	v.Local.ssql.Declare
	v.Local.iRowCount.Declare
	v.Local.iCount.Declare
	v.Local.inumbercountdown.Declare
	v.Local.iRowIndex.Declare
	v.Local.bLineFound.Declare
	v.Local.bProcessClick.Declare
	v.Local.stest.Declare
	v.Local.sDataTable.Declare
	v.Local.sGridControl.Declare
	v.Local.sGridView.Declare
	v.Local.iSize.Declare
	
	v.Local.sGridControl.Set(v.Args.GridControl)
	v.Local.sGridView.Set(v.Args.GridView)
	v.Local.sDataTable.Set(v.Args.DataTable)
	v.local.iRowIndex.Set(v.Args.MyRowIndex)
	v.Local.bProcessClick.Set(v.Args.ProcessClick)
	
	f.Intrinsic.Control.SelectCase(v.Args.Status)
		f.Intrinsic.Control.Case("Queue")
			v.Local.iSize.Set(v.Global.iQueueListDataTableStartSize)
		f.Intrinsic.Control.Case("Save")
			v.Local.iSize.Set(v.Global.iSaveListDataTableStartSize)
		f.Intrinsic.Control.Case("Reject")
			v.Local.iSize.Set(v.Global.iRejectListDataTableStartSize)
	f.Intrinsic.Control.EndSelect
	
	f.Intrinsic.Control.If(v.Local.iSize,=,0)
		v.local.iSize.Set(v.DataTable.[v.Local.sDataTable].RowCount)
		f.Intrinsic.Math.Sub(v.local.iSize,1,v.local.iSize)
	f.Intrinsic.Control.EndIf
	
	v.Local.iRowCount.Set(v.DataTable.[v.Local.sDataTable].RowCount)

	f.Intrinsic.Control.If(v.local.bProcessClick)
		'changing it to be correct index 0-x
		f.Intrinsic.Math.Sub(v.Local.iRowCount,2,v.Local.iRowCount)
		'changing it to substract the amount of po already prosessed so ensure we know how many are left in correct index form 0-x
		f.Intrinsic.Math.Sub(v.Local.iRowCount,v.Global.iPOClicks,v.Local.iRowCount)
		'checking if there is any more PO's in queue
		f.Intrinsic.Control.If(v.Local.iRowCount,=,-1)
			v.Local.stest.Set("do nothing")
		f.Intrinsic.Control.Else
			'top down
			f.Intrinsic.Control.If(v.local.iRowIndex,<=,v.local.iSize)
				F.Intrinsic.Control.For(v.Local.iCount,v.local.iRowIndex,v.local.iSize)
					v.Local.stest.Set("-->")
					F.Intrinsic.Control.if(V.DataTable.[v.Local.sDataTable](v.local.iRowIndex).RowState,!=,8)
						v.Local.bLineFound.Set(True)
						F.Intrinsic.Control.ExitFor(v.Local.iCount)
					F.Intrinsic.Control.EndIf
					F.Intrinsic.Math.Add(v.local.iRowIndex,1, v.local.iRowIndex)
				F.Intrinsic.Control.Next(v.Local.iCount)
				'Bottom Up
				f.Intrinsic.Control.If(v.Local.bLineFound,=,False)
					F.Intrinsic.Control.For(v.Local.iCount,0,v.local.iRowIndex)
						v.Local.stest.Set("<--")
						f.Intrinsic.Math.Sub(v.local.iRowIndex,v.Local.iCount,v.Local.inumbercountdown)
						f.Intrinsic.Math.Sub(v.Local.inumbercountdown,1,v.Local.inumbercountdown)
						F.Intrinsic.Control.if(V.DataTable.[v.Local.sDataTable](v.Local.inumbercountdown).RowState,!=,8)
						f.Intrinsic.Control.AndIf(v.Local.inumbercountdown,<>,-1)
							v.local.iRowIndex.Set(v.Local.inumbercountdown)
							F.Intrinsic.Control.ExitFor(v.Local.iCount)
						f.Intrinsic.Control.Else
							v.Local.iRowIndex.Set(0)
							f.Intrinsic.Control.ExitFor(v.Local.iCount)
						F.Intrinsic.Control.EndIf
					F.Intrinsic.Control.Next(v.Local.iCount)
				f.Intrinsic.Control.EndIf
			f.Intrinsic.Control.EndIf
		f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.EndIf

	gui.frmAPAutomationIndex.txtSupplierName.Text("")
	gui.frmAPAutomationIndex.txtInvNum.Text("")
	gui.frmAPAutomationIndex.txtInvdate.Text("")
	gui.frmAPAutomationIndex.txtPORef.Text("")
	gui.frmAPAutomationIndex.txtSubTotal.Text("")
	gui.frmAPAutomationIndex.txtGTotal.Text("")
	gui.frmAPAutomationIndex.txtGST.Text("")
	gui.frmAPAutomationIndex.txtDocID.Text("")
	gui.frmAPAutomationIndex.txtVendCode.Text("")

	v.Local.sLink.Declare
	v.Local.sSupplierName.Declare
	v.Local.sInvoiceNumber.Declare
	v.Local.sInvoiceDate.Declare
	v.Local.sPORefrence.Declare
	v.Local.fSubTotal.Declare
	v.Local.fGradeTotal.Declare
	v.Local.fGSTTotal.Declare
	v.Local.sDOCID.Declare
	v.Local.sVendCode.Declare
	v.Local.sNOTES.Declare
	v.Local.sCurrency.Declare

	'GUI.frmAPAutomationIndex.gsgcQueue.GetCellValueByColumnName("gvAPInvQueue","NOTES",v.local.iRowIndex,v.Local.sNOTES)
	GUI.frmAPAutomationIndex.[v.Local.sGridControl].GetCellValueByColumnName(v.Local.sGridView,"VENDNAME",v.local.iRowIndex,v.Local.sSupplierName)
	GUI.frmAPAutomationIndex.[v.Local.sGridControl].GetCellValueByColumnName(v.Local.sGridView,"INVCNUMB",v.local.iRowIndex,v.Local.sInvoiceNumber)
	GUI.frmAPAutomationIndex.[v.Local.sGridControl].GetCellValueByColumnName(v.Local.sGridView,"INVCDATE",v.local.iRowIndex,v.Local.sInvoiceDate)
	GUI.frmAPAutomationIndex.[v.Local.sGridControl].GetCellValueByColumnName(v.Local.sGridView,"POHEAD",v.local.iRowIndex,v.Local.sPORefrence)
	GUI.frmAPAutomationIndex.[v.Local.sGridControl].GetCellValueByColumnName(v.Local.sGridView,"SUBTOTAL",v.local.iRowIndex,v.Local.fSubTotal)
	GUI.frmAPAutomationIndex.[v.Local.sGridControl].GetCellValueByColumnName(v.Local.sGridView,"GRSTOTAL",v.local.iRowIndex,v.Local.fGradeTotal)
	GUI.frmAPAutomationIndex.[v.Local.sGridControl].GetCellValueByColumnName(v.Local.sGridView,"DOCID",v.local.iRowIndex,v.Local.sDOCID)
	GUI.frmAPAutomationIndex.[v.Local.sGridControl].GetCellValueByColumnName(v.Local.sGridView,"GSTTOTAL",v.local.iRowIndex,v.Local.fGSTTotal)
	GUI.frmAPAutomationIndex.[v.Local.sGridControl].GetCellValueByColumnName(v.Local.sGridView,"DocSavedLocation",v.local.iRowIndex,v.Local.sLink)
	GUI.frmAPAutomationIndex.[v.Local.sGridControl].GetCellValueByColumnName(v.Local.sGridView,"VENDCODE",v.local.iRowIndex,v.Local.sVendCode)
	GUI.frmAPAutomationIndex.[v.Local.sGridControl].GetCellValueByColumnName(v.Local.sGridView,"ID",v.local.iRowIndex,v.Global.sID)
	
	'f.Intrinsic.Debug.ShowCallerInfo
	GUI.frmAPAutomationIndex.[v.Local.sGridControl].GetCellValueByColumnName(v.Local.sGridView,"NOTES",v.local.iRowIndex,v.Local.sNOTES)

	f.Intrinsic.String.Build("select DEFAULT_CURRENCY from V_VENDOR_INTL WHERE VENDOR='{0}' ",V.Local.sVendCode,v.Local.ssql)
	f.ODBC.Connection!con5564.ExecuteAndReturn(v.Local.ssql,v.Local.scurrency)
	gui.frmAPAutomationIndex.lblCurrency.Caption(v.Local.sCurrency)


	v.Local.sSubTotal.Declare
	v.Local.sGradeTotal.Declare
	v.Local.sGSTTotal.Declare
	Function.Intrinsic.String.Format(v.Local.fSubTotal,"###0.00", v.Local.sSubTotal)
	Function.Intrinsic.String.Format(v.Local.fGradeTotal,"###0.00", v.Local.sGradeTotal)
	Function.Intrinsic.String.Format(v.Local.fGSTTotal,"###0.00", v.Local.sGSTTotal)

	f.Intrinsic.String.Concat("$",v.local.sSubTotal,v.local.sSubTotal)
	f.Intrinsic.String.Concat("$",v.local.sGradeTotal,v.local.sGradeTotal)
	f.Intrinsic.String.Concat("$",v.local.sGSTTotal,v.local.sGSTTotal)

	gui.frmAPAutomationIndex.lblRowID.Caption(v.Local.iRowIndex)
	gui.frmAPAutomationIndex.txtDocIDCopy.Text(v.Local.sDOCID)
	gui.frmAPAutomationIndex.txtSupplierName.Text(v.Local.sSupplierName)
	gui.frmAPAutomationIndex.txtInvNum.Text(v.Local.sInvoiceNumber)
	v.Local.ddate.Declare
	v.Local.ddate.Set(v.Local.sInvoiceDate)
	f.Intrinsic.String.Replace(v.Local.sInvoiceDate,"12:00:00 am","",v.Local.sInvoiceDate)
	gui.frmAPAutomationIndex.txtInvdate.Text(v.Local.sInvoiceDate)'tomas

	gui.frmAPAutomationIndex.txtPORef.Text(v.Local.sPORefrence)
	gui.frmAPAutomationIndex.txtSubTotal.Text(v.Local.sSubTotal)
	gui.frmAPAutomationIndex.txtGTotal.Text(v.Local.sGradeTotal)
	gui.frmAPAutomationIndex.txtGST.Text(v.Local.sGSTTotal)
	gui.frmAPAutomationIndex.txtDocID.Text(v.Local.sDOCID)
	gui.frmAPAutomationIndex.txtVendCode.Text(v.Local.sVendCode)
	gui.frmAPAutomationIndex.txtEDesc.Text("INVOICE AMT")
	gui.frmAPAutomationIndex.txtETaxAmt.Text(v.Local.sSubTotal)

	GUI.frmAPAutomationIndex.[v.Local.sGridControl].GetCellValueByColumnName(v.Local.sGridView,"NOTES",v.local.iRowIndex,v.Local.sNOTES)
	gui.frmAPAutomationIndex.txtNotes.Text(v.Local.sNOTES)
	
	v.Global.sDOCID.Set(v.Local.sDOCID)
	v.Global.iRowIndex.Set(v.Local.iRowIndex)
	v.Local.bXREFChecking.Declare	
	f.Intrinsic.Control.CallSub(loadInvoiceDetail,"InvoiceNumber",v.Local.sInvoiceNumber,"PurchaseOrder",v.Local.sPORefrence,"Status",v.Args.Status,"Vendor",v.Local.sVendCode)
	
	
	
	
	'F.Intrinsic.Variable.ArgToVar("XREFCheck",v.Local.bXREFChecking)
	'F.Intrinsic.Control.CallSub(calcTaxGrandTotal, "XRef",v.Local.bXREFChecking)
	
	v.Local.stester.Declare
	'f.Intrinsic.Debug.ShowCallerInfo
	f.Intrinsic.Control.SelectCase(v.Args.Status)
		f.Intrinsic.Control.Case("Queue")
			f.Intrinsic.Control.CallSub(ShowInvoiceNotifications)
			f.Intrinsic.Control.CallSub(checkXrefSuppPORec)
			F.Intrinsic.Variable.ArgToVar("XREFCheck",v.Local.bXREFChecking)
			F.Intrinsic.Control.CallSub(calcTaxGrandTotal, "XRef",v.Local.bXREFChecking)
		f.Intrinsic.Control.Case("Save")
			f.Intrinsic.Control.CallSub(HideInvoiceNotifications)
		f.Intrinsic.Control.Case("Reject")
			f.Intrinsic.Control.CallSub(HideInvoiceNotifications)
		f.Intrinsic.Control.Case("approve")
			f.Intrinsic.Control.CallSub(HideInvoiceNotifications)
		f.Intrinsic.Control.Case("Process")
			f.Intrinsic.Control.CallSub(HideInvoiceNotifications)
	f.Intrinsic.Control.EndSelect
	
	'f.Intrinsic.Control.CallSub(checkXrefSuppPORec)
	
	'F.Intrinsic.Control.CallSub(calcVariance)
	Gui.frmAPAutomationIndex.cmdSupplierXRefSearch.Enabled(True) 'full go false if supplier name is empty checked a few lines down
	f.Intrinsic.Control.SelectCase(v.Args.Status)
		f.Intrinsic.Control.Case("save")
			gui.frmAPAutomationIndex.cmdSaveApprove.Visible(true)
			gui.frmAPAutomationIndex.cmdReject.Visible(true)
		f.Intrinsic.Control.Case("Queue")
			f.Intrinsic.Control.If(v.Local.sSupplierName.Trim,=,"")
				Gui.frmAPAutomationIndex.cmdSupplierXRefSearch.Enabled(False)
			f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.EndSelect
	
	f.Intrinsic.Control.CallSub(EnableInput)
	gui.frmAPAutomationIndex.htmlContainer1.loadurl(v.local.sLink)
	
f.Intrinsic.Control.Catch
	'f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.subRowCellclick.End

program.Sub.gsgcRecLineItems_KeyPress.Start
f.Intrinsic.Control.Try
	F.Intrinsic.Control.CallSub(calcVariance)
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	f.ODBC.Connection!con5564.Close
	f.Intrinsic.Control.End
f.Intrinsic.Control.EndTry
Program.Sub.gsgcRecLineItems_KeyPress.End

program.Sub.gsgcRecLineItems_KeyPressEnter.Start
f.Intrinsic.Control.Try
	F.Intrinsic.Control.CallSub(calcVariance)
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	f.ODBC.Connection!con5564.Close
	f.Intrinsic.Control.End
f.Intrinsic.Control.EndTry
Program.Sub.gsgcRecLineItems_KeyPressEnter.End

program.Sub.gsgcRecLineItems_LostFocus.Start
f.Intrinsic.Control.Try
	F.Intrinsic.Control.CallSub(calcVariance)
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	f.ODBC.Connection!con5564.Close
	f.Intrinsic.Control.End
f.Intrinsic.Control.EndTry
Program.Sub.gsgcRecLineItems_LostFocus.End

program.Sub.gsgcRecLineItems_GotFocus.Start
f.Intrinsic.Control.Try
	F.Intrinsic.Control.CallSub(calcVariance)
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	f.ODBC.Connection!con5564.Close
	f.Intrinsic.Control.End
f.Intrinsic.Control.EndTry
program.Sub.gsgcRecLineItems_GotFocus.END

Program.Sub.gsgcRecLineItems_MouseDown.Start
f.Intrinsic.Control.Try
	F.Intrinsic.Control.CallSub(calcVariance)
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	f.ODBC.Connection!con5564.Close
	f.Intrinsic.Control.End
f.Intrinsic.Control.EndTry
Program.Sub.gsgcRecLineItems_MouseDown.End

Program.Sub.gsgcRecLineItems_MouseUp.Start
f.Intrinsic.Control.Try
	F.Intrinsic.Control.CallSub(calcVariance)
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	f.ODBC.Connection!con5564.Close
	f.Intrinsic.Control.End
f.Intrinsic.Control.EndTry
Program.Sub.gsgcRecLineItems_MouseUp.End

Program.Sub.gsgcRecLineItems_CellValueChanged.Start
f.Intrinsic.Control.Try
	F.Intrinsic.Control.CallSub(calcVariance)
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	f.ODBC.Connection!con5564.Close
	f.Intrinsic.Control.End
f.Intrinsic.Control.EndTry
Program.Sub.gsgcRecLineItems_CellValueChanged.End

Program.Sub.gsgcRecLineItems_RowCellClick.Start
f.Intrinsic.Control.Try
	F.Intrinsic.Control.CallSub(calcVariance)
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	f.ODBC.Connection!con5564.Close
	f.Intrinsic.Control.End
f.Intrinsic.Control.EndTry
Program.Sub.gsgcRecLineItems_RowCellClick.End

Program.Sub.gsgcPOLines_RowCellClick.Start
F.Intrinsic.Control.Try
	V.Local.sPO.Declare
	V.Local.sPart.Declare
	V.Local.sLoc.Declare
	V.Local.sParams.Declare
	v.Local.sPath.Declare
	v.Local.bExists.Declare
	v.Local.snothing.Declare
	v.Local.snothing.Set("TEST")
	F.Intrinsic.Control.BlockEvents
	''f.Intrinsic.Debug.ShowCallerInfo
	F.Intrinsic.Control.SelectCase(V.Args.Column)
		'below - what column is being clicked
		F.Intrinsic.Control.CaseAny("RECORD_NO","PURCHASE_ORDER")
			Gui.frmAPAutomationIndex.gsgcPOLines.GetCellValueByColumnName("gvPOLines","PURCHASE_ORDER",V.Args.RowIndex,V.Local.sPO)
			F.Intrinsic.String.Concat("O!*!",V.Local.sPO,"!*!",V.Local.sParams)
			F.Global.General.CallWrapperASync(175200,V.Local.sParams)
		F.Intrinsic.Control.Case("PART")
            'Open Supply and Demand Screen  v.Caller.TempDir vs V.Caller.LocalGSSTempDir
            F.Intrinsic.String.Build("{0}bin\SupplyAndDemand.exe",V.Caller.LocalGSSTempDir,V.Local.sPath)
            F.Intrinsic.File.Exists(V.Local.sPath,V.Local.bExists)
            Gui.frmAPAutomationIndex.gsgcPOLines.GetCellValueByColumnName("gvPOLines","PART",V.Args.RowIndex,V.Local.sPart)
            V.Local.sLoc.Set("")
            'Gui.frmAPAutomationIndex.gsgcPOLines.GetCellValueByColumnName("gvPOLines","LOCATION",V.Args.RowIndex,V.Local.sLoc)
            F.Intrinsic.Control.If(V.Local.bExists)
            	F.Intrinsic.Task.SetEnvironmentVariable("PARTNUMBER",V.Local.sPart)
            	F.Intrinsic.Task.SetEnvironmentVariable("LOCATIONCODE",V.Local.sLoc)
            	F.Intrinsic.Task.LaunchAsync(V.Local.sPath,1,V.Local.sPath)
            F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.EndSelect
	
	
	F.Intrinsic.Control.UnBlockEvents
	
F.Intrinsic.Control.Catch
	'F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	'F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.End 
F.Intrinsic.Control.EndTry	
Program.Sub.gsgcPOLines_RowCellClick.End

Program.Sub.gsgcQueue_RowCellClick.Start
f.Intrinsic.Control.Try

	F.Intrinsic.Control.CallSub(DisableAll)
	f.Intrinsic.Control.CallSub(subRowCellClick,"Datatable","dtAPInvQueue","Status","Queue","Gridview","gvAPInvQueue","GridControl","gsgcQueue","MyRowIndex",v.Args.RowIndex,"ProcessClick","False")
	F.Intrinsic.Control.CallSub(EnableAll)
	f.Intrinsic.Control.CallSub(EnableInput)
f.Intrinsic.Control.Catch	
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.gsgcQueue_RowCellClick.End

Program.Sub.gsgcReject_RowCellClick.Start
f.Intrinsic.Control.Try
	F.Intrinsic.Control.CallSub(DisableAll)
	f.Intrinsic.Control.CallSub(subRowCellClick,"Datatable","dtAPInvReject","Status","Reject","Gridview","gvAPInvRejected","GridControl","gsgcReject","MyRowIndex",v.Args.RowIndex,"ProcessClick","False")
	F.Intrinsic.Control.CallSub(EnableAll)
	f.Intrinsic.Control.CallSub(DisableInput)
f.Intrinsic.Control.Catch	
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.gsgcReject_RowCellClick.End

Program.Sub.gsgcSaved_RowCellClick.Start
f.Intrinsic.Control.Try
	F.Intrinsic.Control.CallSub(DisableAll)
	f.Intrinsic.Control.CallSub(subRowCellClick,"Datatable","dtAPInvSaved","Status","Save","Gridview","gvAPInvSaved","GridControl","gsgcSaved","MyRowIndex",v.Args.RowIndex,"ProcessClick","False")
	F.Intrinsic.Control.CallSub(EnableAll)
	f.Intrinsic.Control.CallSub(DisableInput)
f.Intrinsic.Control.Catch	
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.gsgcSaved_RowCellClick.End

Program.Sub.gsgcApproved_RowCellClick.Start
'population of the approved form once clicked on the left side
f.Intrinsic.Control.Try
	'F.Intrinsic.UI.Msgbox(V.Args.column)
	F.Intrinsic.Control.SelectCase(V.Args.Column.UCase)
	F.Intrinsic.Control.Case("SEL","SELECTION")
		'They clicked the on the select column
	F.Intrinsic.Control.CaseElse
		F.Intrinsic.Control.CallSub(DisableAll)
		
		f.Intrinsic.Control.CallSub(subRowCellClick,"Datatable","dtAPInvApproved","Status","approve","Gridview","gvAPInvApproved","GridControl","gsgcApproved","MyRowIndex",v.Args.RowIndex,"ProcessClick","False")
		F.Intrinsic.Control.CallSub(EnableAll)
		f.Intrinsic.Control.CallSub(DisableInput)
	F.Intrinsic.Control.EndSelect
	

	v.Local.iRowCount.Declare
f.Intrinsic.Control.Catch	
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.gsgcApproved_RowCellClick.End

Program.Sub.gsgcProcessed_RowCellClick.Start
'population of the approved form once clicked on the left side
f.Intrinsic.Control.Try
	F.Intrinsic.Control.CallSub(DisableAll)	
	f.Intrinsic.Control.CallSub(subRowCellClick,"Datatable","dtAPInvProcessed","Status","Process","Gridview","gvAPInvProcessed","GridControl","gsgcProcessed","MyRowIndex",v.Args.RowIndex,"ProcessClick","False")
	F.Intrinsic.Control.CallSub(EnableAll)
	f.Intrinsic.Control.CallSub(DisableInput)
	v.Local.iRowCount.Declare
f.Intrinsic.Control.Catch	
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.gsgcProcessed_RowCellClick.End

Program.Sub.gsWebBrowser_UrlChanged.Start
F.Intrinsic.Math.Add(V.Global.iURLCounter, 1, V.Global.iURLCounter)
F.Intrinsic.Control.If(V.Global.iURLCounter, >=, 3)
	F.Intrinsic.Control.CallSub(FormLearn_Unload)
F.Intrinsic.Control.EndIf
Program.Sub.gsWebBrowser_UrlChanged.End

Program.Sub.FormLearn_Unload.Start
F.Intrinsic.Control.Try

	GUI.Form..Visible(False)
	GUI.frmAPAutomationIndex..SetFocus(1)

	F.Intrinsic.Control.CallSub(subPOSTDocumentRedownload)	
 	F.Intrinsic.Control.CallSub(subRowCellClick,"Datatable","dtAPInvQueue","Status","Queue","Gridview","gvAPInvQueue","GridControl","gsgcQueue","MyRowIndex",V.Global.iRowIndex)
	
	'Enable Controls
	F.Intrinsic.Control.CallSub(EnableAll)
	
	V.Global.iURLCounter.Set(0)

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage, "ErrorNumber", V.Ambient.ErrorNumber, "ErrorDescription", V.Ambient.ErrorDescription, "Subroutine", V.Ambient.CurrentSubroutine, "Task", V.Global.sTask, "WRITE_LOG_FILE", True, "CallBack", "Unload")
F.Intrinsic.Control.EndTry
Program.Sub.FormLearn_Unload.End

#End Region ' GridControl Events

#Region "Cmd Button Events"


Program.Sub.chkMultiPO_Click.Start
f.Intrinsic.Control.Try
	f.Intrinsic.Control.If(v.Screen.frmAPAutomationIndex!chkMultiPO.Value,=,"1")
		gui.frmAPAutomationIndex.txtPORef.Enabled(false)
		gui.frmAPAutomationIndex.txtPORef.Text("MULTIPO")
	f.Intrinsic.Control.Else
		gui.frmAPAutomationIndex.txtPORef.Enabled(true)
		gui.frmAPAutomationIndex.txtPORef.Text("")
	f.Intrinsic.Control.EndIf
	
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.chkMultiPO_Click.End


Program.Sub.cmdEVarBrowse_Click.Start
f.Intrinsic.Control.Try
	V.Local.sSQL.Declare(String)
	V.Local.sCol.Declare(String)
	V.Local.sColW.Declare(String)
	V.Local.sRet.Declare(String)
	V.Local.sSQL.set("Select GL_ACCOUNT, DESCR FROM V_GL_MASTER  where inactive_date='1900-01-01' ORDER BY GL_ACCOUNT")
	'Split Column Names into an array (*!* delimited string)
	F.Intrinsic.String.Split("GL Account*!*Description","*!*",V.Local.sCol)
	'Split Column widths into an array (*!* delimited string)
	F.Intrinsic.String.Split("900*!*2000","*!*",V.Local.sColW)
	F.Intrinsic.UI.Browser("Select a GL Account","con5564",V.Local.sSQL,V.Local.sCol,V.Local.sColW,V.Local.sRet)
	F.Intrinsic.Control.If(V.Local.sRet,<>,"***CANCEL***")
		f.Intrinsic.String.Split(v.Local.sRet,"*!*",v.Local.sRet)
		gui.frmAPAutomationIndex.txtEVarianceAcct.Text(v.Local.sRet(0))
	F.Intrinsic.Control.EndIf
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	f.Intrinsic.Control.CallSub(unload)
f.Intrinsic.Control.EndTry
Program.Sub.cmdEVarBrowse_Click.End

Program.Sub.cmdEGLAccount_Click.Start
f.Intrinsic.Control.Try
	V.Local.sSQL.Declare(String)
	V.Local.sCol.Declare(String)
	V.Local.sColW.Declare(String)
	V.Local.sRet.Declare(String)
	V.Local.sSQL.set("Select GL_ACCOUNT, DESCR FROM V_GL_MASTER where inactive_date='1900-01-01' order by GL_ACCOUNT ")
	'Split Column Names into an array (*!* delimited string)
	F.Intrinsic.String.Split("GL Account*!*Description","*!*",V.Local.sCol)
	'Split Column widths into an array (*!* delimited string)
	F.Intrinsic.String.Split("900*!*2000","*!*",V.Local.sColW)
	F.Intrinsic.UI.Browser("Select a GL Account","con5564",V.Local.sSQL,V.Local.sCol,V.Local.sColW,V.Local.sRet)
	F.Intrinsic.Control.If(V.Local.sRet,<>,"***CANCEL***")
		f.Intrinsic.String.Split(v.Local.sRet,"*!*",v.Local.sRet)
		gui.frmAPAutomationIndex.txtEGLAccount.Text(v.Local.sRet(0))
	F.Intrinsic.Control.EndIf
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	f.Intrinsic.Control.CallSub(unload)
f.Intrinsic.Control.EndTry
Program.Sub.cmdEGLAccount_Click.End

Program.Sub.cmdEPart_Click.Start
f.Intrinsic.Control.Try
	V.Local.sSQL.Declare(String)
	V.Local.sCol.Declare(String)
	V.Local.sColW.Declare(String)
	V.Local.sRet.Declare(String)
	V.Local.sSQL.set("Select PART, Location, DESCRIPTION FROM INVENTORY_MSTR Order by Part")
	'Split Column Names into an array (*!* delimited string)
	F.Intrinsic.String.Split("Part #*!*Location*!*Description","*!*",V.Local.sCol)
	'Split Column widths into an array (*!* delimited string)
	F.Intrinsic.String.Split("2000*!*300*!*3000","*!*",V.Local.sColW)
	F.Intrinsic.UI.Browser("Select a Part","con5564",V.Local.sSQL,V.Local.sCol,V.Local.sColW,V.Local.sRet)
	F.Intrinsic.Control.If(V.Local.sRet,<>,"***CANCEL***")
		f.Intrinsic.String.Split(v.Local.sRet,"*!*",v.Local.sRet)
		gui.frmAPAutomationIndex.txtEPart.Text(v.Local.sRet(0))
		gui.frmAPAutomationIndex.txtELoc.Text(v.Local.sRet(1))
	F.Intrinsic.Control.EndIf
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	f.Intrinsic.Control.CallSub(unload)
f.Intrinsic.Control.EndTry
Program.Sub.cmdEPart_Click.End

Program.Sub.cmdETaxCode_Click.Start
f.Intrinsic.Control.Try
	V.Local.sSQL.Declare(String)
	V.Local.sCol.Declare(String)
	V.Local.sColW.Declare(String)
	V.Local.sRet.Declare(String)
	V.Local.sSQL.set("Select CONCAT(ZONE,AUTH) AS 'TAXCODE', DESCR FROM AR_TAX_TABLES")
	'Split Column Names into an array (*!* delimited string)
	F.Intrinsic.String.Split("Tax Code*!*Description","*!*",V.Local.sCol)
	'Split Column widths into an array (*!* delimited string)
	F.Intrinsic.String.Split("600*!*2000","*!*",V.Local.sColW)
	F.Intrinsic.UI.Browser("Select a Tax Code","con5564",V.Local.sSQL,V.Local.sCol,V.Local.sColW,V.Local.sRet)
	F.Intrinsic.Control.If(V.Local.sRet,<>,"***CANCEL***")
		f.Intrinsic.String.Split(v.Local.sRet,"*!*",v.Local.sRet)
		gui.frmAPAutomationIndex.txtETaxCode.Text(v.Local.sRet(0))
	F.Intrinsic.Control.EndIf
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	f.Intrinsic.Control.CallSub(unload)
f.Intrinsic.Control.EndTry
Program.Sub.cmdETaxCode_Click.End

Program.Sub.cmdEWO_Click.Start
f.Intrinsic.Control.Try
	V.Local.sSQL.Declare(String)
	V.Local.sCol.Declare(String)
	V.Local.sColW.Declare(String)
	V.Local.sRet.Declare(String)
	V.Local.sSQL.set("Select JOB, SUFFIX, SEQ, DESCRIPTION FROM JOB_OPERATIONS WHERE LMO='M' OR LMO='O' ORDER BY JOB,SUFFIX,SEQ")
	'Split Column Names into an array (*!* delimited string)
	F.Intrinsic.String.Split("Job*!*Suffix*!*Sequence*!*Description","*!*",V.Local.sCol)
	'Split Column widths into an array (*!* delimited string)
	F.Intrinsic.String.Split("600*!*300*!*600*!*2000","*!*",V.Local.sColW)
	F.Intrinsic.UI.Browser("Select a Job","con5564",V.Local.sSQL,V.Local.sCol,V.Local.sColW,V.Local.sRet)
	F.Intrinsic.Control.If(V.Local.sRet,<>,"***CANCEL***")
		f.Intrinsic.String.Split(v.Local.sRet,"*!*",v.Local.sRet)
		gui.frmAPAutomationIndex.txtEWO.Text(v.Local.sRet(0))
		gui.frmAPAutomationIndex.txtESuffix.Text(v.Local.sRet(1))
		gui.frmAPAutomationIndex.txtESeq.Text(v.Local.sRet(2))
	F.Intrinsic.Control.EndIf
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	f.Intrinsic.Control.CallSub(unload)
f.Intrinsic.Control.EndTry
Program.Sub.cmdEWO_Click.End

Program.Sub.cmdEVAT_Click.Start
f.Intrinsic.Control.Try
	V.Local.sSQL.Declare(String)
	V.Local.sCol.Declare(String)
	V.Local.sColW.Declare(String)
	V.Local.sRet.Declare(String)
	V.Local.sSQL.set("Select RULE_ID, DESCR FROM VAT_TAX_RULE WHERE INPUT_ACCT=1 OR EXPENSE_ACCT=1")
	'Split Column Names into an array (*!* delimited string)
	F.Intrinsic.String.Split("Rule*!*Description","*!*",V.Local.sCol)
	'Split Column widths into an array (*!* delimited string)
	F.Intrinsic.String.Split("600*!*2000","*!*",V.Local.sColW)
	F.Intrinsic.UI.Browser("Select a Rule","con5564",V.Local.sSQL,V.Local.sCol,V.Local.sColW,V.Local.sRet)
	F.Intrinsic.Control.If(V.Local.sRet,<>,"***CANCEL***")
		f.Intrinsic.String.Split(v.Local.sRet,"*!*",v.Local.sRet)
		gui.frmAPAutomationIndex.txtEVat.Text(v.Local.sRet(0))
	F.Intrinsic.Control.EndIf
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	f.Intrinsic.Control.CallSub(unload)
f.Intrinsic.Control.EndTry
Program.Sub.cmdEVAT_Click.End

Program.Sub.cmdEVarAdd_Click.Start
f.Intrinsic.Control.Try
	v.Local.iVat.Declare
	f.Intrinsic.Control.If(v.Screen.frmAPAutomationIndex!txtEVat.text,=,"")
		v.Local.iVat.Set(1)
	f.Intrinsic.Control.Else
		v.Local.iVat.Set(v.Screen.frmAPAutomationIndex!txtEVat.text)
	f.Intrinsic.Control.EndIf
	
	
	
	v.Local.fVariance.Declare
	v.Local.sRemoveSign.Declare
	v.Local.sRemoveSign.Set(v.Screen.frmAPAutomationIndex!txtEVarianceAmt.text)
	f.Intrinsic.String.Replace(v.Local.sRemoveSign,"$","",v.Local.sRemoveSign)
	v.Local.sRemoveSign.Set(v.Local.sRemoveSign.Trim)
	v.Local.fVariance.Set(v.Local.sRemoveSign)
	
	f.Data.Datatable.AddRow("dtRecLines","SelectLine",True,"PART","VARIANCE","Location",v.Screen.frmAPAutomationIndex!txtELoc.text,"QTY_RECEIVED",1,"RECEIVED_AMT",v.Local.sRemoveSign,"ACTUAL_AMT",v.Local.sRemoveSign,"TAX_CODE",v.Screen.frmAPAutomationIndex!txtETaxCode.text,"SEQ","000000","GL_ACCOUNT",v.Screen.frmAPAutomationIndex!txtEVarianceAcct.text,"TAXABLE",v.Screen.frmAPAutomationIndex!chkETaxable.Value,"VAT_RULE",v.Local.iVat)
	
	F.Intrinsic.Control.CallSub(calcVariance)
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	f.Intrinsic.Control.CallSub(unload)
f.Intrinsic.Control.EndTry
Program.Sub.cmdEVarAdd_Click.End

Program.Sub.cmdEAddLine_Click.Start
f.Intrinsic.Control.Try
	v.Local.fqty.Declare
	V.Local.sJob.Declare
	V.Local.sSuf.Declare
	v.Local.sSeq.Declare
	v.Local.ssql.Declare
	v.Local.sret.Declare
	
	f.Intrinsic.Control.If(v.Screen.frmAPAutomationIndex!txtEQty.text,=,"")
		v.Local.fqty.Set(1)
	f.Intrinsic.Control.Else
		v.Local.fqty.Set(v.Screen.frmAPAutomationIndex!txtEQty.text)
	f.Intrinsic.Control.EndIf
	
	v.Local.fAmt.Declare
	f.Intrinsic.Control.If(v.Screen.frmAPAutomationIndex!txtETaxAmt.text,=,"")
		v.Local.fAmt.Set(0)
	f.Intrinsic.Control.Else
		v.Local.fAmt.Set(v.Screen.frmAPAutomationIndex!txtETaxAmt.text)
	f.Intrinsic.Control.EndIf
	
	v.Local.iVat.Declare
	f.Intrinsic.Control.If(v.Screen.frmAPAutomationIndex!txtEVat.text,=,"")
		v.Local.iVat.Set(1)
	f.Intrinsic.Control.Else
		v.Local.iVat.Set(v.Screen.frmAPAutomationIndex!txtEVat.text)
	f.Intrinsic.Control.EndIf
	
	'Check to see if Job-Suf-Seq is valid
	V.Local.sJob.Set(v.Screen.frmAPAutomationIndex!txtEWO.text)
	V.Local.sSuf.Set(v.Screen.frmAPAutomationIndex!txtESuffix.text)
	v.Local.sSeq.Set(v.Screen.frmAPAutomationIndex!txtESeq.text)
	F.Intrinsic.String.RTrim(V.Local.sJob,V.Local.sJob)
	F.Intrinsic.String.RTrim(V.Local.sSuf,V.Local.sSuf)
	F.Intrinsic.String.RTrim(V.Local.sSeq,V.Local.sSeq)

	f.Intrinsic.Control.If(v.Local.sSeq,=,"")
		v.Local.sSeq.Set("000000")
	f.Intrinsic.Control.EndIf
	
	F.Intrinsic.Control.If(V.Local.sJob,<>,"")
		'Only check for Job-Suf-seq is valid if Job is not blank
		F.Intrinsic.String.Build("Select JOB FROM JOB_OPERATIONS WHERE  JOB = '{0}' and SUFFIX = '{1}' and SEQ = '{2}'",V.Local.sJob,V.Local.sSuf,V.Local.sSeq,V.Local.sSQL)
		f.ODBC.Connection!con5564.executeandreturn(v.Local.ssql,v.Local.sret)
		F.Intrinsic.Control.If(V.Ambient.ExecuteAndReturnEOF)
			'Job-suf-seq is invalid
			gui.frmAPAutomationIndex.txtEWO.BackColor(v.Color.Red)
			gui.frmAPAutomationIndex.txtESuffix.BackColor(v.Color.Red)
			gui.frmAPAutomationIndex.txtESeq.BackColor(v.Color.Red)
			F.Intrinsic.Control.ExitSub
		F.Intrinsic.Control.Else
			gui.frmAPAutomationIndex.txtEWO.BackColor(v.Color.White)
			gui.frmAPAutomationIndex.txtESuffix.BackColor(v.Color.White)
			gui.frmAPAutomationIndex.txtESeq.BackColor(v.Color.White)
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.Else
		'If we dont have a Job then we know we dont have a Suf... so make sure that suf is also blank
		V.Local.sSuf.Set("")
	F.Intrinsic.Control.EndIf
	
	v.Local.sGLAccount.Declare
	v.Local.sGLAccount.Set(v.Screen.frmAPAutomationIndex!txtEGLAccount.text)

	f.Intrinsic.String.Build("SELECT * FROM GL_MASTER WHERE GL_ACCOUNT='{0}'",v.Local.sGLAccount.Trim,v.Local.ssql)
	f.ODBC.Connection!con5564.executeandreturn(v.Local.ssql,v.Local.sret)
	f.Intrinsic.Control.If(v.Local.sRet.Trim,<>,"")

		
		f.Data.Datatable.AddRow("dtRecLines","SelectLine",True,"JOB",v.Screen.frmAPAutomationIndex!txtEWO.text,"SUFFIX",v.Screen.frmAPAutomationIndex!txtESuffix.text,"SEQ",v.Local.sSeq, "PART",v.Screen.frmAPAutomationIndex!txtEPart.text,"Location",v.Screen.frmAPAutomationIndex!txtELoc.text,"QTY_RECEIVED",v.Local.fqty,"RECEIVED_AMT",v.Local.fAmt,"ACTUAL_AMT",v.Local.fAmt,"EXCH_COST",v.Local.fAmt,"TAX_CODE",v.Screen.frmAPAutomationIndex!txtETaxCode.text,"SEQ",v.Local.sSeq,"GL_ACCOUNT",v.Screen.frmAPAutomationIndex!txtEGLAccount.text,"TAXABLE",v.Screen.frmAPAutomationIndex!chkETaxable.Value,"VAT_RULE",v.Local.iVat)	
		gui.frmAPAutomationIndex.txtEPart.Text("")
		gui.frmAPAutomationIndex.txtELoc.Text("")
		gui.frmAPAutomationIndex.txtEDesc.Text("")
		gui.frmAPAutomationIndex.txtEQty.Text("")
		gui.frmAPAutomationIndex.txtEWO.Text("")
		gui.frmAPAutomationIndex.txtESuffix.Text("")
		gui.frmAPAutomationIndex.txtESeq.Text("")
		gui.frmAPAutomationIndex.txtEVat.Text("")
		gui.frmAPAutomationIndex.txtETaxAmt.Text("")
		gui.frmAPAutomationIndex.txtEGLAccount.BackColor(v.Color.White)
		F.Intrinsic.Control.CallSub(calcVariance)
	f.Intrinsic.Control.Else
		gui.frmAPAutomationIndex.txtEGLAccount.BackColor(v.Color.Red)
	f.Intrinsic.Control.EndIf
	
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	f.Intrinsic.Control.CallSub(unload)
f.Intrinsic.Control.EndTry
Program.Sub.cmdEAddLine_Click.End

Program.Sub.cmdReject_Click.Start
'Opening the Reject conformation GUI
gui.RejectConformation..Visible(True)
f.Intrinsic.Control.Try
	v.Local.sSupplierName.Declare
	v.Local.sInvoiceNumber.Declare
	v.Local.sGradeTotal.Declare

	v.Local.sSupplierName.Set(v.Screen.frmAPAutomationIndex!txtSupplierName.text)
	v.Local.sInvoiceNumber.Set(v.Screen.frmAPAutomationIndex!txtInvNum.text)
	v.Local.sGradeTotal.Set(v.Screen.frmAPAutomationIndex!txtGTotal.text)

	gui.RejectConformation.txtRejectSupplierName.Locked(true)
	gui.RejectConformation.txtRejectInvoiceNumber.Locked(true)
	gui.RejectConformation.txtrejectGrandTotal.Locked(true)
	GUI.RejectConformation.txtRejectSupplierName.Text(v.Local.sSupplierName)
	GUI.RejectConformation.txtRejectInvoiceNumber.Text(v.Local.sInvoiceNumber)
	GUI.RejectConformation.txtrejectGrandTotal.Text(v.Local.sGradeTotal)
	
f.Intrinsic.Control.Catch	

f.Intrinsic.Control.EndTry
Program.Sub.cmdReject_Click.End

Program.Sub.cmdSkipNext_Click.Start
f.Intrinsic.Control.Try
	f.Intrinsic.Math.Add(v.Global.iRowIndex,1,v.Global.iRowIndex)
	f.Intrinsic.Control.CallSub(subClearEverything)
 	f.Intrinsic.Control.If(v.Screen.frmAPAutomationIndex!tabs.Tab,=,0)
 		f.Intrinsic.Control.CallSub(subRowCellClick,"Datatable","dtAPInvQueue","Status","Queue","Gridview","gvAPInvQueue","GridControl","gsgcQueue","MyRowIndex",v.Global.iRowIndex,"ProcessClick","True")
 	f.Intrinsic.Control.EndIf
f.Intrinsic.Control.Catch

f.Intrinsic.Control.EndTry
Program.Sub.cmdSkipNext_Click.End

Program.Sub.cmdRejectConfirm_click.Start
'Updating the database with why a PO was rejected
f.Intrinsic.Control.Try
	v.Local.sRejectReason.Declare
	v.Local.sSupplierName.Declare
	v.Local.SInvoiceNumber.Declare
	v.Local.sDOCID.Declare
	v.Local.sSql.Declare
	v.Local.sRejectReason.Set(v.Screen.RejectConformation!txtRejectRejectReason.text)
	v.Local.sSupplierName.Set(v.Screen.RejectConformation!txtRejectSupplierName.text)
	v.Local.sInvoiceNumber.Set(v.Screen.RejectConformation!txtRejectInvoiceNumber.Text)
	v.Local.sDOCID.Set(v.Screen.frmAPAutomationIndex!txtDocID.Text)
	
	GUI.RejectConformation.txtRejectSupplierName.Text("")
	GUI.RejectConformation.txtRejectInvoiceNumber.Text("")
	GUI.RejectConformation.txtrejectGrandTotal.Text("")
	GUI.RejectConformation.txtRejectRejectReason.Text("")
	f.Intrinsic.String.Concat("UPDATE GAB_5564_AP_HEAD SET RejectReason = '", v.Local.sRejectReason.PSQLFriendly ,"', GssStatus = 'rejected' WHERE DOCID = '",v.Local.sDOCID,"'", v.Local.sSql)
	F.ODBC.Connection!con5564.Execute(v.Local.ssql)
	
	f.Intrinsic.Control.If(v.Screen.frmAPAutomationIndex!tabs.Tab,=,0)
		f.Data.Datatable.DeleteRow("dtAPInvQueue",v.Global.iRowIndex)
	f.Intrinsic.Control.elseIf(v.Screen.frmAPAutomationIndex!tabs.Tab,=,1)
		f.Data.Datatable.DeleteRow("dtAPInvSaved",v.Global.iRowIndex)
	f.Intrinsic.Control.elseIf(v.Screen.frmAPAutomationIndex!tabs.Tab,=,2)
		f.Data.Datatable.DeleteRow("dtAPInvApproved",v.Global.iRowIndex)
	f.Intrinsic.Control.EndIf
			
	'need to remove all assisiated lines
	f.Intrinsic.String.Concat("DELETE FROM GAB_5564_AP_SA WHERE HID = '",V.Global.sID,"'", v.Local.sSql)
	F.ODBC.Connection!con5564.Execute(v.Local.ssql)
	
	f.Intrinsic.Control.CallSub(subClearEverything)
	gui.RejectConformation..Visible(False)
 	
 	f.Intrinsic.Control.If(v.Screen.frmAPAutomationIndex!tabs.Tab,=,0)
 		f.Intrinsic.Control.CallSub(subRowCellClick,"Datatable","dtAPInvQueue","Status","Queue","Gridview","gvAPInvQueue","GridControl","gsgcQueue","MyRowIndex",v.Global.iRowIndex,"ProcessClick","True")
 	f.Intrinsic.Control.EndIf
 	
 	f.Intrinsic.Control.If(v.Screen.frmAPAutomationIndex!tabs.Tab,=,1)
		f.Intrinsic.Control.CallSub(subRowCellClick,"Datatable","dtAPInvSaved","Status","Save","Gridview","gvAPInvSaved","GridControl","gsgcSaved","MyRowIndex",v.Global.iRowIndex,"ProcessClick","True")
	f.Intrinsic.Control.EndIf
	
 	f.Intrinsic.Control.If(v.Screen.frmAPAutomationIndex!tabs.Tab,=,2)
		f.Intrinsic.Control.CallSub(subRowCellClick,"Datatable","dtAPInvApproved","Status","approve","Gridview","gvAPInvApproved","GridControl","gsgcApproved","MyRowIndex",v.Global.iRowIndex,"ProcessClick","True")
	f.Intrinsic.Control.EndIf
	
	
f.Intrinsic.Control.Catch	
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	gui.RejectConformation..Visible(False)
f.Intrinsic.Control.EndTry
Program.Sub.cmdRejectConfirm_click.End

Program.Sub.cmdRejectCancel_click.Start
'Closing the rejectConformaiton GUI
gui.RejectConformation..Visible(False)
gui.RejectConformation..Visible(False)
Program.Sub.cmdRejectCancel_click.End

Program.Sub.cmdSave_click.Start
f.Intrinsic.Control.Try
	v.Local.sSql.Declare
	v.Local.sVendorName.Declare
	v.Local.sVendorName.Set(v.Screen.frmAPAutomationIndex!txtSupplierName.text)
	v.Local.sVendCode.Declare
	V.Local.sVendCode.Set(v.Screen.frmAPAutomationIndex!txtVendCode.text)

	v.Local.bCheck1.Declare
	v.Local.bCheck2.Declare
	v.Local.bCheck3.Declare
	v.Local.bCheck4.Declare
	v.Local.bCheck5.Declare
	v.Local.bCheck6.Declare
	v.Local.bCheck7.Declare
	v.Local.bCheck8.Declare
	v.Local.bCheck9.Declare
	v.Local.sMessage.Declare
	f.Intrinsic.Control.CallSub(calcVariance)
	f.Intrinsic.Control.CallSub(setInvoiceAccrual)
	
	f.Intrinsic.Control.CallSub(checkFieldsSave)
	f.Intrinsic.Variable.ArgToVar("rPassVendor",v.Local.bCheck1)
	f.Intrinsic.Variable.ArgToVar("rPassVendorXRef",v.Local.bCheck2)
	f.Intrinsic.Variable.ArgToVar("rPassGL",v.Local.bCheck3)
	f.Intrinsic.Variable.ArgToVar("rPassIA",v.Local.bCheck4)
	f.Intrinsic.Variable.ArgToVar("rPassVariance",v.Local.bCheck5)
	f.Intrinsic.Variable.ArgToVar("rPassInvoiceExists",v.Local.bCheck6)
	f.Intrinsic.Variable.ArgToVar("rPassInvoiceExistsSA",v.Local.bCheck7)
	f.Intrinsic.Variable.ArgToVar("rPassVarianceLines",v.Local.bCheck8)
	f.Intrinsic.Variable.ArgToVar("rPassPOVendor",v.Local.bCheck9)
	f.Intrinsic.Variable.ArgToVar("rMessage",v.Local.sMessage)
	
	f.Intrinsic.Control.If(v.Local.bCheck1)
	f.Intrinsic.Control.AndIf(v.Local.bCheck2)
	f.Intrinsic.Control.AndIf(v.Local.bCheck3)
	f.Intrinsic.Control.AndIf(v.Local.bCheck4)
	f.Intrinsic.Control.AndIf(v.Local.bCheck5)
	f.Intrinsic.Control.AndIf(v.Local.bCheck6)
	f.Intrinsic.Control.AndIf(v.Local.bCheck7)
	f.Intrinsic.Control.AndIf(v.Local.bCheck8)
	f.Intrinsic.Control.AndIf(v.Local.bCheck9)
			
		f.Intrinsic.Control.CallSub(subUpdateButton_Update)
		f.Intrinsic.String.Concat("UPDATE GAB_5564_AP_HEAD SET GssStatus = 'saved' WHERE ID = '",v.global.sID,"'", v.Local.sSql)
		F.ODBC.Connection!con5564.Execute(v.Local.ssql)
		
		'Soft update Vendor Code
		f.Intrinsic.String.Build("SELECT VENDORCODE FROM GAB_5564_AP_XREF WHERE VendorName='{0}'",v.Local.sVendorName.PSQLFriendly,v.Local.ssql)
		f.ODBC.Connection!con5564.executeandreturn(v.Local.sSql,v.Local.sVendCode)
		f.Intrinsic.String.Concat("UPDATE GAB_5564_AP_HEAD SET Vendcode = '",v.Local.sVendCode,"' WHERE ID = '",v.global.sID,"'", v.Local.sSql)
		F.ODBC.Connection!con5564.Execute(v.Local.ssql)
		f.Data.Datatable.DeleteRow("dtAPInvQueue",v.Global.iRowIndex)
		
		f.Intrinsic.Control.CallSub(subClearEverything)
	 	f.Intrinsic.Control.CallSub(subRowCellClick,"Datatable","dtAPInvQueue","Status","Queue","Gridview","gvAPInvQueue","GridControl","gsgcQueue","MyRowIndex",v.Global.iRowIndex,"ProcessClick","True")
		
	f.Intrinsic.Control.Else
		f.Intrinsic.UI.Msgbox(v.Local.sMessage)
	f.Intrinsic.Control.EndIf
	
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.cmdSave_click.End

Program.Sub.cmdSaveApprove_Click.Start
f.Intrinsic.Control.Try
	v.Local.Ssql.Declare
	v.Local.bCheck1.Declare
	v.Local.bCheck2.Declare
	v.Local.bCheck3.Declare
	v.Local.bCheck4.Declare
	v.Local.bCheck5.Declare
	v.Local.bCheck6.Declare
	v.Local.bCheck7.Declare
	v.Local.bCheck8.Declare
	v.Local.bCheck9.Declare
	v.Local.sMessage.Declare
	f.Intrinsic.Control.CallSub(calcVariance)
	f.Intrinsic.Control.CallSub(setInvoiceAccrual)
	'f.Intrinsic.Debug.ShowCallerInfo
	'Check if this is being called from the queue space
	f.Intrinsic.Control.If(v.Screen.frmAPAutomationIndex!tabs.tab,=,0)
		f.Intrinsic.Control.CallSub(checkFieldsSave)
		f.Intrinsic.Variable.ArgToVar("rPassVendor",v.Local.bCheck1)
		f.Intrinsic.Variable.ArgToVar("rPassVendorXRef",v.Local.bCheck2)
		f.Intrinsic.Variable.ArgToVar("rPassGL",v.Local.bCheck3)
		f.Intrinsic.Variable.ArgToVar("rPassIA",v.Local.bCheck4)
		f.Intrinsic.Variable.ArgToVar("rPassVariance",v.Local.bCheck5)
		f.Intrinsic.Variable.ArgToVar("rPassInvoiceExists",v.Local.bCheck6)
		f.Intrinsic.Variable.ArgToVar("rPassInvoiceExistsSA",v.Local.bCheck7)
		f.Intrinsic.Variable.ArgToVar("rPassVarianceLines",v.Local.bCheck8)
		f.Intrinsic.Variable.ArgToVar("rPassPOVendor",v.Local.bCheck9)
		f.Intrinsic.Variable.ArgToVar("rMessage",v.Local.sMessage)
	f.Intrinsic.Control.Else
		'Ignore the checks, this is done
		v.Local.bCheck1.Set(true)
		v.Local.bCheck2.Set(true)
		v.Local.bCheck3.Set(true)
		v.Local.bCheck4.Set(true)
		v.Local.bCheck5.Set(true)
		v.Local.bCheck6.Set(true)
		v.Local.bCheck7.Set(true)
		v.Local.bCheck8.Set(true)
		v.Local.bCheck9.Set(true)
	f.Intrinsic.Control.EndIf

	
	f.Intrinsic.Control.If(v.Local.bCheck1)
	f.Intrinsic.Control.AndIf(v.Local.bCheck2)
	f.Intrinsic.Control.AndIf(v.Local.bCheck3)
	f.Intrinsic.Control.AndIf(v.Local.bCheck4)
	f.Intrinsic.Control.AndIf(v.Local.bCheck5)
	f.Intrinsic.Control.AndIf(v.Local.bCheck6)
	f.Intrinsic.Control.AndIf(v.Local.bCheck7)
	f.Intrinsic.Control.AndIf(v.Local.bCheck8)
	f.Intrinsic.Control.AndIf(v.Local.bCheck9)
		f.Intrinsic.String.Concat("UPDATE GAB_5564_AP_HEAD SET GssStatus = 'approved' WHERE ID = '",v.global.sID,"'", v.Local.sSql)
		F.ODBC.Connection!con5564.Execute(v.Local.ssql)
		
		f.Intrinsic.Control.If(V.Screen.frmAPAutomationIndex!tabs.Tab,=,0,"or",v.Global.bUploadSwitch,=,True)
			f.Data.Datatable.DeleteRow("dtAPInvQueue",v.Global.iRowIndex)
			f.Intrinsic.Control.CallSub(subUpdateButton_Update)
			f.Intrinsic.Control.CallSub(subClearEverything)
		 	f.Intrinsic.Control.CallSub(subRowCellClick,"Datatable","dtAPInvQueue","Status","Queue","Gridview","gvAPInvQueue","GridControl","gsgcQueue","MyRowIndex",v.Global.iRowIndex,"ProcessClick","True")
		f.Intrinsic.Control.Elseif(V.Screen.frmAPAutomationIndex!tabs.Tab,=,1)
			f.Data.Datatable.DeleteRow("dtAPInvSaved",v.Global.iRowIndex)
			f.Intrinsic.Control.CallSub(subClearEverything)
			f.Intrinsic.Control.CallSub(subRowCellClick,"Datatable","dtAPInvSaved","Status","Save","Gridview","gvAPInvSaved","GridControl","gsgcSaved","MyRowIndex",v.Global.iRowIndex,"ProcessClick","False")
		f.Intrinsic.Control.EndIf
		
	f.Intrinsic.Control.Else
		f.Intrinsic.UI.Msgbox(v.Local.sMessage)
	f.Intrinsic.Control.EndIf
		
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.cmdSaveApprove_Click.End

Program.Sub.cmdSupplierXRefSearch_Click.Start
f.Intrinsic.Control.Try
	V.Local.sSQL.Declare
	V.Local.sCol.Declare
	V.Local.sColW.Declare
	V.Local.sRet.Declare
	v.Local.sSupplierName.Declare
	v.Local.sVendCode.Declare
	v.Local.bXRefCheck1.Declare
	v.Local.bXRefCheck.Declare
	v.Local.bVendorCheck.Declare
	V.Local.sSQL.set("SELECT VENDOR, NAME_VENDOR FROM V_VENDOR_MASTER")
	'Split Column Names into an array (*!* delimited string)
	F.Intrinsic.String.Split("Vendor*!*Name Vendor","*!*",V.Local.sCol)
	'Split Column widths into an array (*!* delimited string)
	F.Intrinsic.String.Split("600*!*3000","*!*",V.Local.sColW)
	F.Intrinsic.UI.Browser("Select a Vendor","con5564",V.Local.sSQL,V.Local.sCol,V.Local.sColW,V.Local.sRet)
	F.Intrinsic.Control.If(V.Local.sRet,<>,"***CANCEL***")
		f.Intrinsic.String.Split(v.Local.sRet,"*!*",v.Local.sRet)
		v.Local.sVendCode.Set(v.Local.sRet(0))
		v.Local.sSupplierName.Set(v.Screen.frmAPAutomationIndex!txtSupplierName.text)
		gui.frmAPAutomationIndex.txtVendCode.Text(v.Local.sVendCode)
		
		f.Intrinsic.String.Build("INSERT INTO GAB_5564_AP_XREF (VendorCode,VendorName) VALUES ('{0}','{1}')",v.Local.sVendCode,v.Local.sSupplierName.PSQLFriendly,v.Local.sSQL)
		f.ODBC.Connection!con5564.execute(v.Local.ssql)
		f.Intrinsic.String.Build("UPDATE GAB_5564_AP_HEAD SET VENDCODE = '{0}' where docid='{1}'",v.Local.sVendCode,v.Global.sDOCID,v.Local.sSQL)
		F.ODBC.Connection!con5564.execute(v.Local.ssql)
		
		'Check Everything
		f.Intrinsic.Control.CallSub(checkXrefSuppPORec)
		
		'Calculations
		f.Intrinsic.Control.CallSub(calcTaxGrandTotal, "XRef",True)
		f.Intrinsic.Control.CallSub(calcVariance)
	
	F.Intrinsic.Control.EndIf
f.Intrinsic.Control.Catch

f.Intrinsic.Control.EndTry
Program.Sub.cmdSupplierXRefSearch_Click.End

Program.Sub.cmdLearn_click.Start
'PO Doc Review
f.Intrinsic.Control.Try
	v.Local.bXrefCheck.Declare
	v.Local.bXRefCheck1.Declare
	v.Local.sVendCode.Declare
	v.Local.sSupplierName.Declare
	v.Local.sdata.Declare
	v.Local.sret.Declare
	v.Local.sFile.Declare
	V.Local.sDoc.Declare
	v.Local.sRowID.Declare
	v.Local.bEOF.Declare
	V.local.slink.Declare
	V.local.sStatus.Declare
	v.Local.sLinkLearn.Declare
	V.Local.sGabFile.Declare
	'disable screen GETS STUCK
	f.Intrinsic.Control.CallSub(DisableAll)	
	gui.Form.gsWebBrowser.LoadUrl("")
	
	'create APi call
	F.Intrinsic.String.Build("{{0}api_key{0} : {0}{1}{0}, {0}document_id{0} : {0}{2}{0}, {0}no_lockout{0}: 1, {0}callback_url{0} : {0}https://app.gssap.com{0} }",v.Ambient.DblQuote,v.Global.sAPIKey,v.Global.sDOCID,v.Local.sdata)
	F.Communication.REST.SetProperty("ContentType","application/json")
	f.Communication.REST.SetProperty("PostData",v.Local.sdata)
	F.Communication.REST.Post("https://api-app.xtracta.com/v1/documents/ui")
	f.Communication.REST.ReadProperty("TransferredData",V.Local.sret)
	f.Intrinsic.String.Split(v.Local.sret,"url>",v.Local.sret)
	f.Intrinsic.String.Replace(v.Local.sret(1),"</","",v.local.sLinkLearn)

	gui.Form..Visible(true)
	gui.Form.gsWebBrowser.LoadURL(v.local.sLinkLearn)

f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	'f.Intrinsic.Control.End
f.Intrinsic.Control.endtry
Program.Sub.cmdLearn_click.End

Program.Sub.cmdPOShowAll_Click.Start
v.Local.sInvoiceNumber.Declare
v.Local.sPORefrence.Declare
v.Local.sVendCode.Declare
v.Local.bPassPOVendor.Declare
v.Local.sError.Declare
f.Intrinsic.Control.Try
	V.Local.sInvoiceNumber.Set(V.Screen.frmAPAutomationIndex!txtInvNum.Text)
	V.Local.sPORefrence.Set(V.Screen.frmAPAutomationIndex!txtPORef.Text)
	V.Local.sVendCode.Set(V.Screen.frmAPAutomationIndex!txtVendCode.Text)
	
	'Check if Vendor on the PO matches the vendor on the Invoice
	F.Intrinsic.Control.If(V.Local.sPORefrence,=,"")
		'red text found for the PO ref link
		f.Intrinsic.String.Concat(v.Local.sError,"Cannot load PO Receivers, please enter a PO or check MULTIPO.",V.Ambient.NewLine,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.ExitSub
	f.Intrinsic.Control.EndIf
	
	f.Intrinsic.Control.CallSub(loadInvoiceDetail,"InvoiceNumber",v.Local.sInvoiceNumber,"PurchaseOrder","SHOWALL","Status","QUEUE","Vendor",v.Local.sVendCode)

f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	'f.Intrinsic.Control.End
f.Intrinsic.Control.endtry
Program.Sub.cmdPOShowAll_Click.End

Program.Sub.cmdPOShowNegative_Click.Start
v.Local.sInvoiceNumber.Declare
v.Local.sPORefrence.Declare
v.Local.sVendCode.Declare
v.Local.bPassPOVendor.Declare
v.Local.sError.Declare
f.Intrinsic.Control.Try
	
	V.Local.sInvoiceNumber.Set(V.Screen.frmAPAutomationIndex!txtInvNum.Text)
	V.Local.sPORefrence.Set(V.Screen.frmAPAutomationIndex!txtPORef.Text)
	V.Local.sVendCode.Set(V.Screen.frmAPAutomationIndex!txtVendCode.Text)
	
	'Check if Vendor on the PO matches the vendor on the Invoice
	F.Intrinsic.Control.If(V.Local.sPORefrence,<>,"")
		f.Intrinsic.Control.If(v.Screen.frmAPAutomationIndex!lblPOVendor.ForeColor,=,v.Enum.ThemeColors!ColorRed)
			'red text found for the PO ref link
			f.Intrinsic.String.Concat(v.Local.sError,"Cannot load PO Receivers, Vendor on the PO Does not match Vendor on Invoice.",V.Ambient.NewLine,V.Local.sError)
			F.Intrinsic.UI.Msgbox(V.Local.sError)
			F.Intrinsic.Control.ExitSub
		f.Intrinsic.Control.EndIf
	F.Intrinsic.Control.Else
		f.Intrinsic.String.Concat(v.Local.sError,"Cannot load PO Receivers, No PO Found",V.Ambient.NewLine,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.ExitSub
	f.Intrinsic.Control.EndIf
	
	V.Global.bShowAllReceivers.Set(True)
	f.Intrinsic.Control.CallSub(loadInvoiceDetail,"InvoiceNumber",v.Local.sInvoiceNumber,"PurchaseOrder",v.Local.sPORefrence,"Status","QUEUE","Vendor",v.Local.sVendCode)
	V.Global.bShowAllReceivers.Set(False)

f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	'f.Intrinsic.Control.End
f.Intrinsic.Control.endtry
Program.Sub.cmdPOShowNegative_Click.End

Program.Sub.cmdQueue_Click.Start
f.Intrinsic.Control.Try
	'f.Intrinsic.Debug.ShowCallerInfo 'tomas2
	v.Local.sSql.Declare
	v.Local.sDOCID.Declare
	v.Local.sDOCID.Set(v.Screen.frmAPAutomationIndex!txtDocID.Text)
	f.Intrinsic.String.Concat("UPDATE GAB_5564_AP_HEAD SET GssStatus = 'queue' WHERE DOCID = '",v.Local.sDOCID,"'", v.Local.sSql)
	F.ODBC.Connection!con5564.Execute(v.Local.ssql)
	
	'need to remove all assisiated lines
	f.Intrinsic.String.Concat("DELETE FROM GAB_5564_AP_SA WHERE HID = '",V.Global.sID,"'", v.Local.sSql)
	F.ODBC.Connection!con5564.Execute(v.Local.ssql)
	
	f.Intrinsic.Control.If(v.Screen.frmAPAutomationIndex!tabs.Tab,=,0)
		f.Data.Datatable.DeleteRow("dtAPInvQueue",v.Global.iRowIndex)
	f.Intrinsic.Control.elseIf(v.Screen.frmAPAutomationIndex!tabs.Tab,=,1)
		f.Data.Datatable.DeleteRow("dtAPInvSaved",v.Global.iRowIndex)
	f.Intrinsic.Control.elseIf(v.Screen.frmAPAutomationIndex!tabs.Tab,=,2)
		f.Data.Datatable.DeleteRow("dtAPInvApproved",v.Global.iRowIndex)
	f.Intrinsic.Control.elseIf(v.Screen.frmAPAutomationIndex!tabs.Tab,=,4)
		f.Data.Datatable.DeleteRow("dtAPInvReject",v.Global.iRowIndex)
	f.Intrinsic.Control.EndIf
	
	f.Intrinsic.Control.CallSub(subClearEverything)
	
 	'f.Intrinsic.Control.If(v.Screen.frmAPAutomationIndex!tabs.Tab,=,1)
	'	f.Intrinsic.Control.CallSub(subRowCellClick,"Datatable","dtAPInvSaved","Status","Save","Gridview","gvAPInvSaved","GridControl","gsgcSaved","MyRowIndex",v.Global.iRowIndex,"ProcessClick","False")
	'f.Intrinsic.Control.EndIf
	
	 'f.Intrinsic.Control.If(v.Screen.frmAPAutomationIndex!tabs.Tab,=,2)
	'	f.Intrinsic.Control.CallSub(subRowCellClick,"Datatable","dtAPInvApproved","Status","approve","Gridview","gvAPInvApproved","GridControl","gsgcApproved","MyRowIndex",v.Global.iRowIndex,"ProcessClick","False")
	'f.Intrinsic.Control.EndIf
f.Intrinsic.Control.Catch	


f.Intrinsic.Control.EndTry
Program.Sub.cmdQueue_Click.End

#End Region ' Cmd Button Events

#Region "Text Box Lost Focus Events"

Program.Sub.txtNotes_LostFocus.Start
f.Intrinsic.Control.Try
	v.Local.iRowIndex.Declare
	v.Local.iRowIndex.Set(v.Screen.frmAPAutomationIndex!lblRowID.Caption)
	v.Local.sNotes.Declare
	v.Local.sSql.Declare
	v.Local.sDocID.Declare
	v.Local.sDOCID.Set(v.Screen.frmAPAutomationIndex!txtDocID.Text)
	v.Local.sNotes.Set(v.Screen.frmAPAutomationIndex!txtNotes.Text)
	'f.Intrinsic.Debug.ShowCallerInfo
	f.Intrinsic.String.Concat("UPDATE GAB_5564_AP_HEAD SET NOTES = '",v.Local.sNotes.PSQLFriendly,"' WHERE DOCID = '",v.Local.sDOCID,"'", v.Local.sSql)
	f.ODBC.Connection!con5564.Execute(v.Local.ssql)
	f.Data.DataTable.SetValue("dtAPInvQueue",v.Local.iRowIndex,"NOTES",v.Local.sNotes)
	f.Intrinsic.Control.CallSub(calcTaxGrandTotal, "XRef",True)
	f.Intrinsic.Control.CallSub(calcVariance)
f.Intrinsic.Control.Catch	
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	f.Intrinsic.Control.CallSub(unload)
f.Intrinsic.Control.EndTry
Program.Sub.txtNotes_LostFocus.End


Program.Sub.txtEGLAccount_GotFocus.Start
f.Intrinsic.Control.Try
	'gui.frmAPAutomationIndex.lookupGL.show
f.Intrinsic.Control.Catch	
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	f.Intrinsic.Control.CallSub(unload)
f.Intrinsic.Control.EndTry
Program.Sub.txtEGLAccount_GotFocus.End

Program.Sub.txtEGLAccount_LostFocus.Start
f.Intrinsic.Control.Try
	'check GL code here
f.Intrinsic.Control.Catch	
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	f.Intrinsic.Control.CallSub(unload)
f.Intrinsic.Control.EndTry
Program.Sub.txtEGLAccount_LostFocus.End

Program.Sub.txtGST_LostFocus.Start
f.Intrinsic.Control.Try
	v.Local.sGST.Declare
	v.Local.fGST.Declare
	v.Local.sSql.Declare
	v.Local.sDocID.Declare
	v.Local.sDOCID.Set(v.Screen.frmAPAutomationIndex!txtDocID.Text)
	v.Local.sGST.Set(v.Screen.frmAPAutomationIndex!txtGST.text)
	f.Intrinsic.String.Replace(v.Local.sGST,"$","",v.Local.sGST)
	
	f.Intrinsic.Math.ConvertToFloat(v.Local.sGST,v.Local.fGST)
	f.Intrinsic.String.Concat("UPDATE GAB_5564_AP_HEAD SET GSTTOTAL = '",v.Local.fGST,"' WHERE DOCID = '",v.Local.sDOCID,"'", v.Local.sSql)
	f.ODBC.Connection!con5564.Execute(v.Local.ssql)
	f.Intrinsic.Control.CallSub(calcTaxGrandTotal, "XRef",True)
	f.Intrinsic.Control.CallSub(calcVariance)
f.Intrinsic.Control.Catch	
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	f.Intrinsic.Control.CallSub(unload)
f.Intrinsic.Control.EndTry
Program.Sub.txtGST_LostFocus.End

Program.Sub.txtSubtotal_LostFocus.Start
f.Intrinsic.Control.Try
	v.Local.sSubTotal.Declare
	v.Local.fSubTotal.Declare
	v.Local.sSql.Declare
	v.Local.sDocID.Declare
	v.Local.sDOCID.Set(v.Screen.frmAPAutomationIndex!txtDocID.Text)
	v.Local.sSubTotal.Set(v.Screen.frmAPAutomationIndex!txtSubTotal.Text)
	f.Intrinsic.String.Replace(v.Local.sSubTotal,"$","",v.Local.fSubTotal)
	f.Intrinsic.String.Concat("UPDATE GAB_5564_AP_HEAD SET SUBTOTAL = '",v.Local.fSubTotal,"' WHERE DOCID = '",v.Local.sDOCID,"'", v.Local.sSql)
	f.ODBC.Connection!con5564.Execute(v.Local.ssql)
f.Intrinsic.Control.Catch	
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	f.Intrinsic.Control.CallSub(unload)
f.Intrinsic.Control.EndTry
Program.Sub.txtSubtotal_LostFocus.End

Program.Sub.txtFreight_LostFocus.Start
f.Intrinsic.Control.Try
	v.Local.sFreight.Declare
	v.Local.ffreight.Declare
	v.Local.sSql.Declare
	v.Local.sDocID.Declare
	v.Local.sDOCID.Set(v.Screen.frmAPAutomationIndex!txtDocID.Text)
	v.Local.sfreight.Set(v.Screen.frmAPAutomationIndex!txtfreight.Text)
	f.Intrinsic.String.Replace(v.Local.sfreight,"$","",v.Local.ffreight)
	f.Intrinsic.String.Concat("UPDATE GAB_5564_AP_HEAD SET freight = '",v.Local.ffreight,"' WHERE DOCID = '",v.Local.sDOCID,"'", v.Local.sSql)
	f.ODBC.Connection!con5564.Execute(v.Local.ssql)
	f.Intrinsic.Control.CallSub(calcTaxGrandTotal, "XRef",True)
	f.Intrinsic.Control.CallSub(calcVariance)
f.Intrinsic.Control.Catch	
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	f.Intrinsic.Control.CallSub(unload)
f.Intrinsic.Control.EndTry
Program.Sub.txtFreight_LostFocus.End

Program.Sub.txtPORef_LostFocus.Start
f.Intrinsic.Control.Try
	v.Local.iRowIndex.Declare
	v.Local.iRowIndex.Set(v.Screen.frmAPAutomationIndex!lblRowID.Caption)
	v.Local.sPORefNEW.Declare
	v.Local.sDOCID.Declare
	v.Local.sSql.Declare
	v.Local.sPORefrence.Declare
	v.local.bPOHead.Declare
	v.Local.bPOreceiver.Declare
	v.Local.bPOVendor.Declare
	v.Local.sDOCID.Set(v.Screen.frmAPAutomationIndex!txtDocID.Text)
	v.Local.sPORefNEW.Set(v.Screen.frmAPAutomationIndex!txtPORef.Text)
	f.Intrinsic.String.Concat("UPDATE GAB_5564_AP_HEAD SET POHEAD = '",v.Local.sPORefNEW.PSQLFriendly,"' WHERE DOCID = '",v.Local.sDOCID,"'", v.Local.sSql)
	f.ODBC.Connection!con5564.Execute(v.Local.ssql)
	
	f.Data.DataTable.SetValue("dtAPInvQueue",v.Local.iRowIndex,"POHEAD",v.Local.sPORefNEW)
	
	'Check Purchase Order is created in the system
	f.Intrinsic.Control.CallSub(CheckPONumberExist, "POHead", v.Local.sPORefNEW)
	f.Intrinsic.Variable.ArgToVar("POHead",v.Local.bPOHead)
	F.Intrinsic.Control.If(v.Local.bPOHead,=,True)
		gui.frmAPAutomationIndex.lblCreatePO.Caption("PO Found")
		gui.frmAPAutomationIndex.lblCreatePO.Visible(True)
		gui.frmAPAutomationIndex.lblCreatePO.ForeColor(v.Enum.ThemeColors!ColorGreen)
	F.Intrinsic.Control.Else
		gui.frmAPAutomationIndex.lblCreatePO.Caption("PO Not Found")
		gui.frmAPAutomationIndex.lblCreatePO.Visible(True)
		gui.frmAPAutomationIndex.lblCreatePO.ForeColor(v.Enum.ThemeColors!ColorRed)
	F.Intrinsic.Control.EndIf
	
	'Checking if PO is received
	f.Intrinsic.Control.CallSub(CheckPOreceiverExist,"POHead",v.Local.sPORefNEW)
	f.Intrinsic.Variable.ArgToVar("POreceiver",v.Local.bPOreceiver)
	F.Intrinsic.Control.If(v.Local.bPOreceiver,=,True)
		gui.frmAPAutomationIndex.lblReceivePO.Caption("PO Received")
		gui.frmAPAutomationIndex.lblReceivePO.Visible(True)
		gui.frmAPAutomationIndex.lblReceivePO.ForeColor(v.Enum.ThemeColors!ColorGreen)
	F.Intrinsic.Control.Else
		gui.frmAPAutomationIndex.lblReceivePO.Caption("PO Not Received")
		gui.frmAPAutomationIndex.lblReceivePO.Visible(True)
		gui.frmAPAutomationIndex.lblReceivePO.ForeColor(v.Enum.ThemeColors!ColorRed)
	F.Intrinsic.Control.EndIf
	
	'Check If Purchase Order Vendor Matches Invoice Vendor
	f.Intrinsic.Control.CallSub(CheckPOVendor, "POHead", v.Local.sPORefNEW)
	f.Intrinsic.Variable.ArgToVar("POVendor",v.Local.bPOVendor)
	F.Intrinsic.Control.If(v.Local.bPOVendor,=,True)
		gui.frmAPAutomationIndex.lblPOVendor.Caption("PO Vendor Matches")
		gui.frmAPAutomationIndex.lblPOVendor.Visible(True)
		gui.frmAPAutomationIndex.lblPOVendor.ForeColor(v.Enum.ThemeColors!ColorGreen)
	F.Intrinsic.Control.Else
		gui.frmAPAutomationIndex.lblPOVendor.Caption("PO Vendor Does Not Match")
		gui.frmAPAutomationIndex.lblPOVendor.Visible(True)
		gui.frmAPAutomationIndex.lblPOVendor.ForeColor(v.Enum.ThemeColors!ColorRed)
	F.Intrinsic.Control.EndIf
	
f.Intrinsic.Control.Catch	
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	f.Intrinsic.Control.CallSub(unload)
f.Intrinsic.Control.EndTry
Program.Sub.txtPORef_LostFocus.End

Program.Sub.txtInvoiceDate_LostFocus.Start
f.Intrinsic.Control.Try
	v.Local.sInvoiceDateNEW.Declare
	v.Local.bIsDate.Declare
	v.Local.sDOCID.Declare
	v.Local.dInvoiceDateNew.Declare
	v.Local.sSql.Declare
	v.Local.sDOCID.Set(v.Screen.frmAPAutomationIndex!txtDocID.Text)
	v.Local.sInvoiceDateNEW.Set(v.Screen.frmAPAutomationIndex!txtInvdate.Text)
	
	f.Intrinsic.Date.IsDate(v.Local.sInvoiceDateNEW,v.Local.bIsDate)
	f.Intrinsic.Control.If(v.Local.bIsDate)
		v.Local.dInvoiceDateNew.Set(v.Local.sInvoiceDateNEW)
	f.Intrinsic.Control.Else
		f.Intrinsic.UI.Msgbox("Invalid Date, please enter valid date.")
		f.Intrinsic.Control.ExitSub
	f.Intrinsic.Control.EndIf
	
	f.Intrinsic.String.Concat("UPDATE GAB_5564_AP_HEAD SET INVCDATE = '",v.Local.dInvoiceDateNew.PervasiveDate,"' WHERE DOCID = '",v.Local.sDOCID,"'", v.Local.sSql)
	f.ODBC.Connection!con5564.Execute(v.Local.ssql)

f.Intrinsic.Control.Catch	
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	f.Intrinsic.Control.CallSub(unload)
f.Intrinsic.Control.EndTry
Program.Sub.txtInvoiceDate_LostFocus.End

Program.Sub.txtInvoiceNumber_LostFocus.Start
f.Intrinsic.Control.Try
	v.Local.iRowIndex.Declare
	V.Local.bInvoice.Declare
	V.Local.bInvoiceSA.Declare
	v.Local.sInvoiceNumberNEW.Declare
	v.Local.sVendor.Declare
	v.Local.sDOCID.Declare
	v.Local.sSql.Declare
	v.Local.sVendor.Set(v.Screen.frmAPAutomationIndex!txtVendCode.text)
	v.Local.sDOCID.Set(v.Screen.frmAPAutomationIndex!txtDocID.Text)
	v.Local.sInvoiceNumberNEW.Set(v.Screen.frmAPAutomationIndex!txtInvNum.Text)
	v.Local.iRowIndex.Set(v.Screen.frmAPAutomationIndex!lblRowID.Caption)
	
	f.Intrinsic.String.Concat("UPDATE GAB_5564_AP_HEAD SET INVCNUMB = '",v.Local.sInvoiceNumberNEW.PSQLFriendly,"' WHERE DOCID = '",v.Local.sDOCID,"'", v.Local.sSql)
	f.ODBC.Connection!con5564.Execute(v.Local.ssql)
	
	f.Data.DataTable.SetValue("dtAPInvQueue",v.Local.iRowIndex,"INVCNUMB",v.Local.sInvoiceNumberNEW)
	
	f.Intrinsic.Control.CallSub(checkInvoiceExists,"Vendor",v.Local.sVendor,"Invoice",v.Local.sInvoiceNumberNEW)
	f.Intrinsic.Variable.ArgToVar("rInvoice",v.Local.bInvoice)
	f.Intrinsic.Control.If(v.Local.bInvoice)
		gui.frmAPAutomationIndex.lblInvoiceExists.Caption("Cannot Upload, Invoice Exist")
		gui.frmAPAutomationIndex.lblInvoiceExists.ForeColor(v.Enum.ThemeColors!ColorRed)
	f.Intrinsic.Control.Else
		gui.frmAPAutomationIndex.lblInvoiceExists.Caption("Can Upload, Invoice Not Found")
		gui.frmAPAutomationIndex.lblInvoiceExists.ForeColor(v.Enum.ThemeColors!ColorGreen)
	f.Intrinsic.Control.EndIf
	
	f.Intrinsic.Control.CallSub(checkInvoiceExistsSA,"Vendor",v.Local.sVendor,"Invoice",v.Local.sInvoiceNumberNEW)
	f.Intrinsic.Variable.ArgToVar("rInvoiceSA",v.Local.bInvoiceSA)
	f.Intrinsic.Control.If(v.Local.bInvoiceSA)
		gui.frmAPAutomationIndex.lblInvoiceExistsSA.Caption("Cannot Upload, Invoice Exist in Approval")
		gui.frmAPAutomationIndex.lblInvoiceExistsSA.ForeColor(v.Enum.ThemeColors!ColorRed)
	f.Intrinsic.Control.Else
		gui.frmAPAutomationIndex.lblInvoiceExistsSA.Caption("")
		gui.frmAPAutomationIndex.lblInvoiceExistsSA.ForeColor(v.Enum.ThemeColors!ColorGreen)
	f.Intrinsic.Control.EndIf
	
f.Intrinsic.Control.Catch	
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	f.Intrinsic.Control.CallSub(unload)
f.Intrinsic.Control.EndTry
Program.Sub.txtInvoiceNumber_LostFocus.End

#End Region ' Text Box Lost Focus Events

Program.Sub.frmProcessAPConformationCloseGUI.Start
gui.ProcessAPConformation..Visible(False)
Program.Sub.frmProcessAPConformationCloseGUI.End

Program.Sub.frmProcessAPConformationOpenGUI.Start
gui.ProcessAPConformation..Visible(True)
Program.Sub.frmProcessAPConformationOpenGUI.End

#Region "Dashboard Form Bar Button Events"

Program.Sub.frmAPAutomationIndex_HelpButtonClick.Start
F.Intrinsic.Control.Try

F.Intrinsic.Control.Catch

F.Intrinsic.Control.EndTry
Program.Sub.frmAPAutomationIndex_HelpButtonClick.End

Program.Sub.frmAPAutomationIndex_RefreshClick.Start
f.Intrinsic.Control.Try
	f.Intrinsic.Control.callsub(disableAll)
	f.Intrinsic.Control.CallSub(getPOData)
	f.Intrinsic.Control.CallSub(loadInvoiceDetail,"InvoiceNumber",v.Screen.frmAPAutomationIndex!txtInvNum.text,"PurchaseOrder",v.Screen.frmAPAutomationIndex!txtPORef.text,"Status","queue","Vendor",v.Screen.frmAPAutomationIndex!txtVendCode.text)
	f.Intrinsic.Control.callsub(enableAll)

f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.frmAPAutomationIndex_RefreshClick.End

Program.Sub.frmAPAutomationIndex_SaveButtonClick.Start
f.Intrinsic.Control.Try
	V.local.i.Declare
	v.Local.sret.Declare
	v.Local.sDOCID.Declare
	v.Local.sLocalPO.Declare
	v.Local.iItem.Declare
	v.Local.sRowID.Declare
	v.Local.sVendCode.Declare
	v.Local.sInvoiceNumb.Declare
	v.Local.sPOHead.Declare
	v.Local.sPOLine.Declare
	v.Local.sPORcvr.Declare
	v.Local.sGLAccount.Declare
	v.Local.sAPApproveID.Declare
	v.Local.sNotes.Declare
	v.Local.bTaxable.Declare
	v.Local.sTaxable.Declare
	v.Local.bBookTax.Declare
	v.Local.sBookTax.Declare 
	v.Local.sJob.Declare
	v.Local.sTaxCode.Declare
	v.Local.sSuffix.Declare
	v.Local.sSEQ.Declare
	v.Local.sDescription.Declare
	v.Local.sLocation.Declare
	v.Local.sCostType.Declare
	v.Local.sBranch.Declare
	v.Local.dInvcDate.Declare
	v.Local.sInvcDate.Declare
	v.Local.sVatRule.Declare
	v.Local.sBuyer.Declare
	v.Local.sPurchaseUM.Declare
	v.Local.fReceivedAmount.Declare
	v.Local.fInvoiceQTY.Declare
	v.Local.fExtendedAmount.Declare
	v.Local.fActualAmount.Declare
	V.Local.fVariance.Declare
	v.Local.fSubtotal.Declare
	v.Local.sVoucher.Declare
	v.Local.sDOCSAVEDLOCATION.Declare
	v.Local.sPostDate.Declare
	v.Local.ssql.Declare
	v.Local.sPartNumb.Declare
	v.Local.sinvoiceType.Declare
	v.Local.sFinalMessage.Declare
	v.Local.sMessage.Declare
	v.Local.sVendorCheck.Declare
	v.Local.sJobCheck.Declare
	v.Local.sPackingList.Declare
	
	'Get the company's currency code
	V.Local.sCompCurrency.Declare
	F.ODBC.Connection!Con5564.executeandreturn("select rtrim(TEXT1) from OP_HEADER WHERE ID='000000' AND SEQUENCE='0000'",v.Local.sCompCurrency)
	
	v.Local.sVendCurrency.Declare
	v.Local.fExchAmt.Declare

	v.Local.bIgnore.Declare
	v.Local.bhasinvoice.Declare
	v.Local.bhasaccural.Declare
	v.Local.bhasinvoice.Set(False)
	v.Local.bhasaccural.Set(False)
	
	'Clear Contents of file
	v.Local.sAPFile.Declare
	v.Local.bFileCheck.Declare
	f.Intrinsic.String.Concat(v.Caller.FilesDir,"\APBATCH_INVACRbb.TXT",v.Local.sAPFile)
	f.Intrinsic.File.Exists(v.Local.sAPFile,v.Local.bFileCheck)
	f.Intrinsic.Control.If(v.Local.bFileCheck)
		f.Intrinsic.File.DeleteFile(v.Local.sAPFile)
	f.Intrinsic.Control.EndIf
	f.Intrinsic.String.Concat(v.Caller.FilesDir,"\APBATCH_UPLOADbb.TXT",v.Local.sAPFile)
	f.Intrinsic.File.Exists(v.Local.sAPFile,v.Local.bFileCheck)
	f.Intrinsic.Control.If(v.Local.bFileCheck)
		f.Intrinsic.File.DeleteFile(v.Local.sAPFile)
	f.Intrinsic.Control.EndIf
	
	
	f.Data.DataTable.CreateFromSQL("dtApprovedProcessing0",con5564,"SELECT * FROM V_GAB_5564_AP_ALL WHERE Processed=0 AND GssStatus = 'approved'",TRUE)
	'f.Intrinsic.Debug.ShowCallerInfo
	F.Data.Datatable.AcceptChanges("dtAPInvApproved")
	F.Data.Dictionary.CreateFromDataTable("dictDocId","dtAPInvApproved","DOCID","Sel")
	
	f.Intrinsic.Control.If(v.Global.bUploadSwitch)
		F.Data.Dictionary.SetDefaultReturn("dictDocId",True)
	f.Intrinsic.Control.Else
		F.Data.Dictionary.SetDefaultReturn("dictDocId",False)
	f.Intrinsic.Control.EndIf
	
	f.Intrinsic.Control.If(v.Global.bUploadSwitch)
		F.Data.DataTable.AddColumn("dtApprovedProcessing0","Sel","Boolean",True)
	f.Intrinsic.Control.Else
		F.Data.DataTable.AddColumn("dtApprovedProcessing0","Sel","Boolean",False)
		F.Data.DataTable.FillFromDictionary("dtApprovedProcessing0","dictDocId","DOCID","Sel")
		F.Data.Dictionary.Close("dictDocId")
	f.Intrinsic.Control.EndIf
	
	
	
	'F.Data.Datatable.AcceptChanges("dtApprovedProcessing0")
	F.Data.DataView.Create("dtApprovedProcessing0","dvApprovedProcessing0",22,"sel = True","DOCID")
	F.Data.DataView.ToDataTable("dtApprovedProcessing0","dvApprovedProcessing0","dtApprovedProcessing",True)	
	
	F.Data.DataView.Close("dtApprovedProcessing0","dvApprovedProcessing0")
	F.Data.Datatable.Close("dtApprovedProcessing0")

	f.Intrinsic.Control.If(v.DataTable.dtApprovedProcessing.RowCount,=,0)
		gui.ProcessAPConformation..Visible(false)
		f.Intrinsic.UI.Msgbox("No invoices selected. Please select before uploading.")
		F.Data.Datatable.Close("dtApprovedProcessing")
		f.Intrinsic.Control.ExitSub
	f.Intrinsic.Control.EndIf
	
	
	Gui.ProcessAPConformation.cmdUpdate.Enabled(False)
	gui.frmAPAutomationIndex..Visible(false)
	gui.ProcessAPConformation..Visible(false)
	f.Intrinsic.UI.InvokeWaitDialog("Processing AP Invoices.")
	
	f.Intrinsic.Control.For(v.Local.i,0,v.DataTable.dtApprovedProcessing.RowCount--,1)
'		F.Intrinsic.Control.If(V.DataTable.dtApprovedProcessing(V.Local.i).Sel!fieldval,=,False)
'			F.Intrinsic.Control.Next(V.Local.i)
'		F.Intrinsic.Control.EndIf
		'f.Intrinsic.Debug.ShowCallerInfo
		'post date
		v.Local.sPostDate.set(v.Screen.ProcessAPConformation!datepicker.Value)
		f.Intrinsic.String.Format(v.Local.sPostDate,"MMDDYY",v.Local.sPostDate)
		'DOCID
		v.Local.sDOCID.Set(v.DataTable.dtApprovedProcessing(v.Local.i).DOCID!fieldval)
		'PORCVR
		v.Local.sPORcvr.Set(v.DataTable.dtApprovedProcessing(v.Local.i).PORCVR!fieldval)
		'Vendor 
		v.Local.sVendCode.Set(v.DataTable.dtApprovedProcessing(v.Local.i).VENDCODE!fieldval)
		'Invoice 
		v.Local.sInvoiceNumb.Set(v.DataTable.dtApprovedProcessing(v.Local.i).INVCNUMB!fieldval)
		'Exchange Amount
		v.Local.fExchAmt.Set(v.DataTable.dtApprovedProcessing(v.Local.i).EXCH_AMT!fieldval)
		'InvoiceDate 
		v.Local.dInvcDate.Set(v.DataTable.dtApprovedProcessing(v.Local.i).INVCDATE!fieldval)
		v.Local.sInvcDate.Set(v.DataTable.dtApprovedProcessing(v.Local.i).INVCDATE!fieldval)
		f.Intrinsic.String.Format(v.Local.sInvcDate,"MMDDYY",v.Local.sInvcDate)
		'Vendor Currency
		F.Intrinsic.Control.If(v.DataTable.dtApprovedProcessing(v.Local.i).EXCH_CURR!Fieldvaltrim,=,"")
			V.Local.sVendCurrency.Set(V.Local.sCompCurrency)
		f.Intrinsic.Control.Else
			v.Local.sVendCurrency.Set(v.DataTable.dtApprovedProcessing(v.Local.i).EXCH_CURR!Fieldvaltrim)
		F.Intrinsic.Control.EndIf
		'Receipt Amount
		v.Local.fReceivedAmount.Set(v.DataTable.dtApprovedProcessing(v.Local.i).RECEIVED_AMT!fieldval)
		'Actual Amount
		f.Intrinsic.Control.If(v.Local.sVendCurrency.Trim,<>,v.Local.sCompCurrency.Trim)
			v.Local.fActualAmount.Set(v.DataTable.dtApprovedProcessing(v.Local.i).EXCH_AMT!fieldval)
		f.Intrinsic.Control.Else
			v.Local.fActualAmount.Set(v.DataTable.dtApprovedProcessing(v.Local.i).ACTUAL_AMT!fieldval)
		f.Intrinsic.Control.EndIf
		'SUBTOTAL
		v.Local.fSubtotal.Set(v.DataTable.dtApprovedProcessing(v.Local.i).SUBTOTAL!fieldval)
		'GLAccount 
		v.Local.sGLAccount.Set(v.DataTable.dtApprovedProcessing(v.Local.i).GLACCOUNT!fieldval)
		'TaxableFlag 
		v.Local.bTaxable.Set(v.DataTable.dtApprovedProcessing(v.Local.i).TAXABLEFLAG!fieldval)
		f.Intrinsic.Control.If(v.Local.bTaxable)
			v.Local.sTaxable.Set("Y")
		f.Intrinsic.Control.Else
			v.Local.sTaxable.Set("N")
		f.Intrinsic.Control.EndIf 
		'TaxCode
		v.Local.sTaxCode.Set(v.DataTable.dtApprovedProcessing(v.Local.i).TAXCODE!fieldval)
		'BookSelfTax 
		v.Local.bBookTax.Set(v.DataTable.dtApprovedProcessing(v.Local.i).BookSelfTax!fieldval)
		f.Intrinsic.Control.If(v.Local.bBookTax)
			v.Local.sBookTax.Set("Y")
		f.Intrinsic.Control.Else
			v.Local.sBookTax.Set("N")
		f.Intrinsic.Control.EndIf
		'WorkOrder 
		v.Local.sJob.Set(v.DataTable.dtApprovedProcessing(v.Local.i).JOB!fieldval)
		'WorkSuff 
		v.Local.sSuffix.Set(v.DataTable.dtApprovedProcessing(v.Local.i).SUFFIX!fieldval)
		'WorkSeq 
		v.Local.sSEQ.Set(v.DataTable.dtApprovedProcessing(v.Local.i).SEQ!fieldval)
		'Branch 
		v.Local.sBranch.Set(v.DataTable.dtApprovedProcessing(v.Local.i).BRANCH!fieldval)
		'PurchaseOrder 
		v.local.sPOHead.Set(v.DataTable.dtApprovedProcessing(v.Local.i).POHEAD!fieldval)
		f.Intrinsic.Control.If(v.Local.sPOHead.Trim,=,"MULTIPO")
			v.Local.sPOHead.Set(v.DataTable.dtApprovedProcessing(v.Local.i).PACKINGLIST!Fieldvaltrim)
		f.Intrinsic.Control.EndIf
		'PurchaseOrderLine 
		v.Local.sPOLine.Set(v.DataTable.dtApprovedProcessing(v.Local.i).POLINE!fieldval)
		'PurchaseUoM 
		v.Local.sPurchaseUM.Set(v.DataTable.dtApprovedProcessing(v.Local.i).POUM!fieldval)
		'InvoiceQuantity 
		v.Local.fInvoiceQTY.Set(v.DataTable.dtApprovedProcessing(v.Local.i).QUANTITY!fieldval)
		'Extended Amount
		f.Intrinsic.Control.If(v.Local.sVendCurrency.Trim,<>,v.Local.sCompCurrency.Trim)
			'Don't think variance amount is being used, might delete out.
			f.Intrinsic.Math.Mult(v.Local.fInvoiceQTY,v.Local.fExchAmt,v.Local.fExtendedAmount)
			f.Intrinsic.Math.Round(v.Local.fExtendedAmount,2,v.Local.fExtendedAmount)
			'Variance Amount Calculation
			f.Intrinsic.Math.Sub(v.Local.fActualAmount,v.Local.fExtendedAmount,v.Local.fVariance)
		f.Intrinsic.Control.Else
			f.Intrinsic.Math.Mult(v.Local.fInvoiceQTY,v.Local.fReceivedAmount,v.Local.fExtendedAmount)
			f.Intrinsic.Math.Round(v.Local.fExtendedAmount,2,v.Local.fExtendedAmount)
			'Variance Amount Calculation
			f.Intrinsic.Math.Sub(v.Local.fActualAmount,v.Local.fExtendedAmount,v.Local.fVariance)
		f.Intrinsic.Control.Else
		
		f.Intrinsic.Control.EndIf
		'Buyer 
		v.Local.sBuyer.Set(v.DataTable.dtApprovedProcessing(v.Local.i).BUYER!fieldval)
		'Voucher 
		v.Local.sVoucher.Set(v.DataTable.dtApprovedProcessing(v.Local.i).VOUCHER!fieldval)
		'VatTaxRule
		v.Local.sVatRule.Set(v.DataTable.dtApprovedProcessing(v.Local.i).VAT!fieldval)
		'Part 
		v.Local.sPartNumb.Set(v.DataTable.dtApprovedProcessing(v.Local.i).PART!fieldval)
		'Location 
		v.Local.sLocation.Set(v.DataTable.dtApprovedProcessing(v.Local.i).LOCATION!fieldval)
		'CostType 
		v.Local.sCostType.Set(v.DataTable.dtApprovedProcessing(v.Local.i).COSTTYPE!fieldval)
		'InvoiceNotes 
		v.Local.sNotes.Set(v.DataTable.dtApprovedProcessing(v.Local.i).NOTES!fieldval)
		f.Intrinsic.String.Replace(v.Local.sNotes,v.Ambient.NewLine,"",v.Local.sNotes)
		'Line ID
		v.Local.sAPApproveID.Set(v.DataTable.dtApprovedProcessing(v.Local.i).APApproveID!fieldval)
		'invoice Type
		v.Local.sinvoiceType.Set(v.DataTable.dtApprovedProcessing(v.Local.i).INVOICETYPE!fieldval)
		'docsavedlocation
		'f.Intrinsic.Debug.ShowCallerInfo
		v.Local.sDOCSAVEDLOCATION.Set(v.DataTable.dtApprovedProcessing(v.Local.i).docsavedlocation!fieldval)
		f.Intrinsic.Control.CallSub(createDocumentLink,"FilePath",v.Local.sDOCSAVEDLOCATION,"Vendor",v.Local.sVendCode,"Invoice",v.Local.sInvoiceNumb)
		
		'cHECK EXCHANGE DATE
		f.Intrinsic.Control.If(v.Local.sVendCurrency.Trim,<>,v.Local.sCompCurrency.Trim)
			f.Intrinsic.String.Build("SELECT * FROM V_EXCHANGE_RATES WHERE TO_ISO_CODE='{0}' AND DATE_EXCH_RATE='{1}'",v.Local.sVendCurrency.Trim,v.Local.dInvcDate.PervasiveDate,v.Local.ssql)
			f.ODBC.Connection!con5564.ExecuteAndReturn(v.Local.ssql,v.Local.sret)
			f.Intrinsic.Control.If(v.Local.sret.Trim,=,"")
				V.Local.bIgnore.Set(True)
				f.Intrinsic.String.Concat("Invoice ",v.Local.sInvoiceNumb," does not have exchange rate setup.  Record rejected.", v.Local.sMessage)
				f.Intrinsic.String.Concat(v.Local.sFinalMessage,v.Local.sMessage,v.Ambient.NewLine,v.Local.sFinalMessage)
				
			f.Intrinsic.Control.EndIf
		f.Intrinsic.Control.EndIf
		
		'Check Vendor
		F.Intrinsic.Control.If(v.Local.sPOHead.Trim,<>,"")
			F.Intrinsic.Control.If(V.Local.sPOHead.Trim,<>,"MULTIPO")
				f.Intrinsic.Control.CallSub(checkVendorMatches,"PO",v.Local.sPOHead,"Receiver",v.Local.sPORcvr)
				f.Intrinsic.Variable.ArgToVar("rVendor",v.Local.sVendorCheck)
				f.Intrinsic.Control.If(v.Local.sVendorCheck.Trim,<>,"")
				f.Intrinsic.Control.AndIf(v.Local.sinvoiceType.Trim,=,"a")
					F.Intrinsic.Control.If(V.Local.sVendorCheck.Trim,<>,V.Local.sVendCode.Trim)
						V.Local.bIgnore.Set(True)
						f.Intrinsic.String.Concat("Vendor does not match on invoice ",v.Local.sInvoiceNumb,".  Record rejected.", v.Local.sMessage)
						f.Intrinsic.String.Concat(v.Local.sFinalMessage,v.Local.sMessage,v.Ambient.NewLine,v.Local.sFinalMessage)
					F.Intrinsic.Control.EndIf
				f.Intrinsic.Control.EndIf
			F.Intrinsic.Control.EndIf
		F.Intrinsic.Control.EndIf
		
		'Job
		F.Intrinsic.Control.If(v.Local.sJob.Trim,<>,"")
			f.Intrinsic.Control.CallSub(checkJobExists,"JOB",v.Local.sJob,"SUFFIX",v.Local.sSuffix,"SEQ",v.Local.sSEQ)
			f.Intrinsic.Variable.ArgToVar("rJobCheck",v.Local.sJobCheck)
			f.Intrinsic.Control.If(v.Local.sJobCheck.Trim,=,"No Job")
				v.Local.bIgnore.Set(True)
				f.Intrinsic.String.Concat("Job does not exist on invoice ",v.Local.sInvoiceNumb,".  Record rejected.", v.Local.sMessage)
				f.Intrinsic.String.Concat(v.Local.sFinalMessage,v.Local.sMessage,v.Ambient.NewLine,v.Local.sFinalMessage)
			f.Intrinsic.Control.EndIf
		F.Intrinsic.Control.EndIf
		
		'Tax Code
		F.Intrinsic.Control.If(V.Local.sTaxCode.Trim,=,"")
			V.Local.bIgnore.Set(TRUE)
			f.Intrinsic.String.Concat("Tax code not present on invoice ",v.Local.sInvoiceNumb,".  Record rejected.", v.Local.sMessage)
			f.Intrinsic.String.Concat(v.Local.sFinalMessage,v.Local.sMessage,v.Ambient.NewLine,v.Local.sFinalMessage)
		F.Intrinsic.Control.EndIf
		
		f.Intrinsic.Control.If(v.Local.bIgnore,=,False)
			f.Intrinsic.Control.If(v.Local.sinvoiceType,=,"i")
				'if only one line then eubtract gst fron total
				v.Local.bhasinvoice.Set(True)
				f.Data.DataTable.AddRow("AP043UP1","PostDate",v.Local.sPostDate,"Vendor",v.Local.sVendCode,"Invoice",v.Local.sInvoiceNumb,"InvoiceDate",v.Local.sInvcDate,"Amount",v.Local.fActualAmount,"GLAccount",v.Local.sGLAccount,"TaxableFlag",v.Local.sTaxable,"TaxCode",v.Local.sTaxCode,"InvoiceNotes",v.Local.sNotes,"BookSelfAccessTax",v.Local.sBookTax,"WorkOrder",v.Local.sJob,"WorkSuff",v.Local.sSuffix,"WorkSeq",v.Local.sSEQ,"Branch",v.Local.sBranch,"PurchaseOrder",v.local.sPOHead,"Buyer",v.Local.sBuyer,"Voucher",v.Local.sVoucher)			
			f.Intrinsic.Control.ElseIf(v.Local.sinvoiceType,=,"a")
				v.Local.bhasaccural.Set(True)
				
				f.Data.DataTable.AddRow("AP043RIA","PostDate",v.Local.sPostDate,"Vendor",v.Local.sVendCode,"Invoice",v.Local.sInvoiceNumb,"InvoiceDate",v.Local.sInvcDate,"Amount",v.Local.fActualAmount,"GLAccount",v.Local.sGLAccount,"TaxableFlag",v.Local.sTaxable,"TaxCode",v.Local.sTaxCode,"BookSelfAccessTax",v.Local.sBookTax,"WorkOrder",v.Local.sJob,"WorkSuff",v.Local.sSuffix,"WorkSeq",v.Local.sSEQ,"Branch",v.Local.sBranch,"PurchaseOrder",v.local.sPOHead,"PurchaseOrderLine",v.Local.sPOLine,"PurchaseUoM",v.Local.sPurchaseUM,"Receiver",v.Local.sPORcvr,"InvoiceQuantity",v.Local.fInvoiceQTY,"Buyer",v.Local.sBuyer,"Voucher",v.Local.sVoucher,"VatTaxRule",v.Local.sVatRule,"Part",v.Local.sPartNumb,"Location",v.Local.sLocation,"CostType",v.Local.sCostType,"InvoiceNotes",v.Local.sNotes)
			f.Intrinsic.Control.EndIf
			
			'updating the head table to status processes and making the line as posted
			f.Intrinsic.String.Build("UPDATE GAB_5564_AP_SA SET POSTED=1 WHERE APApproveID={0}",v.Local.sAPApproveID,v.Local.ssql)
			f.ODBC.Connection!con5564.Execute(v.Local.ssql)
		
			v.Local.dLocaldate.Declare
			v.Local.dLocaldate.Set(v.Ambient.Date)
			f.Intrinsic.String.Build("UPDATE GAB_5564_AP_HEAD SET PROCESSED=1, GSSStatus='processed', processeddate='{1}'  WHERE DocID='{0}'",v.Local.sDOCID,v.Local.dLocaldate.PervasiveDate,v.Local.ssql) 
			f.ODBC.Connection!con5564.Execute(v.Local.ssql)
		f.Intrinsic.Control.EndIf
		v.Local.bIgnore.Set(False)
	f.Intrinsic.Control.Next(v.Local.i)
	
	f.Intrinsic.Control.If(v.Local.sFinalMessage.Trim,<>,"")
		f.Intrinsic.UI.Msgbox(v.Local.sFinalMessage)
	f.Intrinsic.Control.EndIf
	
	f.Intrinsic.Control.If(V.Local.bhasaccural,=,True)
		f.Intrinsic.UI.InvokeWaitDialog("Uploading AP Invoice/Accruals.")
		f.Intrinsic.Control.CallSub(AP043RIASync) 'CREATES THE BATCH
	f.Intrinsic.Control.EndIf
	
	f.Intrinsic.Control.If(V.Local.bhasinvoice,=,True)
		f.Intrinsic.UI.InvokeWaitDialog("Uploading AP Invoices.")
		f.Intrinsic.Control.CallSub(AP043UP1Sync) 'CREATES THE BATCH
	f.Intrinsic.Control.EndIf
	
	'Set all targets to 0, don't like this but need to do it for this to work
	f.ODBC.Connection!con5564.execute("UPDATE AP_OPEN_BATCHES SET TARGET_AMOUNT=0")
	
	'Verify the tax calculations
	f.Intrinsic.UI.InvokeWaitDialog("Running Batch Cleanup.")
	f.Intrinsic.Control.CallSub(checkTaxAfterInvoiceUpload)
	
	f.Intrinsic.UI.InvokeWaitDialog("Executing Post Batch & Exiting.")
	F.Global.General.CallWrapperASync("50","AP0081") 'POST BACTCH
	f.Intrinsic.UI.CloseWaitDialog
	
	f.Intrinsic.Control.CallSub(frmUnload)
	
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry

Program.Sub.frmAPAutomationIndex_SaveButtonClick.End


Program.Sub.checkJobExists.Start
f.Intrinsic.Control.Try
	v.Local.ssql.Declare
	v.Local.sret.Declare
	v.Local.sJob.Declare
	v.Local.sResult.Declare
	f.Intrinsic.String.Build("SELECT JOB FROM V_JOB_OPERATIONS WHERE JOB='{0}' AND SUFFIX='{1}' AND SEQ='{2}'",v.Args.Job,v.Args.Suffix,v.Args.Seq,v.Local.ssql)
	f.ODBC.Connection!con5564.ExecuteAndReturn(v.Local.ssql,v.Local.sJob)
	f.Intrinsic.Control.If(v.Local.sJob.Trim,=,"")
		v.Local.sResult.Set("No Job")
	f.Intrinsic.Control.Else
		v.Local.sResult.Set("")
	f.Intrinsic.Control.EndIf
	f.Intrinsic.Variable.AddRV("rJobCheck",v.Local.sresult)
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.checkJobExists.End

Program.Sub.checkVendorMatches.Start
f.Intrinsic.Control.Try
	v.Local.sSql.Declare
	v.Local.sVendor.Declare
	f.Intrinsic.String.Build("SELECT DISTINCT vendor from PO_RECEIVER WHERE PURCHASE_ORDER='{0}' AND RIGHT(RECEIVER_NO,1)='A' AND RECEIVER_NO='{1}'",v.Args.PO,V.Args.Receiver,v.Local.sSql)
	f.ODBC.Connection!con5564.ExecuteAndReturn(v.Local.sSql,v.Local.sVendor)
	f.Intrinsic.Variable.AddRV("rVendor",v.Local.sVendor)
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.checkVendorMatches.End


Program.Sub.frmAPAutomationIndex_UserButtonClicked.Start
f.Intrinsic.Control.Try
	f.Intrinsic.Control.SelectCase(v.Args.Button)
		f.Intrinsic.Control.Case("ReceivePO")
			F.Intrinsic.Control.CallSub(disableAll)
			f.Global.General.CallWrapperASync(50,"PUR100GI")
			f.Intrinsic.Control.CallSub(enableAll)
			gui.frmAPAutomationIndex..SetFocus(1)
			
		f.Intrinsic.Control.Case("APBatch")
			F.Intrinsic.Control.CallSub(disableAll)
			f.Global.General.CallWrapperSync(50,"AP0041")
			f.Global.General.CallWrapperSync(50,"AP0081")
			f.Intrinsic.Control.CallSub(enableAll)
			gui.frmAPAutomationIndex..SetFocus(1)
	f.Intrinsic.Control.EndSelect
	
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	f.Intrinsic.Control.CallSub(frmUnload)
f.Intrinsic.Control.EndTry
Program.Sub.frmAPAutomationIndex_UserButtonClicked.End

#End Region ' Dashboard Form Bar Button Events

#Region "Unload"
Program.Sub.Form_Unload.Start
f.Intrinsic.Control.Try
	gui.Form..Visible(False)
	gui.frmAPAutomationIndex..SetFocus(1)

	
	f.Intrinsic.Control.CallSub(subPOSTDocumentRedownload)	
	
	'Soft refresh the data
	f.Intrinsic.Control.CallSub(loadInvoiceDetail,"InvoiceNumber",v.Screen.frmAPAutomationIndex!txtInvNum.text,"PurchaseOrder",v.Screen.frmAPAutomationIndex!txtPORef.text,"Status","queue","Vendor",v.Screen.frmAPAutomationIndex!txtVendCode.text)
	
	'Do the extra checks / calcs
	f.Intrinsic.Control.CallSub(checkXrefSuppPORec)
	
	F.Intrinsic.Control.CallSub(calcTaxGrandTotal, "XRef",True)
	
	F.Intrinsic.Control.CallSub(calcVariance)
	
	'Enable Controls
	f.Intrinsic.Control.CallSub(EnableAll)
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	f.Intrinsic.Control.CallSub(unload)
f.Intrinsic.Control.EndTry
Program.Sub.Form_Unload.End

Program.Sub.frmUnload.Start
'Gui.frmAPAutomationIndex..SaveSettings

f.Intrinsic.Control.If(v.Global.bUploadSwitch,<>,False)
	F.Intrinsic.Control.CallSub(SerializeAll)
f.Intrinsic.Control.EndIf

f.odbc.Connection!con5564.Close
F.Intrinsic.Control.End
Program.Sub.frmUnload.End

program.Sub.unload.Start
f.ODBC.Connection!con5564.Close
f.Intrinsic.Control.End
program.Sub.unload.End

#End Region ' Unload

Program.Sub.setGSSVendorFormatColour.Start
f.Intrinsic.Control.Try
	v.Local.bVendorCheck.Declare
	v.Local.bVendorCheck.Set(v.Args.VendorCheck)
	F.Intrinsic.Control.If(v.Local.bVendorCheck,=,True)
		gui.frmAPAutomationIndex.lblCreateVendor.Caption("Vendor Found")
		gui.frmAPAutomationIndex.lblCreateVendor.Visible(True)
		gui.frmAPAutomationIndex.lblCreateVendor.ForeColor(v.Enum.ThemeColors!ColorGreen)
	F.Intrinsic.Control.Else
		gui.frmAPAutomationIndex.lblCreateVendor.Caption("Vendor Not Found")
		gui.frmAPAutomationIndex.lblCreateVendor.Visible(True)
		gui.frmAPAutomationIndex.lblCreateVendor.ForeColor(v.Enum.ThemeColors!ColorRed)
	F.Intrinsic.Control.EndIf
f.Intrinsic.Control.Catch
	f.Intrinsic.ui.Msgbox(v.Ambient.ErrorDescription)
	f.Intrinsic.Control.CallSub(frmUnload)
f.Intrinsic.Control.EndTry
Program.Sub.setGSSVendorFormatColour.End

Program.Sub.setGSSXRefFormatColourLink.Start
f.Intrinsic.Control.Try
	v.Local.inothing.Declare
	v.Local.sNewLink.Declare
	v.Local.sLinkTemp.Declare
	v.Local.ssqlUpdatePath.Declare
	v.Local.sVendCode.Declare
	v.Local.sSupplierName.Declare
	v.Local.bXRefCheck1.Declare
	v.Local.bXRefCheck.Declare
	
	v.Local.sSupplierName.Set(v.Args.SupplierName)
	v.Local.sVendCode.Set(v.Args.VendCode)
	v.Local.bXRefCheck1.Set(v.Args.XRefCheck1)
	v.Local.bXRefCheck.Set(v.Args.XRefCheck)
	
	F.Intrinsic.Control.If(v.Local.bXRefCheck1,=,True) 'NEEDS TO CHECK WHAT XREF CHECK IS
		gui.frmAPAutomationIndex.lblXRefConnect.Caption("XRef Found")
		gui.frmAPAutomationIndex.lblXRefConnect.ForeColor(v.Enum.ThemeColors!ColorGreen)
		gui.frmAPAutomationIndex.cmdSupplierXRefSearch.Enabled(false)
	F.Intrinsic.Control.Else
		gui.frmAPAutomationIndex.lblXRefConnect.Caption("XRef Not Found")
		gui.frmAPAutomationIndex.cmdSupplierXRefSearch.Enabled(True)
		gui.frmAPAutomationIndex.lblXRefConnect.Visible(True)
		gui.frmAPAutomationIndex.lblXRefConnect.ForeColor(v.Enum.ThemeColors!ColorRed)
	F.Intrinsic.Control.EndIf
	
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	f.Intrinsic.Control.CallSub(frmUnload)
f.Intrinsic.Control.EndTry
Program.Sub.setGSSXRefFormatColourLink.End

#Region "Loadgv"

Program.Sub.setProperties.Start
f.Intrinsic.Control.Try
	'Tabs
	'Tab Invoice Queue
	
	gui.frmAPAutomationIndex.gsgcQueue.AddGridviewFromDatatable("gvAPInvQueue","dtAPInvQueue")
	
	gui.frmAPAutomationIndex.gsgcQueue.SetColumnProperty("gvAPInvQueue", "VendName", "AllowEdit", False)
	Gui.frmAPAutomationIndex.gsgcQueue.SetColumnProperty("gvAPInvQueue", "VendName","Caption","Vendor") 
	Gui.frmAPAutomationIndex.gsgcQueue.SetColumnProperty("gvAPInvQueue", "VendName","HeaderFontBold",true)
	Gui.frmAPAutomationIndex.gsgcQueue.SetColumnProperty("gvAPInvQueue", "VendName","HeaderHAlignment","Center")
	gui.frmAPAutomationIndex.gsgcQueue.SetColumnProperty("gvAPInvQueue", "InvcNumb", "AllowEdit", False)
	Gui.frmAPAutomationIndex.gsgcQueue.SetColumnProperty("gvAPInvQueue", "InvcNumb","Caption","Invoice #")
	Gui.frmAPAutomationIndex.gsgcQueue.SetColumnProperty("gvAPInvQueue", "InvcNumb","HeaderFontBold",true)
	Gui.frmAPAutomationIndex.gsgcQueue.SetColumnProperty("gvAPInvQueue", "VendName","HeaderHAlignment","Center")
	gui.frmAPAutomationIndex.gsgcQueue.SetColumnProperty("gvAPInvQueue", "POHEAD", "AllowEdit", False)
	gui.frmAPAutomationIndex.gsgcQueue.SetColumnProperty("gvAPInvQueue", "POHEAD", "Caption", "PO Head")
	Gui.frmAPAutomationIndex.gsgcQueue.SetColumnProperty("gvAPInvQueue", "POHEAD","HeaderFontBold",true)
	gui.frmAPAutomationIndex.gsgcQueue.SetColumnProperty("gvAPInvQueue", "POHEAD", "ReadOnly", True)
	Gui.frmAPAutomationIndex.gsgcQueue.SetColumnProperty("gvAPInvQueue", "POHEAD","HeaderHAlignment","Center")
	gui.frmAPAutomationIndex.gsgcQueue.SetColumnProperty("gvAPInvQueue", "INVCDATE", "Visible", True)
	Gui.frmAPAutomationIndex.gsgcQueue.SetColumnProperty("gvAPInvQueue", "INVCDATE","HeaderHAlignment","Center")
	gui.frmAPAutomationIndex.gsgcQueue.SetColumnProperty("gvAPInvQueue", "INVCDATE", "ReadOnly", True)
	gui.frmAPAutomationIndex.gsgcQueue.SetColumnProperty("gvAPInvQueue", "INVCDATE", "AllowEdit", False)
	Gui.frmAPAutomationIndex.gsgcQueue.SetColumnProperty("gvAPInvQueue", "INVCDATE","Caption","Date")
	Gui.frmAPAutomationIndex.gsgcQueue.SetColumnProperty("gvAPInvQueue", "INVCDATE","HeaderFontBold",true)
	Gui.frmAPAutomationIndex.gsgcQueue.SetColumnProperty("gvAPInvQueue", "INVCDATE",V.Enum.ColumnPropertyNames!DisplayCustomDateTime,"d")
	
	gui.frmAPAutomationIndex.gsgcQueue.SetColumnProperty("gvAPInvQueue", "NOTES", "AllowEdit", False)
	gui.frmAPAutomationIndex.gsgcQueue.SetColumnProperty("gvAPInvQueue", "NOTES", "Caption", "Notes")
	Gui.frmAPAutomationIndex.gsgcQueue.SetColumnProperty("gvAPInvQueue", "NOTES","HeaderFontBold",true)
	gui.frmAPAutomationIndex.gsgcQueue.SetColumnProperty("gvAPInvQueue", "NOTES", "ReadOnly", True)
	Gui.frmAPAutomationIndex.gsgcQueue.SetColumnProperty("gvAPInvQueue", "NOTES","HeaderHAlignment","Center")
	gui.frmAPAutomationIndex.gsgcQueue.SetColumnProperty("gvAPInvQueue", "NOTES", "Visible", False)
	
	gui.frmAPAutomationIndex.gsgcQueue.SetColumnProperty("gvAPInvQueue", "DocSavedLocation","Visible", False)
	Gui.frmAPAutomationIndex.gsgcQueue.SetColumnProperty("gvAPInvQueue", "DocSavedLocation","HeaderHAlignment","Center")
	gui.frmAPAutomationIndex.gsgcQueue.SetColumnProperty("gvAPInvQueue", "GSTTOTAL", "Visible", False)
	Gui.frmAPAutomationIndex.gsgcQueue.SetColumnProperty("gvAPInvQueue", "GSTTOTAL","HeaderHAlignment","Center")
	gui.frmAPAutomationIndex.gsgcQueue.SetColumnProperty("gvAPInvQueue", "DOCID", "Visible", False)
	Gui.frmAPAutomationIndex.gsgcQueue.SetColumnProperty("gvAPInvQueue", "DOCID","HeaderHAlignment","Center")
	gui.frmAPAutomationIndex.gsgcQueue.SetColumnProperty("gvAPInvQueue", "SUBTOTAL", "Visible", False)
	Gui.frmAPAutomationIndex.gsgcQueue.SetColumnProperty("gvAPInvQueue", "SUBTOTAL","HeaderHAlignment","Center")
	gui.frmAPAutomationIndex.gsgcQueue.SetColumnProperty("gvAPInvQueue", "GRSTOTAL", "Visible", False)
	Gui.frmAPAutomationIndex.gsgcQueue.SetColumnProperty("gvAPInvQueue", "GRSTOTAL","HeaderHAlignment","Center")
	gui.frmAPAutomationIndex.gsgcQueue.SetColumnProperty("gvAPInvQueue", "GssStatus", "Visible", False)
	Gui.frmAPAutomationIndex.gsgcQueue.SetColumnProperty("gvAPInvQueue", "GssStatus","HeaderHAlignment","Center")
	gui.frmAPAutomationIndex.gsgcQueue.SetColumnProperty("gvAPInvQueue", "VENDCODE", "Visible", False)
	Gui.frmAPAutomationIndex.gsgcQueue.SetColumnProperty("gvAPInvQueue", "VENDCODE","HeaderHAlignment","Center")
	gui.frmAPAutomationIndex.gsgcQueue.SetColumnProperty("gvAPInvQueue", "ID", "Visible", False)
	'Tab Invoice Rejected
	gui.frmAPAutomationIndex.gsgcReject.AddGridviewFromDatatable("gvAPInvRejected","dtAPInvReject")
	
	gui.frmAPAutomationIndex.gsgcReject.SetColumnProperty("gvAPInvRejected", "NOTES", "AllowEdit", False)
	gui.frmAPAutomationIndex.gsgcReject.SetColumnProperty("gvAPInvRejected", "NOTES", "Caption", "Notes")
	Gui.frmAPAutomationIndex.gsgcReject.SetColumnProperty("gvAPInvRejected", "NOTES","HeaderFontBold",true)
	gui.frmAPAutomationIndex.gsgcReject.SetColumnProperty("gvAPInvRejected", "NOTES", "ReadOnly", True)
	Gui.frmAPAutomationIndex.gsgcReject.SetColumnProperty("gvAPInvRejected", "NOTES","HeaderHAlignment","Center")
	gui.frmAPAutomationIndex.gsgcReject.SetColumnProperty("gvAPInvRejected", "NOTES", "Visible", False)
	
	gui.frmAPAutomationIndex.gsgcReject.SetColumnProperty("gvAPInvRejected", "VendName", "AllowEdit", False)
	Gui.frmAPAutomationIndex.gsgcReject.SetColumnProperty("gvAPInvRejected", "VendName","Caption","Vendor")
	Gui.frmAPAutomationIndex.gsgcReject.SetColumnProperty("gvAPInvRejected", "VendName","HeaderFontBold",true)
	Gui.frmAPAutomationIndex.gsgcReject.SetColumnProperty("gvAPInvRejected", "VendName","HeaderHAlignment","Center")
	gui.frmAPAutomationIndex.gsgcReject.SetColumnProperty("gvAPInvRejected", "InvcNumb", "AllowEdit", False)
	Gui.frmAPAutomationIndex.gsgcReject.SetColumnProperty("gvAPInvRejected", "InvcNumb","Caption","Invoice #")
	Gui.frmAPAutomationIndex.gsgcReject.SetColumnProperty("gvAPInvRejected", "InvcNumb","HeaderFontBold",true)
	Gui.frmAPAutomationIndex.gsgcReject.SetColumnProperty("gvAPInvRejected", "InvcNumb","HeaderHAlignment","Center")
	gui.frmAPAutomationIndex.gsgcReject.SetColumnProperty("gvAPInvRejected", "DocSavedLocation", "Visible", False)
	Gui.frmAPAutomationIndex.gsgcReject.SetColumnProperty("gvAPInvRejected", "DocSavedLocation","HeaderHAlignment","Center")
	gui.frmAPAutomationIndex.gsgcReject.SetColumnProperty("gvAPInvRejected", "GSTTOTAL", "Visible", False)
	Gui.frmAPAutomationIndex.gsgcReject.SetColumnProperty("gvAPInvRejected", "GSTTOTAL","HeaderHAlignment","Center")
	gui.frmAPAutomationIndex.gsgcReject.SetColumnProperty("gvAPInvRejected", "SUBTOTAL", "Visible", False)
	Gui.frmAPAutomationIndex.gsgcReject.SetColumnProperty("gvAPInvRejected", "SUBTOTAL","HeaderHAlignment","Center")
	gui.frmAPAutomationIndex.gsgcReject.SetColumnProperty("gvAPInvRejected", "GRSTOTAL", "Visible", False)
	Gui.frmAPAutomationIndex.gsgcReject.SetColumnProperty("gvAPInvRejected", "GRSTOTAL","HeaderHAlignment","Center")
	gui.frmAPAutomationIndex.gsgcReject.SetColumnProperty("gvAPInvRejected", "DOCID", "Visible", False)
	Gui.frmAPAutomationIndex.gsgcReject.SetColumnProperty("gvAPInvRejected", "DOCID","HeaderHAlignment","Center")
	gui.frmAPAutomationIndex.gsgcReject.SetColumnProperty("gvAPInvRejected", "INVCDATE", "Visible", False)
	Gui.frmAPAutomationIndex.gsgcReject.SetColumnProperty("gvAPInvRejected", "INVCDATE","HeaderHAlignment","Center")
	gui.frmAPAutomationIndex.gsgcReject.SetColumnProperty("gvAPInvRejected", "GssStatus", "Visible", False)
	Gui.frmAPAutomationIndex.gsgcReject.SetColumnProperty("gvAPInvRejected", "GssStatus","HeaderHAlignment","Center")
	gui.frmAPAutomationIndex.gsgcReject.SetColumnProperty("gvAPInvRejected", "RejectReason","AllowEdit", False)
	Gui.frmAPAutomationIndex.gsgcReject.SetColumnProperty("gvAPInvRejected", "RejectReason","Caption","Reason")
	Gui.frmAPAutomationIndex.gsgcReject.SetColumnProperty("gvAPInvRejected", "RejectReason","HeaderFontBold",true)
	Gui.frmAPAutomationIndex.gsgcReject.SetColumnProperty("gvAPInvRejected", "RejectReason","HeaderHAlignment","Center")
	gui.frmAPAutomationIndex.gsgcReject.SetColumnProperty("gvAPInvRejected", "POHEAD", "AllowEdit", False)
	gui.frmAPAutomationIndex.gsgcReject.SetColumnProperty("gvAPInvRejected", "POHEAD", "Caption", "PO Head")
	Gui.frmAPAutomationIndex.gsgcReject.SetColumnProperty("gvAPInvRejected", "POHEAD","HeaderFontBold",true)
	Gui.frmAPAutomationIndex.gsgcReject.SetColumnProperty("gvAPInvRejected", "POHEAD","HeaderHAlignment","Center")
	gui.frmAPAutomationIndex.gsgcReject.SetColumnProperty("gvAPInvRejected", "VENDCODE", "Visible", False)
	Gui.frmAPAutomationIndex.gsgcReject.SetColumnProperty("gvAPInvRejected", "VENDCODE","HeaderHAlignment","Center")
	gui.frmAPAutomationIndex.gsgcReject.SetColumnProperty("gvAPInvRejected", "ID", "Visible", False)
	'Tab Invoice Approved
	gui.frmAPAutomationIndex.gsgcApproved.AddGridviewFromDatatable("gvAPInvApproved","dtAPInvApproved")
	
	gui.frmAPAutomationIndex.gsgcApproved.Setgridviewproperty("gvAPInvApproved","multiselect",true)
	gui.frmAPAutomationIndex.gsgcApproved.Setgridviewproperty("gvAPInvApproved","multiselectmode",2)
	gui.frmAPAutomationIndex.gsgcApproved.Setgridviewproperty("gvAPInvApproved","CheckBoxSelectorField","Sel")
	
	gui.frmAPAutomationIndex.gsgcApproved.SetColumnProperty("gvAPInvApproved", "Sel","AllowEdit", True)
	Gui.frmAPAutomationIndex.gsgcApproved.SetColumnProperty("gvAPInvApproved", "Sel","Caption","")
	Gui.frmAPAutomationIndex.gsgcApproved.SetColumnProperty("gvAPInvApproved", "Sel","HeaderFontBold",true)
	Gui.frmAPAutomationIndex.gsgcApproved.SetColumnProperty("gvAPInvApproved", "Sel","HeaderHAlignment","Center")
	gui.frmAPAutomationIndex.gsgcApproved.SetColumnProperty("gvAPInvApproved", "Sel", "AllowEdit", True)
	gui.frmAPAutomationIndex.gsgcApproved.SetColumnProperty("gvAPInvApproved", "Sel", "ReadOnly", False)
	gui.frmAPAutomationIndex.gsgcApproved.SetColumnProperty("gvAPInvApproved", "Sel", "Visible", False)
	
	gui.frmAPAutomationIndex.gsgcApproved.SetColumnProperty("gvAPInvApproved", "NOTES", "AllowEdit", False)
	gui.frmAPAutomationIndex.gsgcApproved.SetColumnProperty("gvAPInvApproved", "NOTES", "Caption", "Notes")
	Gui.frmAPAutomationIndex.gsgcApproved.SetColumnProperty("gvAPInvApproved", "NOTES","HeaderFontBold",true)
	gui.frmAPAutomationIndex.gsgcApproved.SetColumnProperty("gvAPInvApproved", "NOTES", "ReadOnly", True)
	Gui.frmAPAutomationIndex.gsgcApproved.SetColumnProperty("gvAPInvApproved", "NOTES","HeaderHAlignment","Center")
	gui.frmAPAutomationIndex.gsgcApproved.SetColumnProperty("gvAPInvApproved", "NOTES", "Visible", False)
	
	gui.frmAPAutomationIndex.gsgcApproved.SetColumnProperty("gvAPInvApproved", "VendName", "AllowEdit", False)
	Gui.frmAPAutomationIndex.gsgcApproved.SetColumnProperty("gvAPInvApproved", "VendName","Caption","Vendor")
	Gui.frmAPAutomationIndex.gsgcApproved.SetColumnProperty("gvAPInvApproved", "VendName","HeaderFontBold",true)
	Gui.frmAPAutomationIndex.gsgcApproved.SetColumnProperty("gvAPInvApproved", "VendName","HeaderHAlignment","Center")
	Gui.frmAPAutomationIndex.gsgcApproved.SetColumnProperty("gvAPInvApproved", "VendName","Visible","False")
	gui.frmAPAutomationIndex.gsgcApproved.SetColumnProperty("gvAPInvApproved", "InvcNumb", "AllowEdit", False)
	Gui.frmAPAutomationIndex.gsgcApproved.SetColumnProperty("gvAPInvApproved", "InvcNumb","Caption","Invoice #")
	Gui.frmAPAutomationIndex.gsgcApproved.SetColumnProperty("gvAPInvApproved", "InvcNumb","HeaderFontBold",true)
	Gui.frmAPAutomationIndex.gsgcApproved.SetColumnProperty("gvAPInvApproved", "InvcNumb","HeaderHAlignment","Center")
	gui.frmAPAutomationIndex.gsgcApproved.SetColumnProperty("gvAPInvApproved", "DocSavedLocation","Visible", False)
	Gui.frmAPAutomationIndex.gsgcApproved.SetColumnProperty("gvAPInvApproved", "DocSavedLocation","HeaderHAlignment","Center")
	gui.frmAPAutomationIndex.gsgcApproved.SetColumnProperty("gvAPInvApproved", "GSTTOTAL", "Visible", True)
	Gui.frmAPAutomationIndex.gsgcApproved.SetColumnProperty("gvAPInvApproved", "GSTTOTAL","HeaderHAlignment","Center")
	Gui.frmAPAutomationIndex.gsgcApproved.SetColumnProperty("gvAPInvApproved", "GSTTOTAL","HeaderFontBold",true)
	Gui.frmAPAutomationIndex.gsgcApproved.SetColumnProperty("gvAPInvApproved", "GSTTOTAL","Caption","GST Total")
	Gui.frmAPAutomationIndex.gsgcApproved.SetColumnProperty("gvAPInvApproved", "GSTTOTAL", "AllowEdit", False)

	gui.frmAPAutomationIndex.gsgcApproved.SetColumnProperty("gvAPInvApproved", "SUBTOTAL", "Visible", True)
	Gui.frmAPAutomationIndex.gsgcApproved.SetColumnProperty("gvAPInvApproved", "SUBTOTAL","Caption","Subtotal")
	Gui.frmAPAutomationIndex.gsgcApproved.SetColumnProperty("gvAPInvApproved", "SUBTOTAL","HeaderHAlignment","Center")
	Gui.frmAPAutomationIndex.gsgcApproved.SetColumnProperty("gvAPInvApproved", "SUBTOTAL","HeaderFontBold",true)
	Gui.frmAPAutomationIndex.gsgcApproved.SetColumnProperty("gvAPInvApproved", "SUBTOTAL","HeaderHAlignment","Center")
	gui.frmAPAutomationIndex.gsgcApproved.SetColumnProperty("gvAPInvApproved", "SUBTOTAL", "AllowEdit", False)
	gui.frmAPAutomationIndex.gsgcApproved.SetColumnProperty("gvAPInvApproved", "DOCID", "Visible", False)
	Gui.frmAPAutomationIndex.gsgcApproved.SetColumnProperty("gvAPInvApproved", "DOCID","HeaderHAlignment","Center")
	gui.frmAPAutomationIndex.gsgcApproved.SetColumnProperty("gvAPInvApproved", "GRSTOTAL", "Visible", True)
	Gui.frmAPAutomationIndex.gsgcApproved.SetColumnProperty("gvAPInvApproved", "GRSTOTAL","Caption","Invoice Total")
	Gui.frmAPAutomationIndex.gsgcApproved.SetColumnProperty("gvAPInvApproved", "GRSTOTAL","HeaderFontBold",true)
	Gui.frmAPAutomationIndex.gsgcApproved.SetColumnProperty("gvAPInvApproved", "GRSTOTAL","HeaderHAlignment","Center")
	gui.frmAPAutomationIndex.gsgcApproved.SetColumnProperty("gvAPInvApproved", "GRSTOTAL", "AllowEdit", False)
	gui.frmAPAutomationIndex.gsgcApproved.SetColumnProperty("gvAPInvApproved", "VARIANCE", "Visible", fALSE)
	Gui.frmAPAutomationIndex.gsgcApproved.SetColumnProperty("gvAPInvApproved", "VARIANCE","Caption","Rec. Var.")
	Gui.frmAPAutomationIndex.gsgcApproved.SetColumnProperty("gvAPInvApproved", "VARIANCE","HeaderFontBold",true)
	Gui.frmAPAutomationIndex.gsgcApproved.SetColumnProperty("gvAPInvApproved", "VARIANCE","HeaderHAlignment","Center")
	gui.frmAPAutomationIndex.gsgcApproved.SetColumnProperty("gvAPInvApproved", "VARIANCE", "AllowEdit", False)
	gui.frmAPAutomationIndex.gsgcApproved.SetColumnProperty("gvAPInvApproved", "InvVarTotal", "Visible", False)
	Gui.frmAPAutomationIndex.gsgcApproved.SetColumnProperty("gvAPInvApproved", "InvVarTotal","Caption","Batch Total")
	Gui.frmAPAutomationIndex.gsgcApproved.SetColumnProperty("gvAPInvApproved", "InvVarTotal","HeaderFontBold",true)
	Gui.frmAPAutomationIndex.gsgcApproved.SetColumnProperty("gvAPInvApproved", "InvVarTotal","HeaderHAlignment","Center")
	gui.frmAPAutomationIndex.gsgcApproved.SetColumnProperty("gvAPInvApproved", "InvVarTotal", "AllowEdit", False)
	Gui.frmAPAutomationIndex.gsgcApproved.SetColumnProperty("gvAPInvApproved", "INVCDATE","Caption","Date")
	Gui.frmAPAutomationIndex.gsgcApproved.SetColumnProperty("gvAPInvApproved", "INVCDATE","HeaderFontBold",true)
	gui.frmAPAutomationIndex.gsgcApproved.SetColumnProperty("gvAPInvApproved", "INVCDATE", "AllowEdit", False)
	gui.frmAPAutomationIndex.gsgcApproved.SetColumnProperty("gvAPInvApproved", "INVCDATE", "Visible", True)
	Gui.frmAPAutomationIndex.gsgcApproved.SetColumnProperty("gvAPInvApproved", "INVCDATE","HeaderHAlignment","Center")
	'Gui.frmAPAutomationIndex.gsgcApproved.SetColumnProperty("gvAPInvApproved", "INVCDATE",V.Enum.ColumnPropertyNames!DisplayCustomDateTime,"dd/MM/yyyy")
	Gui.frmAPAutomationIndex.gsgcApproved.SetColumnProperty("gvAPInvApproved", "INVCDATE",V.Enum.ColumnPropertyNames!DisplayCustomDateTime,"d")
	gui.frmAPAutomationIndex.gsgcApproved.SetColumnProperty("gvAPInvApproved", "GssStatus", "Visible", False)
	Gui.frmAPAutomationIndex.gsgcApproved.SetColumnProperty("gvAPInvApproved", "GssStatus","HeaderHAlignment","Center")
	gui.frmAPAutomationIndex.gsgcApproved.SetColumnProperty("gvAPInvApproved", "RejectReason", "Visible", False)
	Gui.frmAPAutomationIndex.gsgcApproved.SetColumnProperty("gvAPInvApproved", "RejectReason","HeaderHAlignment","Center")
	gui.frmAPAutomationIndex.gsgcApproved.SetColumnProperty("gvAPInvApproved", "POHEAD", "AllowEdit", False)
	gui.frmAPAutomationIndex.gsgcApproved.SetColumnProperty("gvAPInvApproved", "POHEAD", "Caption", "PO Head")
	Gui.frmAPAutomationIndex.gsgcApproved.SetColumnProperty("gvAPInvApproved", "POHEAD","HeaderFontBold",true)
	Gui.frmAPAutomationIndex.gsgcApproved.SetColumnProperty("gvAPInvApproved", "POHEAD","HeaderHAlignment","Center")
	Gui.frmAPAutomationIndex.gsgcApproved.SetColumnProperty("gvAPInvApproved", "POHEAD","Visible","False")
	gui.frmAPAutomationIndex.gsgcApproved.SetColumnProperty("gvAPInvApproved", "VENDCODE", "Visible", False)
	Gui.frmAPAutomationIndex.gsgcApproved.SetColumnProperty("gvAPInvApproved", "VENDCODE","HeaderHAlignment","Center")
	gui.frmAPAutomationIndex.gsgcApproved.SetColumnProperty("gvAPInvApproved", "InvVarTotal","DisplayCustomNumeric","#,###,###,##0.00")
	gui.frmAPAutomationIndex.gsgcApproved.SetColumnProperty("gvAPInvApproved", "GRSTOTAL","DisplayCustomNumeric","#,###,###,##0.00")
	gui.frmAPAutomationIndex.gsgcApproved.SetColumnProperty("gvAPInvApproved", "GSTTOTAL","DisplayCustomNumeric","#,###,###,##0.00")
	gui.frmAPAutomationIndex.gsgcApproved.SetColumnProperty("gvAPInvApproved", "SUBTOTAL","DisplayCustomNumeric","#,###,###,##0.00")
	gui.frmAPAutomationIndex.gsgcApproved.SetColumnProperty("gvAPInvApproved", "VARIANCE","DisplayCustomNumeric","#,###,###,##0.00")
	gui.frmAPAutomationIndex.gsgcApproved.SetColumnProperty("gvAPInvApproved", "ID", "Visible", False)
	Gui.frmAPAutomationIndex.gsgcApproved.AddSummaryItem("gvAPInvApproved","GRSTOTAL","Sum_GRSTOTAL","Sum","","","n")
	Gui.frmAPAutomationIndex.gsgcApproved.AddSummaryItem("gvAPInvApproved","VARIANCE","Sum_VARTOTAL","Sum","","","n")
	Gui.frmAPAutomationIndex.gsgcApproved.AddSummaryItem("gvAPInvApproved","InvVarTotal","Sum_INVVARTOTAL","Sum","","","n")
	
	
	gui.frmAPAutomationIndex.gsgcSaved.AddGridviewFromDatatable("gvAPInvSaved","dtAPInvSaved")
	
	gui.frmAPAutomationIndex.gsgcSaved.SetColumnProperty("gvAPInvSaved", "NOTES", "AllowEdit", False)
	gui.frmAPAutomationIndex.gsgcSaved.SetColumnProperty("gvAPInvSaved", "NOTES", "Caption", "Notes")
	Gui.frmAPAutomationIndex.gsgcSaved.SetColumnProperty("gvAPInvSaved", "NOTES","HeaderFontBold",true)
	gui.frmAPAutomationIndex.gsgcSaved.SetColumnProperty("gvAPInvSaved", "NOTES", "ReadOnly", True)
	Gui.frmAPAutomationIndex.gsgcSaved.SetColumnProperty("gvAPInvSaved", "NOTES","HeaderHAlignment","Center")
	gui.frmAPAutomationIndex.gsgcSaved.SetColumnProperty("gvAPInvSaved", "NOTES", "Visible", False)
	gui.frmAPAutomationIndex.gsgcSaved.SetColumnProperty("gvAPInvSaved", "VendName", "AllowEdit", False)
	Gui.frmAPAutomationIndex.gsgcSaved.SetColumnProperty("gvAPInvSaved", "VendName","Caption","Vendor")
	Gui.frmAPAutomationIndex.gsgcSaved.SetColumnProperty("gvAPInvSaved", "VendName","HeaderFontBold",true)
	Gui.frmAPAutomationIndex.gsgcSaved.SetColumnProperty("gvAPInvSaved", "VendName","HeaderHAlignment","Center")
	gui.frmAPAutomationIndex.gsgcSaved.SetColumnProperty("gvAPInvSaved", "InvcNumb", "AllowEdit", False)
	Gui.frmAPAutomationIndex.gsgcSaved.SetColumnProperty("gvAPInvSaved", "InvcNumb","Caption","Invoice #")
	Gui.frmAPAutomationIndex.gsgcSaved.SetColumnProperty("gvAPInvSaved", "InvcNumb","HeaderFontBold",true)
	Gui.frmAPAutomationIndex.gsgcSaved.SetColumnProperty("gvAPInvSaved", "InvcNumb","HeaderHAlignment","Center")
	Gui.frmAPAutomationIndex.gsgcSaved.SetColumnProperty("gvAPInvSaved", "InvcNumb","VisibleIndex","11")
	gui.frmAPAutomationIndex.gsgcSaved.SetColumnProperty("gvAPInvSaved", "DocSavedLocation","Visible", False)
	Gui.frmAPAutomationIndex.gsgcSaved.SetColumnProperty("gvAPInvSaved", "DocSavedLocation","HeaderHAlignment","Center")
	gui.frmAPAutomationIndex.gsgcSaved.SetColumnProperty("gvAPInvSaved", "GSTTOTAL", "Visible", False)
	Gui.frmAPAutomationIndex.gsgcSaved.SetColumnProperty("gvAPInvSaved", "GSTTOTAL","HeaderHAlignment","Center")
	gui.frmAPAutomationIndex.gsgcSaved.SetColumnProperty("gvAPInvSaved", "SUBTOTAL", "Visible", False)
	Gui.frmAPAutomationIndex.gsgcSaved.SetColumnProperty("gvAPInvSaved", "SUBTOTAL","HeaderHAlignment","Center")
	gui.frmAPAutomationIndex.gsgcSaved.SetColumnProperty("gvAPInvSaved", "DOCID", "Visible", False)
	Gui.frmAPAutomationIndex.gsgcSaved.SetColumnProperty("gvAPInvSaved", "DOCID","HeaderHAlignment","Center")
	gui.frmAPAutomationIndex.gsgcSaved.SetColumnProperty("gvAPInvSaved", "GRSTOTAL", "Visible", True)
	Gui.frmAPAutomationIndex.gsgcSaved.SetColumnProperty("gvAPInvSaved", "GRSTOTAL","Caption","Grand Total")
	Gui.frmAPAutomationIndex.gsgcSaved.SetColumnProperty("gvAPInvSaved", "GRSTOTAL","HeaderFontBold",true)
	Gui.frmAPAutomationIndex.gsgcSaved.SetColumnProperty("gvAPInvSaved", "GRSTOTAL","HeaderHAlignment","Center")
	gui.frmAPAutomationIndex.gsgcSaved.SetColumnProperty("gvAPInvSaved", "GRSTOTAL", "AllowEdit", False)
	gui.frmAPAutomationIndex.gsgcSaved.SetColumnProperty("gvAPInvSaved", "INVCDATE", "Visible", False)
	Gui.frmAPAutomationIndex.gsgcSaved.SetColumnProperty("gvAPInvSaved", "INVCDATE","HeaderHAlignment","Center")
	gui.frmAPAutomationIndex.gsgcSaved.SetColumnProperty("gvAPInvSaved", "GssStatus", "Visible", False)
	Gui.frmAPAutomationIndex.gsgcSaved.SetColumnProperty("gvAPInvSaved", "GssStatus","HeaderHAlignment","Center")
	gui.frmAPAutomationIndex.gsgcSaved.SetColumnProperty("gvAPInvSaved", "RejectReason", "Visible", False)
	Gui.frmAPAutomationIndex.gsgcSaved.SetColumnProperty("gvAPInvSaved", "RejectReason","HeaderHAlignment","Center")
	gui.frmAPAutomationIndex.gsgcSaved.SetColumnProperty("gvAPInvSaved", "POHEAD", "AllowEdit", False)
	gui.frmAPAutomationIndex.gsgcSaved.SetColumnProperty("gvAPInvSaved", "POHEAD", "Caption", "PO Head")
	Gui.frmAPAutomationIndex.gsgcSaved.SetColumnProperty("gvAPInvSaved", "POHEAD","HeaderFontBold",true)
	Gui.frmAPAutomationIndex.gsgcSaved.SetColumnProperty("gvAPInvSaved", "POHEAD","HeaderHAlignment","Center")
	Gui.frmAPAutomationIndex.gsgcSaved.SetColumnProperty("gvAPInvSaved", "POHEAD","VisibleIndex","10")
	gui.frmAPAutomationIndex.gsgcSaved.SetColumnProperty("gvAPInvSaved", "VENDCODE", "Visible", False)
	Gui.frmAPAutomationIndex.gsgcSaved.SetColumnProperty("gvAPInvSaved", "VENDCODE","HeaderHAlignment","Center")
	gui.frmAPAutomationIndex.gsgcSaved.SetColumnProperty("gvAPInvSaved", "ID", "Visible", False)
	Gui.frmAPAutomationIndex.gsgcSaved.AddSummaryItem("gvAPInvSaved","GRSTOTAL","Sum_GRSTOTAL","Sum","","","n")
	
	'Tab Invoice Processed
	gui.frmAPAutomationIndex.gsgcProcessed.AddGridviewFromDatatable("gvAPInvProcessed","dtAPInvProcessed")
	
	gui.frmAPAutomationIndex.gsgcProcessed.SetColumnProperty("gvAPInvProcessed", "NOTES", "AllowEdit", False)
	gui.frmAPAutomationIndex.gsgcProcessed.SetColumnProperty("gvAPInvProcessed", "NOTES", "Caption", "Notes")
	Gui.frmAPAutomationIndex.gsgcProcessed.SetColumnProperty("gvAPInvProcessed", "NOTES","HeaderFontBold",true)
	gui.frmAPAutomationIndex.gsgcProcessed.SetColumnProperty("gvAPInvProcessed", "NOTES", "ReadOnly", True)
	Gui.frmAPAutomationIndex.gsgcProcessed.SetColumnProperty("gvAPInvProcessed", "NOTES","HeaderHAlignment","Center")
	gui.frmAPAutomationIndex.gsgcProcessed.SetColumnProperty("gvAPInvProcessed", "NOTES", "Visible", False)
	
	gui.frmAPAutomationIndex.gsgcProcessed.SetColumnProperty("gvAPInvProcessed", "VENDCODE", "AllowEdit", False)
	gui.frmAPAutomationIndex.gsgcProcessed.SetColumnProperty("gvAPInvProcessed", "VENDCODE", "Caption", "Vendor #")
	Gui.frmAPAutomationIndex.gsgcProcessed.SetColumnProperty("gvAPInvProcessed", "VENDCODE","HeaderFontBold",true)
	Gui.frmAPAutomationIndex.gsgcProcessed.SetColumnProperty("gvAPInvProcessed", "VENDCODE","HeaderHAlignment","Center")
	gui.frmAPAutomationIndex.gsgcProcessed.SetColumnProperty("gvAPInvProcessed", "VendName", "AllowEdit", False)
	Gui.frmAPAutomationIndex.gsgcProcessed.SetColumnProperty("gvAPInvProcessed", "VendName","Caption","Vendor")
	Gui.frmAPAutomationIndex.gsgcProcessed.SetColumnProperty("gvAPInvProcessed", "VendName","HeaderFontBold",true)
	Gui.frmAPAutomationIndex.gsgcProcessed.SetColumnProperty("gvAPInvProcessed", "VendName","HeaderHAlignment","Center")
	gui.frmAPAutomationIndex.gsgcProcessed.SetColumnProperty("gvAPInvProcessed", "InvcNumb", "AllowEdit", False)
	Gui.frmAPAutomationIndex.gsgcProcessed.SetColumnProperty("gvAPInvProcessed", "InvcNumb","Caption","Invoice #")
	Gui.frmAPAutomationIndex.gsgcProcessed.SetColumnProperty("gvAPInvProcessed", "InvcNumb","HeaderFontBold",true)
	Gui.frmAPAutomationIndex.gsgcProcessed.SetColumnProperty("gvAPInvProcessed", "InvcNumb","HeaderHAlignment","Center")
	gui.frmAPAutomationIndex.gsgcProcessed.SetColumnProperty("gvAPInvProcessed", "DocSavedLocation",   "Visible", False)
	Gui.frmAPAutomationIndex.gsgcProcessed.SetColumnProperty("gvAPInvProcessed", "DocSavedLocation","HeaderHAlignment","Center")
	gui.frmAPAutomationIndex.gsgcProcessed.SetColumnProperty("gvAPInvProcessed", "GSTTOTAL", "Visible", False)
	Gui.frmAPAutomationIndex.gsgcProcessed.SetColumnProperty("gvAPInvProcessed", "GSTTOTAL","HeaderHAlignment","Center")
	gui.frmAPAutomationIndex.gsgcProcessed.SetColumnProperty("gvAPInvProcessed", "SUBTOTAL", "Visible", False)
	Gui.frmAPAutomationIndex.gsgcProcessed.SetColumnProperty("gvAPInvProcessed", "SUBTOTAL","HeaderHAlignment","Center")
	gui.frmAPAutomationIndex.gsgcProcessed.SetColumnProperty("gvAPInvProcessed", "DOCID", "Visible", False)
	Gui.frmAPAutomationIndex.gsgcProcessed.SetColumnProperty("gvAPInvProcessed", "DOCID","HeaderHAlignment","Center")
	gui.frmAPAutomationIndex.gsgcProcessed.SetColumnProperty("gvAPInvProcessed", "GRSTOTAL", "Visible", False)
	Gui.frmAPAutomationIndex.gsgcProcessed.SetColumnProperty("gvAPInvProcessed", "GRSTOTAL","HeaderHAlignment","Center")
	gui.frmAPAutomationIndex.gsgcProcessed.SetColumnProperty("gvAPInvProcessed", "INVCDATE", "Visible", False)
	Gui.frmAPAutomationIndex.gsgcProcessed.SetColumnProperty("gvAPInvProcessed", "INVCDATE","HeaderHAlignment","Center")
	gui.frmAPAutomationIndex.gsgcProcessed.SetColumnProperty("gvAPInvProcessed", "GssStatus", "Visible", False)
	Gui.frmAPAutomationIndex.gsgcProcessed.SetColumnProperty("gvAPInvProcessed", "GssStatus","HeaderHAlignment","Center")
	gui.frmAPAutomationIndex.gsgcProcessed.SetColumnProperty("gvAPInvProcessed", "RejectReason", "Visible", False)
	Gui.frmAPAutomationIndex.gsgcProcessed.SetColumnProperty("gvAPInvProcessed", "RejectReason","HeaderHAlignment","Center")
	gui.frmAPAutomationIndex.gsgcProcessed.SetColumnProperty("gvAPInvProcessed", "POHEAD", "AllowEdit", False)
	gui.frmAPAutomationIndex.gsgcProcessed.SetColumnProperty("gvAPInvProcessed", "POHEAD", "Caption", "PO Head")
	Gui.frmAPAutomationIndex.gsgcProcessed.SetColumnProperty("gvAPInvProcessed", "POHEAD","HeaderFontBold",true)
	gui.frmAPAutomationIndex.gsgcProcessed.SetColumnProperty("gvAPInvProcessed", "ID", "Visible", False)
	Gui.frmAPAutomationIndex.gsgcProcessed.SetColumnProperty("gvAPInvProcessed", "PROCESSEDDATE","HeaderHAlignment","Center")
	gui.frmAPAutomationIndex.gsgcProcessed.SetColumnProperty("gvAPInvProcessed", "PROCESSEDDATE", "AllowEdit", False)
	Gui.frmAPAutomationIndex.gsgcProcessed.SetColumnProperty("gvAPInvProcessed", "PROCESSEDDATE","Visible",false)
	
	'Mid Section
	'Receivers
	gui.frmAPAutomationIndex.gsgcRecLineItems.AddGridviewFromDatatable("gvRecLines","dtRecLines")
	gui.frmAPAutomationIndex.gsgcRecLineItems.SetGridviewProperty("gvRecLines", "AllowDeleteRows",True)
	gui.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "QTY_RECEIVED_ORIGINAL", "Visible", False)
	gui.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "VAT_RULE", "Visible", False)
	gui.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "SelectLine", "VisibleIndex","0")
	gui.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "SelectLine", "AllowEdit", True)
	gui.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "SelectLine", "Readonly", False)
	gui.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "SelectLine", "Caption", "Select")
	Gui.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "SelectLine","HeaderFontBold",true)
	Gui.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "SelectLine","HeaderHAlignment","Center")
	Gui.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "SelectLine","MinWidth","75")
	gui.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "Part", "AllowEdit", True)
	gui.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "Part", "Readonly", False)
	gui.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "Part", "Caption", "Part")
	Gui.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "Part","HeaderFontBold",true)
	Gui.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "Part","HeaderHAlignment","Center")
	Gui.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "Part","MinWidth","150")
	
	gui.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "VENDOR", "AllowEdit", True)
	gui.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "VENDOR", "Readonly", False)
	gui.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "VENDOR", "Caption", "Vendor")
	Gui.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "VENDOR","HeaderFontBold",true)
	Gui.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "VENDOR","HeaderHAlignment","Center")
	Gui.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "VENDOR","MinWidth","50")
	
	gui.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "NAME_VENDOR", "AllowEdit", True)
	gui.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "NAME_VENDOR", "Readonly", False)
	gui.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "NAME_VENDOR", "Caption", "Vendor name")
	Gui.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "NAME_VENDOR","HeaderFontBold",true)
	Gui.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "NAME_VENDOR","HeaderHAlignment","Center")
	Gui.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "NAME_VENDOR","MinWidth","150")
	
	gui.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "PSearch", "Caption", "Part")
	Gui.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "PSearch","HeaderFontBold",true)
	Gui.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "PSearch","Icon","BROWSE")
	Gui.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "PSearch","AllowEdit",False)
	Gui.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "PSearch","HeaderHAlignment","Center")
	Gui.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "PSearch","MinWidth","50")
	Gui.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "PSearch","Visible","False")
	gui.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "GLSearch", "Caption", "GL")
	Gui.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "GLSearch","HeaderFontBold",true)
	Gui.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "GLSearch","Icon","BROWSE")
	Gui.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "GLSearch","AllowEdit",False)
	Gui.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "GLSearch","HeaderHAlignment","Center")
	Gui.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "GLSearch","MinWidth","50")
	Gui.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "GLSearch","Visible","False")
	gui.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "TCSearch", "Caption", "Tax")
	Gui.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "TCSearch","HeaderFontBold",true)
	Gui.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "TCSearch","Icon","BROWSE")
	Gui.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "TCSearch","AllowEdit",False)
	Gui.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "TCSearch","HeaderHAlignment","Center")
	Gui.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "TCSearch","MinWidth","50")
	Gui.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "TCSearch","Visible","False")
	gui.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "QTY_RECEIVED", "AllowEdit", True)
	gui.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "QTY_RECEIVED", "Readonly", False)
	gui.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "QTY_RECEIVED", "Caption", "Qty")
	Gui.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "QTY_RECEIVED","HeaderFontBold",true)
	Gui.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "QTY_RECEIVED","HeaderHAlignment","Center")
	Gui.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "QTY_RECEIVED","MinWidth","75")
	gui.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "PO_LINE", "Visible", False)
	gui.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "PO_LINE", "AllowEdit", True)
	gui.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "PO_LINE", "Readonly", False)
	gui.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "PO_LINE", "Caption", "PO Line's")
	Gui.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "PO_LINE","HeaderFontBold",true)
	Gui.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "PO_LINE","HeaderHAlignment","Center")
	Gui.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "PO_LINE","MinWidth","75")
	gui.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "RECEIVED_AMT", "AllowEdit", False)
	gui.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "RECEIVED_AMT", "Readonly", True)
	gui.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "RECEIVED_AMT", "Caption", "Receipt Amt.")
	Gui.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "RECEIVED_AMT","HeaderFontBold",true)
	Gui.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "RECEIVED_AMT","HeaderHAlignment","Center")
	Gui.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "RECEIVED_AMT","MinWidth","75")
	Gui.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "RECEIVED_AMT","DisplayCustomNumeric","$###,###.00")
	gui.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "ACTUAL_AMT", "AllowEdit", True)
	gui.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "ACTUAL_AMT", "Readonly", False)
	gui.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "ACTUAL_AMT", "Caption", "Actual Amt.")
	Gui.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "ACTUAL_AMT","HeaderFontBold",true)
	Gui.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "ACTUAL_AMT","HeaderHAlignment","Center")
	Gui.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "ACTUAL_AMT","MinWidth","75")
	Gui.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "ACTUAL_AMT","DisplayCustomNumeric","$###,###.00")
	gui.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "EXCH_COST", "AllowEdit", True)
	gui.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "EXCH_COST", "Readonly", False)
	gui.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "EXCH_COST", "Caption", "Exch. Ext.")
	Gui.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "EXCH_COST","HeaderFontBold",true)
	Gui.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "EXCH_COST","HeaderHAlignment","Center")
	Gui.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "EXCH_COST","MinWidth","75")
	Gui.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "EXCH_COST","DisplayCustomNumeric","$###,###.00")
	gui.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "EXCH_RATE", "AllowEdit", True)
	gui.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "EXCH_RATE", "Readonly", False)
	gui.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "EXCH_RATE", "Caption", "Exch. Rate")
	Gui.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "EXCH_RATE","HeaderFontBold",true)
	Gui.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "EXCH_RATE","HeaderHAlignment","Center")
	Gui.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "EXCH_RATE","MinWidth","75")
	Gui.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "EXCH_RATE","DisplayCustomNumeric","###,###.00000")
	gui.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "GL_ACCOUNT", "AllowEdit", True)
	gui.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "GL_ACCOUNT", "Readonly", False)
	gui.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "GL_ACCOUNT", "Caption", "GL Account")
	Gui.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "GL_ACCOUNT","HeaderFontBold",true)
	Gui.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "GL_ACCOUNT","HeaderHAlignment","Center")
	Gui.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "GL_ACCOUNT","MinWidth","75")
	gui.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "JOB", "AllowEdit", True)
	gui.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "JOB", "Readonly", False)
	gui.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "JOB", "Caption", "Job")
	Gui.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "JOB","HeaderFontBold",true)
	Gui.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "JOB","HeaderHAlignment","Center")
	Gui.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "JOB","MinWidth","75")
	gui.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "SUFFIX", "AllowEdit", True)
	gui.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "SUFFIX", "Readonly", False)
	gui.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "SUFFIX", "Caption", "Suffix")
	Gui.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "SUFFIX","HeaderFontBold",true)
	Gui.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "SUFFIX","HeaderHAlignment","Center")
	Gui.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "SUFFIX","MinWidth","75")
	gui.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "SEQ", "AllowEdit", True)
	gui.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "SEQ", "Readonly", False)
	gui.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "SEQ", "Caption", "Seq.")
	Gui.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "SEQ","HeaderFontBold",true)
	Gui.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "SEQ","HeaderHAlignment","Center")
	Gui.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "SEQ","MinWidth","75")
	gui.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "LOCATION", "Visible", False)
	gui.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "LOCATION", "AllowEdit", True)
	gui.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "LOCATION", "Readonly", False)
	gui.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "LOCATION", "Caption", "Location")
	Gui.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "LOCATION","HeaderFontBold",true)
	Gui.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "LOCATION","HeaderHAlignment","Center")
	Gui.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "LOCATION","MinWidth","75")
	gui.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "TAXABLE", "Visible", True)
	gui.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "TAXABLE", "AllowEdit", True)
	gui.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "TAXABLE", "Readonly", False)
	gui.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "TAXABLE", "Caption", "Taxable")
	Gui.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "TAXABLE","HeaderFontBold",true)
	Gui.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "TAXABLE","HeaderHAlignment","Center")
	Gui.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "TAXABLE","MinWidth","75")
	gui.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "TAX_CODE", "AllowEdit", True)
	gui.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "TAX_CODE", "Readonly", False)
	gui.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "TAX_CODE", "Caption", "Tax Code")
	Gui.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "TAX_CODE","HeaderFontBold",true)
	Gui.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "TAX_CODE","HeaderHAlignment","Center")
	Gui.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "TAX_CODE","MinWidth","75")
	'Selected, Part, Qty, Line, Ext Cost, Gl Account, Job, Suffix, Seq, Location, Taxable, Tax Code, Receiver
	
	gui.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "PURCHASE_ORDER", "Visible", True)
	gui.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "PURCHASE_ORDER", "AllowEdit", True)
	gui.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "PURCHASE_ORDER", "Readonly", False)
	gui.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "PURCHASE_ORDER", "Caption", "PO#")
	Gui.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "PURCHASE_ORDER","HeaderFontBold",true)
	Gui.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "PURCHASE_ORDER","HeaderHAlignment","Center")
	Gui.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "PURCHASE_ORDER","MinWidth","75")
	gui.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "RECEIVER_NO", "AllowEdit", True)
	gui.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "RECEIVER_NO", "Readonly", False)
	gui.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "RECEIVER_NO", "Caption", "Receiver")
	Gui.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "RECEIVER_NO","HeaderFontBold",true)
	Gui.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "RECEIVER_NO","HeaderHAlignment","Center")
	Gui.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "RECEIVER_NO","MinWidth","75")
	gui.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "DESCRIPTION", "AllowEdit", True)
	gui.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "DESCRIPTION", "Readonly", False)
	gui.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "DESCRIPTION", "Caption", "Description")
	Gui.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "DESCRIPTION","HeaderFontBold",true)
	Gui.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "DESCRIPTION","HeaderHAlignment","Center")
	Gui.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "DESCRIPTION","MinWidth","200")


	'bottom seaction
	f.Intrinsic.Control.CallSub(setPropertiesPOLines)
	f.Intrinsic.Control.CallSub(setPropertiesAPInvoices)
	

f.Intrinsic.Control.Catch
	F.Intrinsic.UI.Msgbox(V.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.setProperties.End

Program.Sub.setPropertiesAPInvoices.Start
f.Intrinsic.Control.Try
	gui.frmAPAutomationIndex.gsgcAPInvoices.visible(false)
	gui.frmAPAutomationIndex.gsgcAPInvoices.AddGridviewFromDatatable("gvAPInvoices","dtAPInvoices")	
	Gui.frmAPAutomationIndex.gsgcAPInvoices.SetGridViewProperty("gvAPInvoices","OptionsViewShowGroupPanel",True)
	gui.frmAPAutomationIndex.gsgcAPInvoices.SetGridviewProperty("gvAPInvoices","OptionsFindAlwaysVisible",True)
	gui.frmAPAutomationIndex.gsgcAPInvoices.SetColumnProperty("gvAPInvoices", "AMT_INVOICE", "Caption", "Cost")
	Gui.frmAPAutomationIndex.gsgcAPInvoices.SetColumnProperty("gvAPInvoices", "AMT_INVOICE","HeaderFontBold",true)
	Gui.frmAPAutomationIndex.gsgcAPInvoices.SetColumnProperty("gvAPInvoices", "AMT_INVOICE","HeaderHAlignment","Center")
	Gui.frmAPAutomationIndex.gsgcAPInvoices.SetColumnProperty("gvAPInvoices", "AMT_INVOICE","DisplayCustomNumeric","$###,###.00")
	Gui.frmAPAutomationIndex.gsgcAPInvoices.SetColumnProperty("gvAPInvoices", "AMT_INVOICE","MinWidth","75")
	gui.frmAPAutomationIndex.gsgcAPInvoices.SetColumnProperty("gvAPInvoices", "AMT_INVOICE","AllowEdit","False")
	gui.frmAPAutomationIndex.gsgcAPInvoices.SetColumnProperty("gvAPInvoices", "INVOICE","Caption","Invoice")
	Gui.frmAPAutomationIndex.gsgcAPInvoices.SetColumnProperty("gvAPInvoices", "INVOICE","HeaderFontBold",true)
	gui.frmAPAutomationIndex.gsgcAPInvoices.SetColumnProperty("gvAPInvoices", "INVOICE","ReadOnly","True")
	gui.frmAPAutomationIndex.gsgcAPInvoices.SetColumnProperty("gvAPInvoices", "INVOICE","AllowEdit","False")
	Gui.frmAPAutomationIndex.gsgcAPInvoices.SetColumnProperty("gvAPInvoices", "INVOICE","HeaderHAlignment","Center")
	Gui.frmAPAutomationIndex.gsgcAPInvoices.SetColumnProperty("gvAPInvoices", "INVOICE","MinWidth","75")
	gui.frmAPAutomationIndex.gsgcAPInvoices.SetColumnProperty("gvAPInvoices", "VENDOR","Caption","Vendor")
	Gui.frmAPAutomationIndex.gsgcAPInvoices.SetColumnProperty("gvAPInvoices", "VENDOR","HeaderFontBold",true)
	gui.frmAPAutomationIndex.gsgcAPInvoices.SetColumnProperty("gvAPInvoices", "VENDOR","ReadOnly","True")
	gui.frmAPAutomationIndex.gsgcAPInvoices.SetColumnProperty("gvAPInvoices", "VENDOR","AllowEdit","False")
	Gui.frmAPAutomationIndex.gsgcAPInvoices.SetColumnProperty("gvAPInvoices", "VENDOR","HeaderHAlignment","Center")
	Gui.frmAPAutomationIndex.gsgcAPInvoices.SetColumnProperty("gvAPInvoices", "VENDOR","MinWidth","75")
	gui.frmAPAutomationIndex.gsgcAPInvoices.SetColumnProperty("gvAPInvoices", "PURCHASE_ORDER","Caption","Purchase Order")
	gui.frmAPAutomationIndex.gsgcAPInvoices.SetColumnProperty("gvAPInvoices", "PURCHASE_ORDER","HeaderFontBold",true)
	gui.frmAPAutomationIndex.gsgcAPInvoices.SetColumnProperty("gvAPInvoices", "PURCHASE_ORDER","CellForeColor",V.Color.Blue)
	gui.frmAPAutomationIndex.gsgcAPInvoices.SetColumnProperty("gvAPInvoices", "PURCHASE_ORDER","CellBackColor","LightYellow")
	gui.frmAPAutomationIndex.gsgcAPInvoices.SetColumnProperty("gvAPInvoices", "PURCHASE_ORDER","ReadOnly","True")
	gui.frmAPAutomationIndex.gsgcAPInvoices.SetColumnProperty("gvAPInvoices", "PURCHASE_ORDER","AllowEdit","False")
	Gui.frmAPAutomationIndex.gsgcAPInvoices.SetColumnProperty("gvAPInvoices", "PURCHASE_ORDER","HeaderHAlignment","Center")
	Gui.frmAPAutomationIndex.gsgcAPInvoices.SetColumnProperty("gvAPInvoices", "PURCHASE_ORDER","MinWidth","75")
	gui.frmAPAutomationIndex.gsgcAPInvoices.SetColumnProperty("gvAPInvoices", "DATE_INVOICE","Caption","Date Invoice")
	Gui.frmAPAutomationIndex.gsgcAPInvoices.SetColumnProperty("gvAPInvoices", "DATE_INVOICE","HeaderFontBold",true)
	gui.frmAPAutomationIndex.gsgcAPInvoices.SetColumnProperty("gvAPInvoices", "DATE_INVOICE","ReadOnly","True")
	gui.frmAPAutomationIndex.gsgcAPInvoices.SetColumnProperty("gvAPInvoices", "DATE_INVOICE","AllowEdit","False")
	Gui.frmAPAutomationIndex.gsgcAPInvoices.SetColumnProperty("gvAPInvoices", "DATE_INVOICE","HeaderHAlignment","Center")
	Gui.frmAPAutomationIndex.gsgcAPInvoices.SetColumnProperty("gvAPInvoices", "DATE_INVOICE","MinWidth","120")
	Gui.frmAPAutomationIndex.gsgcAPInvoices.SetColumnProperty("gvAPInvoices", "DATE_INVOICE","Displaycustomdatetime","d")
	gui.frmAPAutomationIndex.gsgcAPInvoices.visible(true)
f.Intrinsic.Control.Catch
	F.Intrinsic.UI.Msgbox(V.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.setPropertiesAPInvoices.End

Program.Sub.setPropertiesPOLines.Start
f.Intrinsic.Control.Try
	'bottom seaction
	gui.frmAPAutomationIndex.gsgcPOLines.visible(false)
	gui.frmAPAutomationIndex.gsgcPOLines.AddGridviewFromDatatable("gvPOLines","dtPOSelLines")	
	Gui.frmAPAutomationIndex.gsgcPOLines.SetGridViewProperty("gvPOLines","OptionsViewShowGroupPanel",True)
	gui.frmAPAutomationIndex.gsgcPOLines.SetGridviewProperty("gvPOLines","OptionsFindAlwaysVisible",True)
	gui.frmAPAutomationIndex.gsgcPOLines.SetColumnProperty("gvPOLines", "Vendor", "Visible", "False")
	gui.frmAPAutomationIndex.gsgcPOLines.SetColumnProperty("gvPOLines", "COST", "Caption", "Cost")
	Gui.frmAPAutomationIndex.gsgcPOLines.SetColumnProperty("gvPOLines", "COST","HeaderFontBold",true)
	Gui.frmAPAutomationIndex.gsgcPOLines.SetColumnProperty("gvPOLines", "COST","HeaderHAlignment","Center")
	Gui.frmAPAutomationIndex.gsgcPOLines.SetColumnProperty("gvPOLines", "COST","DisplayCustomNumeric","$###,###.00")
	Gui.frmAPAutomationIndex.gsgcPOLines.SetColumnProperty("gvPOLines", "COST","MinWidth","75")
	gui.frmAPAutomationIndex.gsgcPOLines.SetColumnProperty("gvPOLines", "COST","AllowEdit","False")
	gui.frmAPAutomationIndex.gsgcPOLines.SetColumnProperty("gvPOLines", "PURCHASE_ORDER","Caption","Purchase Order")
	Gui.frmAPAutomationIndex.gsgcPOLines.SetColumnProperty("gvPOLines", "PURCHASE_ORDER","HeaderFontBold",true)
	gui.frmAPAutomationIndex.gsgcPOLines.SetColumnProperty("gvPOLines", "PURCHASE_ORDER","CellForeColor",V.Color.Blue)
	gui.frmAPAutomationIndex.gsgcPOLines.SetColumnProperty("gvPOLines", "PURCHASE_ORDER","CellBackColor","LightYellow")
	gui.frmAPAutomationIndex.gsgcPOLines.SetColumnProperty("gvPOLines", "PURCHASE_ORDER","ReadOnly","True")
	gui.frmAPAutomationIndex.gsgcPOLines.SetColumnProperty("gvPOLines", "PURCHASE_ORDER","AllowEdit","False")
	Gui.frmAPAutomationIndex.gsgcPOLines.SetColumnProperty("gvPOLines", "PURCHASE_ORDER","HeaderHAlignment","Center")
	Gui.frmAPAutomationIndex.gsgcPOLines.SetColumnProperty("gvPOLines", "PURCHASE_ORDER","MinWidth","75")
	gui.frmAPAutomationIndex.gsgcPOLines.SetColumnProperty("gvPOLines", "RECORD_NO", "Caption", "Record #")
	Gui.frmAPAutomationIndex.gsgcPOLines.SetColumnProperty("gvPOLines", "RECORD_NO","HeaderFontBold",true)
	gui.frmAPAutomationIndex.gsgcPOLines.SetColumnProperty("gvPOLines", "RECORD_NO","CellForeColor",V.Color.Blue)
	gui.frmAPAutomationIndex.gsgcPOLines.SetColumnProperty("gvPOLines", "RECORD_NO","CellBackColor","LightYellow")
	gui.frmAPAutomationIndex.gsgcPOLines.SetColumnProperty("gvPOLines", "RECORD_NO","ReadOnly","True")
	gui.frmAPAutomationIndex.gsgcPOLines.SetColumnProperty("gvPOLines", "RECORD_NO","AllowEdit","False")
	Gui.frmAPAutomationIndex.gsgcPOLines.SetColumnProperty("gvPOLines", "RECORD_NO","HeaderHAlignment","Center")
	Gui.frmAPAutomationIndex.gsgcPOLines.SetColumnProperty("gvPOLines", "RECORD_NO","MinWidth","75")
	gui.frmAPAutomationIndex.gsgcPOLines.SetColumnProperty("gvPOLines", "DESCRIPTION", "Caption", "Description")
	Gui.frmAPAutomationIndex.gsgcPOLines.SetColumnProperty("gvPOLines", "DESCRIPTION","HeaderFontBold",true)
	Gui.frmAPAutomationIndex.gsgcPOLines.SetColumnProperty("gvPOLines", "DESCRIPTION","HeaderHAlignment","Center")
	Gui.frmAPAutomationIndex.gsgcPOLines.SetColumnProperty("gvPOLines", "DESCRIPTION","MinWidth","200")
	gui.frmAPAutomationIndex.gsgcPOLines.SetColumnProperty("gvPOLines", "DESCRIPTION","AllowEdit","False")
	gui.frmAPAutomationIndex.gsgcPOLines.SetColumnProperty("gvPOLines", "QTY_Order", "Caption", "Quantity")
	Gui.frmAPAutomationIndex.gsgcPOLines.SetColumnProperty("gvPOLines", "QTY_Order","HeaderFontBold",true)
	Gui.frmAPAutomationIndex.gsgcPOLines.SetColumnProperty("gvPOLines", "QTY_Order","HeaderHAlignment","Center")
	Gui.frmAPAutomationIndex.gsgcPOLines.SetColumnProperty("gvPOLines", "QTY_Order","MinWidth","75")
	gui.frmAPAutomationIndex.gsgcPOLines.SetColumnProperty("gvPOLines", "QTY_Order","AllowEdit","False")
	gui.frmAPAutomationIndex.gsgcPOLines.SetColumnProperty("gvPOLines", "EXTENSION", "Caption", "Extension")
	Gui.frmAPAutomationIndex.gsgcPOLines.SetColumnProperty("gvPOLines", "EXTENSION","HeaderFontBold",true)
	Gui.frmAPAutomationIndex.gsgcPOLines.SetColumnProperty("gvPOLines", "EXTENSION","HeaderHAlignment","Center")
	Gui.frmAPAutomationIndex.gsgcPOLines.SetColumnProperty("gvPOLines", "EXTENSION","DisplayCustomNumeric","$###,###.00")
	Gui.frmAPAutomationIndex.gsgcPOLines.SetColumnProperty("gvPOLines", "EXTENSION","MinWidth","75")
	gui.frmAPAutomationIndex.gsgcPOLines.SetColumnProperty("gvPOLines", "EXTENSION", "AllowEdit", False)
	gui.frmAPAutomationIndex.gsgcPOLines.SetColumnProperty("gvPOLines", "UM_PURCHASING", "Caption", "Unit Measure")
	Gui.frmAPAutomationIndex.gsgcPOLines.SetColumnProperty("gvPOLines", "UM_PURCHASING","HeaderFontBold",true)
	Gui.frmAPAutomationIndex.gsgcPOLines.SetColumnProperty("gvPOLines", "UM_PURCHASING","HeaderHAlignment","Center")
	Gui.frmAPAutomationIndex.gsgcPOLines.SetColumnProperty("gvPOLines", "UM_PURCHASING","MinWidth","75")
	gui.frmAPAutomationIndex.gsgcPOLines.SetColumnProperty("gvPOLines", "UM_PURCHASING","AllowEdit","False")
	gui.frmAPAutomationIndex.gsgcPOLines.SetColumnProperty("gvPOLines", "PART", "Caption", "Part")
	Gui.frmAPAutomationIndex.gsgcPOLines.SetColumnProperty("gvPOLines", "PART","HeaderFontBold",true)
	Gui.frmAPAutomationIndex.gsgcPOLines.SetColumnProperty("gvPOLines", "PART","HeaderHAlignment","Center")
	gui.frmAPAutomationIndex.gsgcPOLines.SetColumnProperty("gvPOLines", "PART","ReadOnly","True")
	gui.frmAPAutomationIndex.gsgcPOLines.SetColumnProperty("gvPOLines", "PART","AllowEdit","False")
	gui.frmAPAutomationIndex.gsgcPOLines.SetColumnProperty("gvPOLines", "PART","CellForeColor",V.Color.Blue)
	gui.frmAPAutomationIndex.gsgcPOLines.SetColumnProperty("gvPOLines", "PART","CellBackColor","LightYellow")
	Gui.frmAPAutomationIndex.gsgcPOLines.SetColumnProperty("gvPOLines", "PART","MinWidth","75")
	gui.frmAPAutomationIndex.gsgcPOLines.visible(true)
f.Intrinsic.Control.Catch
	F.Intrinsic.UI.Msgbox(V.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.setPropertiesPOLines.End

#End Region ' Loadgv

Program.Sub.Comments.Start
${$5$}$20.1.8809.21412$}$1
${$6$}$rfisher$}$20240312164349926$}$b10QVt26jzz6R0J+Y14BUjvWwMpAez4tPrPYtUM+wY1gRE8yXZt1kBj2rVPvyjBzh+X8EMlzQgg=
Program.Sub.Comments.End